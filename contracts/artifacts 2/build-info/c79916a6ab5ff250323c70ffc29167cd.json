{"id":"c79916a6ab5ff250323c70ffc29167cd","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"src/Card.sol":{"content":"pragma solidity ^0.8;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Card is Ownable {\n    // string public name;\n    uint private id;\n    string private imgLink;\n\n    constructor(uint _id, string memory _imgLink) Ownable(msg.sender) {\n        id = _id;\n        imgLink = _imgLink;\n    }\n\n    function getId() public view returns (uint) {\n        return id;\n    }\n\n    function getImgLink() public view returns (string memory) {\n        return imgLink;\n    }\n\n    function transferOwnership(address to) public override onlyOwner {\n        transferOwnership(to); // TODO : vérifier si ça fonctionne\n    }\n}"},"src/CardOwnership.sol":{"content":"pragma solidity ^0.8;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./Card.sol\";\nimport \"./GameCollection.sol\";\n\ncontract CardOwnership is Ownable, ERC721 {\n    mapping(uint => GameCollection) public cardCollections;\n    uint public collectionCount;\n    // mapping (uint => address) cardsApprovals;\n\n    constructor() Ownable(msg.sender) ERC721(\"Card\", \"CARD\") {\n    }\n\n    // // Récupère une carte\n    // function mint(address to, uint tokenId, uint collectionNumber) public {\n    //     require(collectionNumber < collectionCount, \"CardOwnership: collection does not exist\");\n    //     uint numberOfCards = cardCollections[collectionNumber].getCardCount();\n\n    //     for (uint i = 0; i < numberOfCards; i++) {\n    //         if (cardCollections[collectionNumber].cards[i].owner() == address(0)) {\n    //             // _safeMint(to, tokenId);\n    //             cardCollections[collectionNumber].cards[i].transferOwnership(to);\n    //             break;\n    //         }\n    //     }\n    // }\n    \n    // Donne le nombre de cartes d'un utilisateur\n    function balanceOf(address owner) public view override returns (uint) {\n        uint nb = 0;\n        for (uint i = 0; i < collectionCount; i++) {\n            nb += cardCollections[i].balanceOf(owner);\n        }\n        return nb;\n    }\n\n    // Donne le propriétaire d'une carte\n    function ownerOf(uint tokenId) public view override returns (address) {\n        for (uint256 i = 0; i < collectionCount; i++) {\n            address owner = cardCollections[i].ownerOf(tokenId);\n            if (owner != address(0))\n                return owner;\n        }\n        return address(0);\n    }\n\n    function getCollectionNbForCard(uint tokenId) public view returns (int) {\n        for (int i = 0; i < int(collectionCount); i++) {\n            if (cardCollections[uint(i)].isCardInCollection(tokenId)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    // Transfère une carte d'un utilisateur à un autre\n    function transferFrom(address from, address to, uint tokenId) public override {\n        require(from == ownerOf(tokenId), \"CardOwnership: transfer of token that is not own\");\n        require(to != address(0), \"CardOwnership: transfer to the zero address\");\n        int collectionNumber = getCollectionNbForCard(tokenId);\n        require(collectionNumber != -1, \"CardOwnership: card does not exist\");\n\n        cardCollections[uint(collectionNumber)].getCard(tokenId).transferOwnership(to);\n        emit Transfer(from, to, tokenId);\n    }\n\n    // Récupère des cartes\n    function mintSomeCards(address to, uint quantity, uint collectionNumber) public {\n        require(collectionNumber < collectionCount, \"CardOwnership: collection does not exist\");\n\n        cardCollections[collectionNumber].mintSomeCards(to, quantity);\n    }\n\n    // Récupère une carte\n    function mint(address to, uint tokenId, uint collectionNumber) public {\n        require(collectionNumber < collectionCount, \"CardOwnership: collection does not exist\");\n\n        cardCollections[collectionNumber].mint(to, tokenId);\n    }\n\n    /*function safeTransferFrom(address from, address to, uint tokenId, bytes data){\n\n    }\n\n    function safeTransferFrom(address from, address to, uint tokenId){\n\n    }\n\n    function approve(address to, uint tokenId) public view onlyOwner() {\n        cardsApprovals[tokenId] = to;\n        Approval(msg.sender, to, tokenId);\n    }\n\n    function setApprovalForAll(address operator, bool approved) public view {\n        ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    function getApproved(uint tokenId){\n\n    }\n\n    function isApprovedForAll(address owner, bool operator){\n\n    }*/\n\n    function addACard(uint cardNumber) external returns (address) {\n        GameCollection gameCollections = new GameCollection(\"Wizard\", 0);\n\t\tcardCollections[collectionCount] = gameCollections;\n\t\tcollectionCount++;\n\t\tcardCollections[0].addCard(cardNumber, \"https://images.pokemontcg.io/xy1/1.png\");\n        Card c = cardCollections[0].getCard(cardNumber);\n        \n        // return c.owner();\n        return address(666);\n\t}\n}"},"src/GameCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8;\n\nimport \"./Card.sol\";\n\ncontract GameCollection {\n\tstring public name;\n\tuint public cardCount;\n\tmapping(uint => Card) public cards;\n\n\tconstructor(string memory _name, uint _cardCount) {\n\t\tname = _name;\n\t\tcardCount = _cardCount;\n\t}\n\n\t// Donne le nombre de carte de la collection\n\tfunction getCardCount() public view returns (uint) {\n\t\treturn cardCount;\n\t}\n\n\t// Donne le nom de la collection\n\tfunction getName() public view returns (string memory) {\n\t\treturn name;\n\t}\n\n\tfunction isCardInCollection(uint tokenId) public view returns (bool) {\n\t\tfor (uint i = 0; i < cardCount; i++) {\n\t\t\tif (cards[i].getId() == tokenId) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction getCard(uint tokenId) public view returns (Card) {\n\t\treturn cards[tokenId];\n\t}\n\n\t// Donne le nombre de carte d'un utilisateur\n\tfunction balanceOf(address owner) public view returns (uint) {\n\t\tuint nb = 0;\n\t\tfor (uint i = 0; i < cardCount; i++) {\n\t\t\tif (cards[i].owner() == owner) {\n\t\t\t\tnb++;\n\t\t\t}\n\t\t}\n\t\treturn nb;\n\t}\n\n\t// Donne l'adresse du propriétaire d'une carte\n\tfunction ownerOf(uint tokenId) public view returns (address) {\n\t\tfor (uint i = 0; i < cardCount; i++) {\n\t\t\tif (cards[i].getId() == tokenId) {\n\t\t\t\treturn cards[i].owner();\n\t\t\t}\n\t\t}\n\t}\n\n\t// Ajoute une carte à la collection\n\tfunction addCard(uint id, string memory imgLink) public {\n\t\tcards[cardCount++] = new Card(id, imgLink);\n\t}\n\n\t// Mint une carte de la collection\n\tfunction mint(address to) public {\n\t\tfor (uint i = 0; i < cardCount; i++) {\n\t\t\tif (cards[i].owner() == address(0)) {\n\t\t\t\tcards[i].transferOwnership(to);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Mint une carte précise de la collection\n\tfunction mint(address to, uint tokenId) public {\n\t\tfor (uint i = 0; i < cardCount; i++) {\n\t\t\tif (cards[i].owner() == address(0) && cards[i].getId() == tokenId) {\n\t\t\t\tcards[i].transferOwnership(to);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Donne un nombre de carte définit à un utilisateur\n\tfunction mintSomeCards(address to, uint quantity) public {\n\t\tfor (uint i = 0; i < quantity; i++) { //TODO : ajouter des sécurités il ne faut pas ajouter une carte s'il n'y en a plus assez à mint\n\t\t\tmint(to);\n\t\t}\n\t}\n}\n"},"src/Main.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8;\n\nimport \"./GameCollection.sol\";\nimport \"./CardOwnership.sol\";\n\ncontract Main is CardOwnership {\n\taddress private administrateur;\n\n\t/*int private _count; // la quantité de collections de cartes\n\tmapping(int => GameCollection) private gameCollections; // les différentes extensions de cartes */\n\tconstructor() {\n\t\tadministrateur = msg.sender;\n\t}\n\n\tfunction createGameCollection(string calldata name, int cardCount) external {\n\t\tGameCollection gameCollections = new GameCollection(name, 0);\n\t\tcardCollections[collectionCount] = gameCollections;\n\t\tcollectionCount++;\n\t}\n\n\tfunction createGameCollection2() internal {\n\t\tGameCollection gameCollections = new GameCollection(\"Wizard\", 0);\n\t\tcardCollections[collectionCount] = gameCollections;\n\t\tcollectionCount++;\n\t}\n\n\t/*function addACard(uint cardNumber) external {\n\t\t// GameCollection gameCollection = cardCollections[collectionNumber];\n\n\t\tcreateGameCollection2();\n\t\t// Card card = new Card(cardNumber, \"https://images.pokemontcg.io/xy1/1.png\");\n\t\tcardCollections[0].addCard(cardNumber, \"https://images.pokemontcg.io/xy1/1.png\");\n\t\t// cardCollections[0].cards[0] = card;\n\t\t// cardCollections[0].cardCount++;\n\t\t// gameCollection.cardCount++;\n\t}*/\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/Card.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"src/Card.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/CardOwnership.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"src/CardOwnership.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> src/GameCollection.sol:51:54:\n   |\n51 | \tfunction ownerOf(uint tokenId) public view returns (address) {\n   | \t                                                    ^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":1154,"file":"src/GameCollection.sol","start":1147},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> src/CardOwnership.sol:114:9:\n    |\n114 |         Card c = cardCollections[0].getCard(cardNumber);\n    |         ^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":4072,"file":"src/CardOwnership.sol","start":4066},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Main.sol:16:54:\n   |\n16 | \tfunction createGameCollection(string calldata name, int cardCount) external {\n   | \t                                                    ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":467,"file":"src/Main.sol","start":454},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1478],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1479,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1478],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1478],"ERC165":[1757],"ERC721":[1293],"IERC165":[1769],"IERC721":[1410],"IERC721Errors":[237],"IERC721Metadata":[1456],"IERC721Receiver":[1428],"Strings":[1733]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1411,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1429,"src":"172:54:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1457,"src":"227:65:2","symbolAliases":[{"foreign":{"id":291,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"235:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1479,"src":"293:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"301:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1734,"src":"342:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"350:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1758,"src":"391:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"399:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"408:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":285,"src":"461:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"469:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["804:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"804:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"804:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["813:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"813:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"813:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["821:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"821:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"821:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["830:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"830:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"830:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["847:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"847:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"847:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"529:246:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,237,1456,1410,1757,1769,1478],"name":"ERC721","nameLocation":"794:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["873:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"873:7:2"},"nodeType":"UsingForDirective","src":"867:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"932:5:2","nodeType":"VariableDeclaration","scope":1293,"src":"917:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:2","nodeType":"VariableDeclaration","scope":1293,"src":"964:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:2","nodeType":"VariableDeclaration","scope":1293,"src":"993:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1009:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:2","nodeType":"VariableDeclaration","scope":1293,"src":"1051:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1067:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:2","nodeType":"VariableDeclaration","scope":1293,"src":"1109:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1125:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:2","nodeType":"VariableDeclaration","scope":1293,"src":"1175:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1191:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1216:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1437:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1447:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1455:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1447:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1470:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1480:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1470:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1268:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1407:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1393:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1414:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1437:0:2"},"scope":1293,"src":"1381:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1756,1768],"body":{"id":384,"nodeType":"Block","src":"1669:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1698:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1718:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1410","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1754:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1774:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1456_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1456_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1456","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1842:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1293_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1756,"src":"1818:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1679:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1500:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1637:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"1637:6:2"},{"id":360,"name":"IERC165","nameLocations":["1645:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"1645:7:2"}],"src":"1628:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1588:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1663:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:2"},"scope":1293,"src":"1561:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":412,"nodeType":"Block","src":"1992:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2006:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2002:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2027:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2048:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"2041:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2105:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2098:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1867:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1947:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1939:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1983:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:2"},"scope":1293,"src":"1920:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":425,"nodeType":"Block","src":"2257:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2274:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2267:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2134:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2202:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2248:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:2"},"scope":1293,"src":"2185:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1441],"body":{"id":434,"nodeType":"Block","src":"2425:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2442:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2435:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2309:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2378:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2410:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:2"},"scope":1293,"src":"2365:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1447],"body":{"id":443,"nodeType":"Block","src":"2580:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2597:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2590:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2460:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2533:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2565:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:2"},"scope":1293,"src":"2518:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1455],"body":{"id":479,"nodeType":"Block","src":"2756:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2780:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2766:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2766:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2799:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2823:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2856:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:2","memberName":"length","nodeType":"MemberAccess","src":"2850:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2892:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"2901:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2843:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2617:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2695:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2741:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:2"},"scope":1293,"src":"2677:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3240:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3250:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2938:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3191:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3225:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:2"},"scope":1293,"src":"3174:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1383],"body":{"id":504,"nodeType":"Block","src":"3384:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3403:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3416:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1096,"src":"3394:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3394:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3272:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3348:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3340:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3352:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3384:0:2"},"scope":1293,"src":"3323:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":521,"nodeType":"Block","src":"3573:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3597:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3583:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3583:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3623:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3616:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3442:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3518:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3564:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:2"},"scope":1293,"src":"3497:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":537,"nodeType":"Block","src":"3793:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3822:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3836:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3846:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3803:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3803:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3657:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3753:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3745:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3763:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3793:0:2"},"scope":1293,"src":"3718:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1409],"body":{"id":554,"nodeType":"Block","src":"4022:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4039:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4058:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4065:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4032:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3868:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3962:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3954:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3977:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3969:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4016:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:2"},"scope":1293,"src":"3928:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":600,"nodeType":"Block","src":"4223:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4237:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4233:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4255:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4276:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"4269:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4538:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4570:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4583:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4562:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4610:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4627:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4606:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4633:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4675:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4681:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4690:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4654:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4647:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4087:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4173:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4165:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4187:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4179:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4191:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4223:0:2"},"scope":1293,"src":"4143:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1365],"body":{"id":618,"nodeType":"Block","src":"4863:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4890:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4896:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,645],"referencedDeclaration":645,"src":"4873:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4873:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4727:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4821:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4813:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4835:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4827:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4839:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4863:0:2"},"scope":1293,"src":"4787:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":644,"nodeType":"Block","src":"5088:105:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5111:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5117:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5098:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5098:31:2"},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5162:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5168:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5172:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5181:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":637,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5139:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"5139:47:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4925:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5019:4:2","nodeType":"VariableDeclaration","scope":645,"src":"5011:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5033:2:2","nodeType":"VariableDeclaration","scope":645,"src":"5025:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:2","nodeType":"VariableDeclaration","scope":645,"src":"5037:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5067:4:2","nodeType":"VariableDeclaration","scope":645,"src":"5054:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5088:0:2"},"scope":1293,"src":"4985:208:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":657,"nodeType":"Block","src":"5782:40:2","statements":[{"expression":{"baseExpression":{"id":653,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":655,"indexExpression":{"id":654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":652,"id":656,"nodeType":"Return","src":"5792:23:2"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"5199:503:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:2","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:2","nodeType":"VariableDeclaration","scope":658,"src":"5725:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:2"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"5773:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:2"},"scope":1293,"src":"5707:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"6017:48:2","statements":[{"expression":{"baseExpression":{"id":666,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6034:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":668,"indexExpression":{"id":667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"6050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":665,"id":669,"nodeType":"Return","src":"6027:31:2"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5828:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:2","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:2","nodeType":"VariableDeclaration","scope":671,"src":"5960:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:2"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"6008:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:2"},"scope":1293,"src":"5938:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6485:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6514:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:2","typeDescriptions":{}}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6552:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6561:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6589:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":692,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6572:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"6608:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6633:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":682,"id":705,"nodeType":"Return","src":"6495:146:2"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"6071:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:2","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"owner","nameLocation":"6407:5:2","nodeType":"VariableDeclaration","scope":707,"src":"6399:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"spender","nameLocation":"6422:7:2","nodeType":"VariableDeclaration","scope":707,"src":"6414:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:2","nodeType":"VariableDeclaration","scope":707,"src":"6431:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:2"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"6479:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":680,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:2"},"scope":1293,"src":"6376:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":743,"nodeType":"Block","src":"7179:271:2","statements":[{"condition":{"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:2","subExpression":{"arguments":[{"id":718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7208:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7215:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":717,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7194:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"7189:255:2","trueBody":{"id":741,"nodeType":"Block","src":"7234:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7252:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":739,"nodeType":"Block","src":"7350:84:2","statements":[{"errorCall":{"arguments":[{"id":735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7402:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7411:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":734,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7375:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"RevertStatement","src":"7368:51:2"}]},"id":740,"nodeType":"IfStatement","src":"7248:186:2","trueBody":{"id":733,"nodeType":"Block","src":"7273:71:2","statements":[{"errorCall":{"arguments":[{"id":730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7298:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"RevertStatement","src":"7291:38:2"}]}}]}}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6654:423:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:2","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"7116:5:2","nodeType":"VariableDeclaration","scope":744,"src":"7108:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"spender","nameLocation":"7131:7:2","nodeType":"VariableDeclaration","scope":744,"src":"7123:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:2","nodeType":"VariableDeclaration","scope":744,"src":"7140:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:2"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"7179:0:2"},"scope":1293,"src":"7082:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"8167:78:2","statements":[{"id":758,"nodeType":"UncheckedBlock","src":"8177:62:2","statements":[{"expression":{"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":752,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8201:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":754,"indexExpression":{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8211:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"8223:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ExpressionStatement","src":"8201:27:2"}]}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"7456:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"account","nameLocation":"8126:7:2","nodeType":"VariableDeclaration","scope":760,"src":"8118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"value","nameLocation":"8143:5:2","nodeType":"VariableDeclaration","scope":760,"src":"8135:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":748,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"8167:0:2"},"scope":1293,"src":"8092:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"8933:700:2","statements":[{"assignments":[773],"declarations":[{"constant":false,"id":773,"mutability":"mutable","name":"from","nameLocation":"8951:4:2","nodeType":"VariableDeclaration","scope":849,"src":"8943:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":777,"initialValue":{"arguments":[{"id":775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8958:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9035:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:2","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":791,"nodeType":"IfStatement","src":"9031:86:2","trueBody":{"id":790,"nodeType":"Block","src":"9055:62:2","statements":[{"expression":{"arguments":[{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9086:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":784,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9069:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"9069:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9161:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:2","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":819,"nodeType":"IfStatement","src":"9157:256:2","trueBody":{"id":818,"nodeType":"Block","src":"9181:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:2","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:2","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":798,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1162,"src":"9277:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"9277:48:2"},{"id":817,"nodeType":"UncheckedBlock","src":"9340:63:2","statements":[{"expression":{"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":811,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9368:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":813,"indexExpression":{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ExpressionStatement","src":"9368:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9427:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:2","typeDescriptions":{}}},"id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"9423:107:2","trueBody":{"id":833,"nodeType":"Block","src":"9445:85:2","statements":[{"id":832,"nodeType":"UncheckedBlock","src":"9459:61:2","statements":[{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":826,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9487:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9497:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":831,"nodeType":"ExpressionStatement","src":"9487:18:2"}]}]}},{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":835,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9540:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":837,"indexExpression":{"id":836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9559:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":840,"nodeType":"ExpressionStatement","src":"9540:21:2"},{"eventCall":{"arguments":[{"id":842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9586:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9592:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"9577:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"EmitStatement","src":"9572:32:2"},{"expression":{"id":847,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"9622:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":771,"id":848,"nodeType":"Return","src":"9615:11:2"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"8251:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:2","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"to","nameLocation":"8863:2:2","nodeType":"VariableDeclaration","scope":850,"src":"8855:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:2","nodeType":"VariableDeclaration","scope":850,"src":"8867:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"auth","nameLocation":"8892:4:2","nodeType":"VariableDeclaration","scope":850,"src":"8884:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:2"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"8924:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:2"},"scope":1293,"src":"8838:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":899,"nodeType":"Block","src":"10008:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10022:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:2","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"10018:87:2","trueBody":{"id":871,"nodeType":"Block","src":"10040:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:2","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":864,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10061:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"RevertStatement","src":"10054:40:2"}]}},{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:2","nodeType":"VariableDeclaration","scope":899,"src":"10114:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":883,"initialValue":{"arguments":[{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"10150:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:2","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":875,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10138:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"10184:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:2","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"10180:96:2","trueBody":{"id":897,"nodeType":"Block","src":"10213:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:2","typeDescriptions":{}}},"id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":890,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10234:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"RevertStatement","src":"10227:38:2"}]}}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"9639:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:2","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"to","nameLocation":"9978:2:2","nodeType":"VariableDeclaration","scope":900,"src":"9970:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":900,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:2"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"10008:0:2"},"scope":1293,"src":"9955:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"10690:43:2","statements":[{"expression":{"arguments":[{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"10710:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"10714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":908,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[915,941],"referencedDeclaration":941,"src":"10700:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"10700:26:2"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"10288:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:2","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"to","nameLocation":"10660:2:2","nodeType":"VariableDeclaration","scope":915,"src":"10652:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:2","nodeType":"VariableDeclaration","scope":915,"src":"10664:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"10690:0:2"},"scope":1293,"src":"10633:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"11038:98:2","statements":[{"expression":{"arguments":[{"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11054:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"11048:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"11048:18:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:2","typeDescriptions":{}}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11111:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11115:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11124:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":930,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"11076:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"11076:53:2"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"10739:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:2","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"to","nameLocation":"10981:2:2","nodeType":"VariableDeclaration","scope":941,"src":"10973:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:2","nodeType":"VariableDeclaration","scope":941,"src":"10985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"11015:4:2","nodeType":"VariableDeclaration","scope":941,"src":"11002:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:2"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"11038:0:2"},"scope":1293,"src":"10954:182:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"11503:186:2","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:2","nodeType":"VariableDeclaration","scope":973,"src":"11513:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:2","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11557:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:2","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11537:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"11591:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:2","typeDescriptions":{}}},"id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"IfStatement","src":"11587:96:2","trueBody":{"id":971,"nodeType":"Block","src":"11620:63:2","statements":[{"errorCall":{"arguments":[{"id":968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11641:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"RevertStatement","src":"11634:38:2"}]}}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"11142:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:2","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:2","nodeType":"VariableDeclaration","scope":974,"src":"11477:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:2"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"11503:0:2"},"scope":1293,"src":"11462:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"12084:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"12098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:2","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":998,"nodeType":"IfStatement","src":"12094:87:2","trueBody":{"id":997,"nodeType":"Block","src":"12116:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:2","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":990,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12137:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"RevertStatement","src":"12130:40:2"}]}},{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:2","nodeType":"VariableDeclaration","scope":1033,"src":"12190:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1009,"initialValue":{"arguments":[{"id":1002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"12222:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12226:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:2","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1001,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12214:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1010,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12260:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:2","typeDescriptions":{}}},"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12362:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12379:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"12358:109:2","trueBody":{"id":1030,"nodeType":"Block","src":"12385:82:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1027,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12442:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1024,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12406:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"RevertStatement","src":"12399:57:2"}]}},"id":1032,"nodeType":"IfStatement","src":"12256:211:2","trueBody":{"id":1020,"nodeType":"Block","src":"12289:63:2","statements":[{"errorCall":{"arguments":[{"id":1017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"12333:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12310:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"RevertStatement","src":"12303:38:2"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"11695:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:2","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"from","nameLocation":"12040:4:2","nodeType":"VariableDeclaration","scope":1034,"src":"12032:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"to","nameLocation":"12054:2:2","nodeType":"VariableDeclaration","scope":1034,"src":"12046:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:2","nodeType":"VariableDeclaration","scope":1034,"src":"12058:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:2"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"12084:0:2"},"scope":1293,"src":"12013:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"13481:53:2","statements":[{"expression":{"arguments":[{"id":1045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"13505:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"13511:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"13515:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1044,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1052,1078],"referencedDeclaration":1078,"src":"13491:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"13491:36:2"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"12479:922:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:2","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"from","nameLocation":"13437:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"13429:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"13451:2:2","nodeType":"VariableDeclaration","scope":1052,"src":"13443:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:2","nodeType":"VariableDeclaration","scope":1052,"src":"13455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:2"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"13481:0:2"},"scope":1293,"src":"13406:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"13873:102:2","statements":[{"expression":{"arguments":[{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"13893:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"13899:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"13903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1064,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"13883:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"13883:28:2"},{"expression":{"arguments":[{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"13944:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1072,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"13950:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"13954:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13963:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1070,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"13921:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"13921:47:2"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"13540:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:2","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"from","nameLocation":"13802:4:2","nodeType":"VariableDeclaration","scope":1078,"src":"13794:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"to","nameLocation":"13816:2:2","nodeType":"VariableDeclaration","scope":1078,"src":"13808:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:2","nodeType":"VariableDeclaration","scope":1078,"src":"13820:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"data","nameLocation":"13850:4:2","nodeType":"VariableDeclaration","scope":1078,"src":"13837:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:2"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"13873:0:2"},"scope":1293,"src":"13771:204:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"14488:50:2","statements":[{"expression":{"arguments":[{"id":1089,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"14507:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"14511:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1091,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"14520:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1088,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1096,1162],"referencedDeclaration":1162,"src":"14498:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"14498:33:2"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"13981:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"to","nameLocation":"14444:2:2","nodeType":"VariableDeclaration","scope":1096,"src":"14436:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:2","nodeType":"VariableDeclaration","scope":1096,"src":"14448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"auth","nameLocation":"14473:4:2","nodeType":"VariableDeclaration","scope":1096,"src":"14465:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"14488:0:2"},"scope":1293,"src":"14418:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"14814:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"14880:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"14893:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:2","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"IfStatement","src":"14876:460:2","trueBody":{"id":1153,"nodeType":"Block","src":"14913:423:2","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"owner","nameLocation":"14935:5:2","nodeType":"VariableDeclaration","scope":1153,"src":"14927:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1121,"initialValue":{"arguments":[{"id":1119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"14957:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"14943:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15093:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:2","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1129,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15124:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:2","subExpression":{"arguments":[{"id":1133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15150:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15157:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15133:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1143,"nodeType":"IfStatement","src":"15089:142:2","trueBody":{"id":1142,"nodeType":"Block","src":"15164:67:2","statements":[{"errorCall":{"arguments":[{"id":1139,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"15211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1138,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15189:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"RevertStatement","src":"15182:34:2"}]}},{"condition":{"id":1144,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"15249:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"15245:81:2","trueBody":{"id":1151,"nodeType":"Block","src":"15260:66:2","statements":[{"eventCall":{"arguments":[{"id":1146,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15292:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"15299:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"15303:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"15283:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"EmitStatement","src":"15278:33:2"}]}}]}},{"expression":{"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1155,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15346:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1157,"indexExpression":{"id":1156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"15362:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1160,"nodeType":"ExpressionStatement","src":"15346:29:2"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"14544:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:2","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"14746:2:2","nodeType":"VariableDeclaration","scope":1162,"src":"14738:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:2","nodeType":"VariableDeclaration","scope":1162,"src":"14750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"auth","nameLocation":"14775:4:2","nodeType":"VariableDeclaration","scope":1162,"src":"14767:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:2","nodeType":"VariableDeclaration","scope":1162,"src":"14781:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:2"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"14814:0:2"},"scope":1293,"src":"14720:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"15684:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15698:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:2","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"15694:91:2","trueBody":{"id":1182,"nodeType":"Block","src":"15722:63:2","statements":[{"errorCall":{"arguments":[{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15765:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1178,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15743:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"15736:38:2"}]}},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1184,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15794:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1187,"indexExpression":{"id":1185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1188,"indexExpression":{"id":1186,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15820:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15832:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"ExpressionStatement","src":"15794:46:2"},{"eventCall":{"arguments":[{"id":1193,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"15877:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15887:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1192,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15855:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"EmitStatement","src":"15850:46:2"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"15388:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:2","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"15627:5:2","nodeType":"VariableDeclaration","scope":1199,"src":"15619:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"operator","nameLocation":"15642:8:2","nodeType":"VariableDeclaration","scope":1199,"src":"15634:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"approved","nameLocation":"15657:8:2","nodeType":"VariableDeclaration","scope":1199,"src":"15652:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:2"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"15684:0:2"},"scope":1293,"src":"15591:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"16210:169:2","statements":[{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"owner","nameLocation":"16228:5:2","nodeType":"VariableDeclaration","scope":1227,"src":"16220:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1212,"initialValue":{"arguments":[{"id":1210,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"16245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"16236:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"16267:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:2","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"16263:88:2","trueBody":{"id":1223,"nodeType":"Block","src":"16288:63:2","statements":[{"errorCall":{"arguments":[{"id":1220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"16332:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1219,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16309:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"16302:38:2"}]}},{"expression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"16367:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1206,"id":1226,"nodeType":"Return","src":"16360:12:2"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"15909:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:2","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:2","nodeType":"VariableDeclaration","scope":1228,"src":"16161:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:2"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"16201:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:2"},"scope":1293,"src":"16138:241:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"17020:680:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17034:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:2","memberName":"code","nodeType":"MemberAccess","src":"17034:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:2","memberName":"length","nodeType":"MemberAccess","src":"17034:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"17030:664:2","trueBody":{"id":1289,"nodeType":"Block","src":"17054:640:2","statements":[{"clauses":[{"block":{"id":1269,"nodeType":"Block","src":"17168:162:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"17190:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1259,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17200:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:2","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"17200:32:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:2","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"IfStatement","src":"17186:130:2","trueBody":{"id":1267,"nodeType":"Block","src":"17243:73:2","statements":[{"errorCall":{"arguments":[{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1263,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17272:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"RevertStatement","src":"17265:32:2"}]}}]},"errorName":"","id":1270,"nodeType":"TryCatchClause","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"retval","nameLocation":"17160:6:2","nodeType":"VariableDeclaration","scope":1270,"src":"17153:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1255,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:2"},"src":"17144:186:2"},{"block":{"id":1286,"nodeType":"Block","src":"17359:325:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1274,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"17381:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:2","memberName":"length","nodeType":"MemberAccess","src":"17381:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1284,"nodeType":"Block","src":"17480:190:2","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:2","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:2"},"nodeType":"YulFunctionCall","src":"17599:15:2"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:2"},"nodeType":"YulFunctionCall","src":"17616:13:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:2"},"nodeType":"YulFunctionCall","src":"17592:38:2"},"nodeType":"YulExpressionStatement","src":"17592:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1272,"isOffset":false,"isSlot":false,"src":"17607:6:2","valueSize":1},{"declaration":1272,"isOffset":false,"isSlot":false,"src":"17622:6:2","valueSize":1}],"id":1283,"nodeType":"InlineAssembly","src":"17557:95:2"}]},"id":1285,"nodeType":"IfStatement","src":"17377:293:2","trueBody":{"id":1282,"nodeType":"Block","src":"17401:73:2","statements":[{"errorCall":{"arguments":[{"id":1279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17452:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1278,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"17430:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"RevertStatement","src":"17423:32:2"}]}}]},"errorName":"","id":1287,"nodeType":"TryCatchClause","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"reason","nameLocation":"17351:6:2","nodeType":"VariableDeclaration","scope":1287,"src":"17338:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:2"},"src":"17331:353:2"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17109:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1251,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"17123:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"17129:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1253,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"17138:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"17088:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1245,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17072:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1428","typeString":"contract IERC721Receiver"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:2","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"17072:36:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1288,"nodeType":"TryStatement","src":"17068:616:2"}]}}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"16385:528:2","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:2","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"from","nameLocation":"16958:4:2","nodeType":"VariableDeclaration","scope":1292,"src":"16950:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"to","nameLocation":"16972:2:2","nodeType":"VariableDeclaration","scope":1292,"src":"16964:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:2","nodeType":"VariableDeclaration","scope":1292,"src":"16976:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"data","nameLocation":"17006:4:2","nodeType":"VariableDeclaration","scope":1292,"src":"16993:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:2"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"17020:0:2"},"scope":1293,"src":"16918:782:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1294,"src":"776:16926:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1309,1318,1327]}],"src":"107:17596:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1769],"IERC721":[1410]},"id":1411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1411,"sourceUnit":1770,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1296,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1299,"name":"IERC165","nameLocations":["287:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"287:7:3"},"id":1300,"nodeType":"InheritanceSpecifier","src":"287:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"198:67:3","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1410,"linearizedBaseContracts":[1410,1769],"name":"IERC721","nameLocation":"276:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"301:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1309,"name":"Transfer","nameLocation":"400:8:3","nodeType":"EventDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:3","nodeType":"VariableDeclaration","scope":1309,"src":"409:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":1309,"src":"431:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:3","nodeType":"VariableDeclaration","scope":1309,"src":"451:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:3"},"src":"394:82:3"},{"anonymous":false,"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"482:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1318,"name":"Approval","nameLocation":"587:8:3","nodeType":"EventDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1318,"src":"596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:3","nodeType":"VariableDeclaration","scope":1318,"src":"619:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:3","nodeType":"VariableDeclaration","scope":1318,"src":"645:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:3"},"src":"581:89:3"},{"anonymous":false,"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"676:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1327,"name":"ApprovalForAll","nameLocation":"804:14:3","nodeType":"EventDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":1327,"src":"819:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:3","nodeType":"VariableDeclaration","scope":1327,"src":"842:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:3","nodeType":"VariableDeclaration","scope":1327,"src":"868:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:3"},"src":"798:85:3"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"889:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:3","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"owner","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":1335,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:3"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"balance","nameLocation":"1035:7:3","nodeType":"VariableDeclaration","scope":1335,"src":"1027:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:3"},"scope":1410,"src":"970:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1050:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:3","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:3","nodeType":"VariableDeclaration","scope":1343,"src":"1203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:3"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"owner","nameLocation":"1251:5:3","nodeType":"VariableDeclaration","scope":1343,"src":"1243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:3"},"scope":1410,"src":"1186:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"1264:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"from","nameLocation":"1868:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"1860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"to","nameLocation":"1882:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"1874:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:3","nodeType":"VariableDeclaration","scope":1355,"src":"1886:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"1918:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"1903:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:3"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"1932:0:3"},"scope":1410,"src":"1834:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"1939:705:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:3","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"from","nameLocation":"2683:4:3","nodeType":"VariableDeclaration","scope":1365,"src":"2675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"to","nameLocation":"2697:2:3","nodeType":"VariableDeclaration","scope":1365,"src":"2689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:3","nodeType":"VariableDeclaration","scope":1365,"src":"2701:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:3"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"2726:0:3"},"scope":1410,"src":"2649:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"2733:732:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:3","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"from","nameLocation":"3500:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"3492:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"to","nameLocation":"3514:2:3","nodeType":"VariableDeclaration","scope":1375,"src":"3506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:3","nodeType":"VariableDeclaration","scope":1375,"src":"3518:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:3"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"3543:0:3"},"scope":1410,"src":"3470:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3550:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:3","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"4032:2:3","nodeType":"VariableDeclaration","scope":1383,"src":"4024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:3","nodeType":"VariableDeclaration","scope":1383,"src":"4036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:3"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"4061:0:3"},"scope":1410,"src":"4007:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"4068:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:3","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"operator","nameLocation":"4423:8:3","nodeType":"VariableDeclaration","scope":1391,"src":"4415:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"approved","nameLocation":"4438:8:3","nodeType":"VariableDeclaration","scope":1391,"src":"4433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1387,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:3"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"4456:0:3"},"scope":1410,"src":"4388:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"4463:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:3","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:3","nodeType":"VariableDeclaration","scope":1399,"src":"4628:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:3"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"operator","nameLocation":"4676:8:3","nodeType":"VariableDeclaration","scope":1399,"src":"4668:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:3"},"scope":1410,"src":"4607:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"4692:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"owner","nameLocation":"4869:5:3","nodeType":"VariableDeclaration","scope":1409,"src":"4861:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"operator","nameLocation":"4884:8:3","nodeType":"VariableDeclaration","scope":1409,"src":"4876:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:3"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"4917:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:3"},"scope":1410,"src":"4835:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1411,"src":"266:4659:3","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"108:4818:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1428]},"id":1429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1412,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"142:152:4","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1428,"linearizedBaseContracts":[1428],"name":"IERC721Receiver","nameLocation":"305:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"327:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:4","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"operator","nameLocation":"875:8:4","nodeType":"VariableDeclaration","scope":1427,"src":"867:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"from","nameLocation":"901:4:4","nodeType":"VariableDeclaration","scope":1427,"src":"893:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:4","nodeType":"VariableDeclaration","scope":1427,"src":"915:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"955:4:4","nodeType":"VariableDeclaration","scope":1427,"src":"940:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:4"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"984:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1424,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:4"},"scope":1428,"src":"832:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1429,"src":"295:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:879:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1410],"IERC721Metadata":[1456]},"id":1457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1457,"sourceUnit":1411,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1431,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1434,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"357:7:5"},"id":1435,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1456,"linearizedBaseContracts":[1456,1410,1769],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1441,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1456,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1447,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1444,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1456,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1455,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1455,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1452,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1456,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1457,"src":"328:463:5","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1478]},"id":1479,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1458,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1478,"linearizedBaseContracts":[1478],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1467,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":1464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1463,"id":1466,"nodeType":"Return","src":"728:17:6"}]},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":1478,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":1473,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1472,"id":1475,"nodeType":"Return","src":"835:15:6"}]},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1470,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":1478,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1479,"src":"624:235:6","usedErrors":[],"usedEvents":[]}],"src":"101:759:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2823],"SignedMath":[2928],"Strings":[1733]},"id":1734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1480,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1734,"sourceUnit":2824,"src":"127:37:7","symbolAliases":[{"foreign":{"id":1481,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"135:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1734,"sourceUnit":2929,"src":"165:49:7","symbolAliases":[{"foreign":{"id":1483,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"173:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"216:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1733,"linearizedBaseContracts":[1733],"name":"Strings","nameLocation":"259:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1488,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:7","nodeType":"VariableDeclaration","scope":1733,"src":"273:56:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1486,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1491,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:7","nodeType":"VariableDeclaration","scope":1733,"src":"335:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1489,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"384:81:7","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1498,"name":"StringsInsufficientHexLength","nameLocation":"476:28:7","nodeType":"ErrorDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"513:5:7","nodeType":"VariableDeclaration","scope":1498,"src":"505:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"length","nameLocation":"528:6:7","nodeType":"VariableDeclaration","scope":1498,"src":"520:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:7"},"src":"470:66:7"},{"body":{"id":1545,"nodeType":"Block","src":"708:627:7","statements":[{"id":1544,"nodeType":"UncheckedBlock","src":"718:611:7","statements":[{"assignments":[1507],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"length","nameLocation":"750:6:7","nodeType":"VariableDeclaration","scope":1544,"src":"742:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"770:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1508,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"759:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2823_$","typeString":"type(library Math)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"759:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:7"},{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"buffer","nameLocation":"808:6:7","nodeType":"VariableDeclaration","scope":1544,"src":"794:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1515,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"id":1519,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"828:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1517,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:7"},{"assignments":[1523],"declarations":[{"constant":false,"id":1523,"mutability":"mutable","name":"ptr","nameLocation":"857:3:7","nodeType":"VariableDeclaration","scope":1544,"src":"849:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1524,"nodeType":"VariableDeclarationStatement","src":"849:11:7"},{"AST":{"nodeType":"YulBlock","src":"930:67:7","statements":[{"nodeType":"YulAssignment","src":"948:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:7"},"nodeType":"YulFunctionCall","src":"967:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:7"},"nodeType":"YulFunctionCall","src":"955:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"959:6:7","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"975:6:7","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"948:3:7","valueSize":1}],"id":1525,"nodeType":"InlineAssembly","src":"921:76:7"},{"body":{"id":1540,"nodeType":"Block","src":"1023:269:7","statements":[{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:7","subExpression":{"id":1527,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"1041:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"1041:5:7"},{"AST":{"nodeType":"YulBlock","src":"1124:86:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:7"},"nodeType":"YulFunctionCall","src":"1164:14:7"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:7"},"nodeType":"YulFunctionCall","src":"1159:32:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:7"},"nodeType":"YulFunctionCall","src":"1146:46:7"},"nodeType":"YulExpressionStatement","src":"1146:46:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1488,"isOffset":false,"isSlot":false,"src":"1180:10:7","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"1154:3:7","valueSize":1},{"declaration":1501,"isOffset":false,"isSlot":false,"src":"1168:5:7","valueSize":1}],"id":1530,"nodeType":"InlineAssembly","src":"1115:95:7"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1227:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"1227:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1260:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1539,"nodeType":"IfStatement","src":"1256:21:7","trueBody":{"id":1538,"nodeType":"Break","src":"1272:5:7"}}]},"condition":{"hexValue":"74727565","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1541,"nodeType":"WhileStatement","src":"1010:282:7"},{"expression":{"id":1542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1312:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1505,"id":1543,"nodeType":"Return","src":"1305:13:7"}]}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"542:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:7","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"value","nameLocation":"663:5:7","nodeType":"VariableDeclaration","scope":1546,"src":"655:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:7"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"693:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1503,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:7"},"scope":1733,"src":"637:698:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"1511:92:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"1542:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:7","trueExpression":{"hexValue":"2d","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"1588:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1564,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"1573:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2928_$","typeString":"type(library SignedMath)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2927,"src":"1573:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1563,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1564:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1554,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:7","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:7","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1553,"id":1570,"nodeType":"Return","src":"1521:75:7"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1341:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:7","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"1466:5:7","nodeType":"VariableDeclaration","scope":1572,"src":"1459:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1548,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:7"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"1496:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1551,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:7"},"scope":1733,"src":"1435:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"1782:100:7","statements":[{"id":1590,"nodeType":"UncheckedBlock","src":"1792:84:7","statements":[{"expression":{"arguments":[{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"1835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"1854:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1582,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"1842:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2823_$","typeString":"type(library Math)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2765,"src":"1842:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1592,1675,1695],"referencedDeclaration":1675,"src":"1823:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1579,"id":1589,"nodeType":"Return","src":"1816:49:7"}]}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"1609:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:7","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"value","nameLocation":"1737:5:7","nodeType":"VariableDeclaration","scope":1592,"src":"1729:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:7"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"1767:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:7"},"scope":1733,"src":"1708:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1674,"nodeType":"Block","src":"2095:435:7","statements":[{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:7","nodeType":"VariableDeclaration","scope":1674,"src":"2105:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1605,"initialValue":{"id":1604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2126:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:7"},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:7","nodeType":"VariableDeclaration","scope":1674,"src":"2141:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1616,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1611,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2177:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1608,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:7"},{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1617,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2198:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1619,"indexExpression":{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1622,"nodeType":"ExpressionStatement","src":"2198:15:7"},{"expression":{"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1623,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2223:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1625,"indexExpression":{"hexValue":"31","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1628,"nodeType":"ExpressionStatement","src":"2223:15:7"},{"body":{"id":1657,"nodeType":"Block","src":"2293:95:7","statements":[{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1643,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2307:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1645,"indexExpression":{"id":1644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2314:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1646,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2319:10:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1650,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2330:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1652,"nodeType":"ExpressionStatement","src":"2307:40:7"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1653,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2361:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ExpressionStatement","src":"2361:16:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2281:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1658,"initializationExpression":{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"i","nameLocation":"2261:1:7","nodeType":"VariableDeclaration","scope":1658,"src":"2253:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1636,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1632,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2269:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:7"},"loopExpression":{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:7","subExpression":{"id":1640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2290:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"2288:3:7"},"nodeType":"ForStatement","src":"2248:140:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2401:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"2397:96:7","trueBody":{"id":1667,"nodeType":"Block","src":"2418:75:7","statements":[{"errorCall":{"arguments":[{"id":1663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2468:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2475:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2439:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"RevertStatement","src":"2432:50:7"}]}},{"expression":{"arguments":[{"id":1671,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2516:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1669,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:7","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1601,"id":1673,"nodeType":"Return","src":"2502:21:7"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"1888:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:7","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"value","nameLocation":"2034:5:7","nodeType":"VariableDeclaration","scope":1675,"src":"2026:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"length","nameLocation":"2049:6:7","nodeType":"VariableDeclaration","scope":1675,"src":"2041:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:7"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"2080:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1599,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:7"},"scope":1733,"src":"2005:525:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"2762:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1688,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2807:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1686,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:7","typeDescriptions":{}}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:7","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1691,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2815:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1683,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1592,1675,1695],"referencedDeclaration":1675,"src":"2779:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1682,"id":1693,"nodeType":"Return","src":"2772:58:7"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"2536:148:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:7","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"addr","nameLocation":"2718:4:7","nodeType":"VariableDeclaration","scope":1695,"src":"2710:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:7"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"2747:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1680,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:7"},"scope":1733,"src":"2689:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"2992:104:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3015:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1705,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:7","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:7","memberName":"length","nodeType":"MemberAccess","src":"3009:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3034:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:7","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:7","memberName":"length","nodeType":"MemberAccess","src":"3028:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3063:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:7","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1716,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3086:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:7","typeDescriptions":{}}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1722,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1704,"id":1730,"nodeType":"Return","src":"3002:87:7"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"2843:66:7","text":" @dev Returns true if the two strings are equal."},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:7","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"a","nameLocation":"2943:1:7","nodeType":"VariableDeclaration","scope":1732,"src":"2929:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1697,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"b","nameLocation":"2960:1:7","nodeType":"VariableDeclaration","scope":1732,"src":"2946:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:7"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2986:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1702,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:7"},"scope":1733,"src":"2914:182:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1734,"src":"251:2847:7","usedErrors":[1498],"usedEvents":[]}],"src":"101:2998:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1757],"IERC165":[1769]},"id":1758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1735,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1758,"sourceUnit":1770,"src":"140:38:8","symbolAliases":[{"foreign":{"id":1736,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1739,"name":"IERC165","nameLocations":["687:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"687:7:8"},"id":1740,"nodeType":"InheritanceSpecifier","src":"687:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"180:478:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1757,"linearizedBaseContracts":[1757,1769],"name":"ERC165","nameLocation":"677:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1768],"body":{"id":1755,"nodeType":"Block","src":"844:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"861:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1750,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1769_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1769_$","typeString":"type(contract IERC165)"}],"id":1749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1769","typeString":"type(contract IERC165)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1747,"id":1754,"nodeType":"Return","src":"854:47:8"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"701:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:8","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:8","nodeType":"VariableDeclaration","scope":1756,"src":"789:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1742,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:8"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"838:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1745,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:8"},"scope":1757,"src":"762:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1758,"src":"659:251:8","usedErrors":[],"usedEvents":[]}],"src":"114:797:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1769]},"id":1770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1759,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"141:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1769,"linearizedBaseContracts":[1769],"name":"IERC165","nameLocation":"431:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"445:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1768,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:9","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:9","nodeType":"VariableDeclaration","scope":1768,"src":"817:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1762,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:9"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"860:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1765,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:9"},"scope":1769,"src":"790:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1770,"src":"421:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:754:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2823]},"id":2824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1771,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"129:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2823,"linearizedBaseContracts":[2823],"name":"Math","nameLocation":"211:4:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"222:50:10","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1775,"name":"MathOverflowedMulDiv","nameLocation":"283:20:10","nodeType":"ErrorDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"303:2:10"},"src":"277:29:10"},{"canonicalName":"Math.Rounding","id":1780,"members":[{"id":1776,"name":"Floor","nameLocation":"336:5:10","nodeType":"EnumValue","src":"336:5:10"},{"id":1777,"name":"Ceil","nameLocation":"379:4:10","nodeType":"EnumValue","src":"379:4:10"},{"id":1778,"name":"Trunc","nameLocation":"421:5:10","nodeType":"EnumValue","src":"421:5:10"},{"id":1779,"name":"Expand","nameLocation":"451:6:10","nodeType":"EnumValue","src":"451:6:10"}],"name":"Rounding","nameLocation":"317:8:10","nodeType":"EnumDefinition","src":"312:169:10"},{"body":{"id":1811,"nodeType":"Block","src":"661:140:10","statements":[{"id":1810,"nodeType":"UncheckedBlock","src":"671:124:10","statements":[{"assignments":[1793],"declarations":[{"constant":false,"id":1793,"mutability":"mutable","name":"c","nameLocation":"703:1:10","nodeType":"VariableDeclaration","scope":1810,"src":"695:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1797,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"707:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"711:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"730:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"734:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"726:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1791,"id":1804,"nodeType":"Return","src":"737:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1807,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"782:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1791,"id":1809,"nodeType":"Return","src":"768:16:10"}]}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"487:93:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:10","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"646:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1787,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"652:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:10"},"scope":2823,"src":"585:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"984:113:10","statements":[{"id":1838,"nodeType":"UncheckedBlock","src":"994:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1026:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1831,"nodeType":"IfStatement","src":"1018:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1823,"id":1830,"nodeType":"Return","src":"1029:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1074:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1078:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1823,"id":1837,"nodeType":"Return","src":"1060:20:10"}]}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"807:96:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:10","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"a","nameLocation":"932:1:10","nodeType":"VariableDeclaration","scope":1840,"src":"924:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"b","nameLocation":"943:1:10","nodeType":"VariableDeclaration","scope":1840,"src":"935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:10"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"969:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1819,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"975:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:10"},"scope":2823,"src":"908:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"1283:417:10","statements":[{"id":1880,"nodeType":"UncheckedBlock","src":"1293:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1859,"nodeType":"IfStatement","src":"1547:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1851,"id":1858,"nodeType":"Return","src":"1559:16:10"}},{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"c","nameLocation":"1597:1:10","nodeType":"VariableDeclaration","scope":1880,"src":"1589:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1865,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1605:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1624:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1633:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1875,"nodeType":"IfStatement","src":"1620:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1851,"id":1874,"nodeType":"Return","src":"1636:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1877,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1681:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1851,"id":1879,"nodeType":"Return","src":"1667:16:10"}]}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"1103:99:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:10","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"a","nameLocation":"1231:1:10","nodeType":"VariableDeclaration","scope":1882,"src":"1223:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"b","nameLocation":"1242:1:10","nodeType":"VariableDeclaration","scope":1882,"src":"1234:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:10"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1882,"src":"1268:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1882,"src":"1274:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:10"},"scope":2823,"src":"1207:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"1887:114:10","statements":[{"id":1908,"nodeType":"UncheckedBlock","src":"1897:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1901,"nodeType":"IfStatement","src":"1921:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1893,"id":1900,"nodeType":"Return","src":"1933:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"1978:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1904,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1893,"id":1907,"nodeType":"Return","src":"1964:20:10"}]}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"1706:100:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:10","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"a","nameLocation":"1835:1:10","nodeType":"VariableDeclaration","scope":1910,"src":"1827:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"b","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1910,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:10"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"1872:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1889,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"1878:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:10"},"scope":2823,"src":"1811:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"2198:114:10","statements":[{"id":1936,"nodeType":"UncheckedBlock","src":"2208:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1929,"nodeType":"IfStatement","src":"2232:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1921,"id":1928,"nodeType":"Return","src":"2244:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2289:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2293:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1921,"id":1935,"nodeType":"Return","src":"2275:20:10"}]}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"2007:110:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:10","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"a","nameLocation":"2146:1:10","nodeType":"VariableDeclaration","scope":1938,"src":"2138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"b","nameLocation":"2157:1:10","nodeType":"VariableDeclaration","scope":1938,"src":"2149:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:10"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"2183:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1917,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"2189:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:10"},"scope":2823,"src":"2122:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"2449:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2466:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2478:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:10","trueExpression":{"id":1951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2474:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1947,"id":1954,"nodeType":"Return","src":"2459:20:10"}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"2318:59:10","text":" @dev Returns the largest of two numbers."},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:10","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"a","nameLocation":"2403:1:10","nodeType":"VariableDeclaration","scope":1956,"src":"2395:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"b","nameLocation":"2414:1:10","nodeType":"VariableDeclaration","scope":1956,"src":"2406:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:10"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"2440:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:10"},"scope":2823,"src":"2382:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1973,"nodeType":"Block","src":"2624:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2641:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1967,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2653:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:10","trueExpression":{"id":1969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1965,"id":1972,"nodeType":"Return","src":"2634:20:10"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"2492:60:10","text":" @dev Returns the smallest of two numbers."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:10","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"a","nameLocation":"2578:1:10","nodeType":"VariableDeclaration","scope":1974,"src":"2570:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"b","nameLocation":"2589:1:10","nodeType":"VariableDeclaration","scope":1974,"src":"2581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:10"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1974,"src":"2615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:10"},"scope":2823,"src":"2557:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"2845:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2900:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2904:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2910:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1989,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2914:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1983,"id":1995,"nodeType":"Return","src":"2892:28:10"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"2667:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:10","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"a","nameLocation":"2799:1:10","nodeType":"VariableDeclaration","scope":1997,"src":"2791:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"b","nameLocation":"2810:1:10","nodeType":"VariableDeclaration","scope":1997,"src":"2802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:10"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"2836:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:10"},"scope":2823,"src":"2774:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"3219:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3233:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2015,"nodeType":"IfStatement","src":"3229:127:10","trueBody":{"id":2014,"nodeType":"Block","src":"3241:115:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3340:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3344:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2006,"id":2013,"nodeType":"Return","src":"3333:12:10"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2024,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3467:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:10","trueExpression":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2006,"id":2029,"nodeType":"Return","src":"3437:35:10"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"2933:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:10","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"a","nameLocation":"3173:1:10","nodeType":"VariableDeclaration","scope":2031,"src":"3165:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"b","nameLocation":"3184:1:10","nodeType":"VariableDeclaration","scope":2031,"src":"3176:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:10"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"3210:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:10"},"scope":2823,"src":"3148:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2156,"nodeType":"Block","src":"3901:4018:10","statements":[{"id":2155,"nodeType":"UncheckedBlock","src":"3911:4002:10","statements":[{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:10","nodeType":"VariableDeclaration","scope":2155,"src":"4232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2048,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4248:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2046,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"4252:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:10"},{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:10","nodeType":"VariableDeclaration","scope":2155,"src":"4312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2051,"nodeType":"VariableDeclarationStatement","src":"4312:13:10"},{"AST":{"nodeType":"YulBlock","src":"4392:122:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:10"},"nodeType":"YulFunctionCall","src":"4433:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:10"},"nodeType":"YulFunctionCall","src":"4420:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:10","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:10"},"nodeType":"YulFunctionCall","src":"4470:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:10"},"nodeType":"YulFunctionCall","src":"4486:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:10"},"nodeType":"YulFunctionCall","src":"4466:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2044,"isOffset":false,"isSlot":false,"src":"4478:5:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"4493:5:10","valueSize":1},{"declaration":2050,"isOffset":false,"isSlot":false,"src":"4457:5:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"4427:1:10","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"4430:1:10","valueSize":1}],"id":2052,"nodeType":"InlineAssembly","src":"4383:131:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"4591:368:10","trueBody":{"id":2060,"nodeType":"Block","src":"4607:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2057,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"4933:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2042,"id":2059,"nodeType":"Return","src":"4918:26:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2063,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"5080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"IfStatement","src":"5061:88:10","trueBody":{"id":2068,"nodeType":"Block","src":"5087:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2065,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5112:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2067,"nodeType":"RevertStatement","src":"5105:29:10"}]}},{"assignments":[2071],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:10","nodeType":"VariableDeclaration","scope":2155,"src":"5404:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2072,"nodeType":"VariableDeclarationStatement","src":"5404:17:10"},{"AST":{"nodeType":"YulBlock","src":"5444:291:10","statements":[{"nodeType":"YulAssignment","src":"5513:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:10"},"nodeType":"YulFunctionCall","src":"5526:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:10"}]},{"nodeType":"YulAssignment","src":"5633:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:10"},"nodeType":"YulFunctionCall","src":"5653:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:10"},"nodeType":"YulFunctionCall","src":"5642:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:10"}]},{"nodeType":"YulAssignment","src":"5691:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:10"},"nodeType":"YulFunctionCall","src":"5700:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2038,"isOffset":false,"isSlot":false,"src":"5539:11:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"5667:5:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"5691:5:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"5704:5:10","valueSize":1},{"declaration":2050,"isOffset":false,"isSlot":false,"src":"5633:5:10","valueSize":1},{"declaration":2050,"isOffset":false,"isSlot":false,"src":"5646:5:10","valueSize":1},{"declaration":2071,"isOffset":false,"isSlot":false,"src":"5513:9:10","valueSize":1},{"declaration":2071,"isOffset":false,"isSlot":false,"src":"5656:9:10","valueSize":1},{"declaration":2071,"isOffset":false,"isSlot":false,"src":"5711:9:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"5533:1:10","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"5536:1:10","valueSize":1}],"id":2073,"nodeType":"InlineAssembly","src":"5435:300:10"},{"assignments":[2075],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"twos","nameLocation":"5947:4:10","nodeType":"VariableDeclaration","scope":2155,"src":"5939:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2082,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5954:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2078,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5973:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:10"},{"AST":{"nodeType":"YulBlock","src":"6008:362:10","statements":[{"nodeType":"YulAssignment","src":"6073:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:10"},"nodeType":"YulFunctionCall","src":"6088:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:10"}]},{"nodeType":"YulAssignment","src":"6177:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:10"},"nodeType":"YulFunctionCall","src":"6186:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:10"}]},{"nodeType":"YulAssignment","src":"6317:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:10"},"nodeType":"YulFunctionCall","src":"6333:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:10"},"nodeType":"YulFunctionCall","src":"6329:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:10"},"nodeType":"YulFunctionCall","src":"6325:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2038,"isOffset":false,"isSlot":false,"src":"6073:11:10","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"6092:11:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"6177:5:10","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"6190:5:10","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"6105:4:10","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"6197:4:10","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"6317:4:10","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"6340:4:10","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"6347:4:10","valueSize":1}],"id":2083,"nodeType":"InlineAssembly","src":"5999:371:10"},{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2084,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"6436:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2086,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"6453:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ExpressionStatement","src":"6436:21:10"},{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:10","nodeType":"VariableDeclaration","scope":2155,"src":"6775:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2093,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:10"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2099,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2102,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"7031:36:10"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7100:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7115:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2110,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"7100:36:10"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7170:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7185:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2118,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"7170:36:10"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7255:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2126,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"7240:36:10"},{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7325:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2134,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"7310:36:10"},{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2139,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7396:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2142,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"nodeType":"ExpressionStatement","src":"7381:36:10"},{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7851:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7860:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2149,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"7868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"7851:24:10"},{"expression":{"id":2153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2042,"id":2154,"nodeType":"Return","src":"7889:13:10"}]}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"3485:313:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:10","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"x","nameLocation":"3827:1:10","nodeType":"VariableDeclaration","scope":2157,"src":"3819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"y","nameLocation":"3838:1:10","nodeType":"VariableDeclaration","scope":2157,"src":"3830:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:10","nodeType":"VariableDeclaration","scope":2157,"src":"3841:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:10"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"result","nameLocation":"3893:6:10","nodeType":"VariableDeclaration","scope":2157,"src":"3885:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:10"},"scope":2823,"src":"3803:4116:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"8161:192:10","statements":[{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"result","nameLocation":"8179:6:10","nodeType":"VariableDeclaration","scope":2199,"src":"8171:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2179,"initialValue":{"arguments":[{"id":2175,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"8195:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2176,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8198:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8201:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2174,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2157,2200],"referencedDeclaration":2157,"src":"8188:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2181,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"8244:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2180,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8227:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"8264:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2185,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8267:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8270:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"nodeType":"IfStatement","src":"8223:101:10","trueBody":{"id":2195,"nodeType":"Block","src":"8288:36:10","statements":[{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"8302:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"8302:11:10"}]}},{"expression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"8340:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2171,"id":2198,"nodeType":"Return","src":"8333:13:10"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"7925:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:10","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"x","nameLocation":"8075:1:10","nodeType":"VariableDeclaration","scope":2200,"src":"8067:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"y","nameLocation":"8086:1:10","nodeType":"VariableDeclaration","scope":2200,"src":"8078:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:10","nodeType":"VariableDeclaration","scope":2200,"src":"8089:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:10","nodeType":"VariableDeclaration","scope":2200,"src":"8110:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2166,"nodeType":"UserDefinedTypeName","pathNode":{"id":2165,"name":"Rounding","nameLocations":["8110:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"8110:8:10"},"referencedDeclaration":1780,"src":"8110:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:10"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"8152:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:10"},"scope":2823,"src":"8051:302:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"8644:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"8654:45:10","trueBody":{"id":2213,"nodeType":"Block","src":"8666:33:10","statements":[{"expression":{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2207,"id":2212,"nodeType":"Return","src":"8680:8:10"}]}},{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"result","nameLocation":"9386:6:10","nodeType":"VariableDeclaration","scope":2311,"src":"9378:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"9406:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2218,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2479,2514],"referencedDeclaration":2479,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:10"},{"id":2310,"nodeType":"UncheckedBlock","src":"9815:408:10","statements":[{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9839:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"9858:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9862:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2236,"nodeType":"ExpressionStatement","src":"9839:35:10"},{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9888:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"9907:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"nodeType":"ExpressionStatement","src":"9888:35:10"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9947:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"9956:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9960:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"9937:35:10"},{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"9996:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"10005:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10009:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"9986:35:10"},{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10035:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10045:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"10054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"10035:35:10"},{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10094:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"10103:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10107:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"nodeType":"ExpressionStatement","src":"10084:35:10"},{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10133:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10143:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"10152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10156:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ExpressionStatement","src":"10133:35:10"},{"expression":{"arguments":[{"id":2304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10193:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"10201:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"10189:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2207,"id":2309,"nodeType":"Return","src":"10182:30:10"}]}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"8359:223:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:10","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"a","nameLocation":"8609:1:10","nodeType":"VariableDeclaration","scope":2312,"src":"8601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:10"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"8635:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:10"},"scope":2823,"src":"8587:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2346,"nodeType":"Block","src":"10405:164:10","statements":[{"id":2345,"nodeType":"UncheckedBlock","src":"10415:148:10","statements":[{"assignments":[2324],"declarations":[{"constant":false,"id":2324,"mutability":"mutable","name":"result","nameLocation":"10447:6:10","nodeType":"VariableDeclaration","scope":2345,"src":"10439:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2328,"initialValue":{"arguments":[{"id":2326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10461:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2312,2347],"referencedDeclaration":2312,"src":"10456:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10484:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2331,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"10511:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2330,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"10494:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10533:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10542:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:10","trueExpression":{"hexValue":"31","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2322,"id":2344,"nodeType":"Return","src":"10477:75:10"}]}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"10235:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2347,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:10","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"a","nameLocation":"10351:1:10","nodeType":"VariableDeclaration","scope":2347,"src":"10343:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:10","nodeType":"VariableDeclaration","scope":2347,"src":"10354:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"Rounding","nameLocations":["10354:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"10354:8:10"},"referencedDeclaration":1780,"src":"10354:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:10"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2347,"src":"10396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:10"},"scope":2823,"src":"10329:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"10760:922:10","statements":[{"assignments":[2356],"declarations":[{"constant":false,"id":2356,"mutability":"mutable","name":"result","nameLocation":"10778:6:10","nodeType":"VariableDeclaration","scope":2478,"src":"10770:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2358,"initialValue":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:10"},{"id":2475,"nodeType":"UncheckedBlock","src":"10798:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10826:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2373,"nodeType":"IfStatement","src":"10822:99:10","trueBody":{"id":2372,"nodeType":"Block","src":"10844:77:10","statements":[{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"10862:13:10"},{"expression":{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"10893:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2371,"nodeType":"ExpressionStatement","src":"10893:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10938:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"nodeType":"IfStatement","src":"10934:96:10","trueBody":{"id":2387,"nodeType":"Block","src":"10955:75:10","statements":[{"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10973:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"nodeType":"ExpressionStatement","src":"10973:12:10"},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11003:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"11003:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11047:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"nodeType":"IfStatement","src":"11043:96:10","trueBody":{"id":2402,"nodeType":"Block","src":"11064:75:10","statements":[{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11082:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"11082:12:10"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11112:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"11112:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11156:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"IfStatement","src":"11152:96:10","trueBody":{"id":2417,"nodeType":"Block","src":"11173:75:10","statements":[{"expression":{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11191:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2412,"nodeType":"ExpressionStatement","src":"11191:12:10"},{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11221:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"11221:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11265:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2433,"nodeType":"IfStatement","src":"11261:93:10","trueBody":{"id":2432,"nodeType":"Block","src":"11281:73:10","statements":[{"expression":{"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11299:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2427,"nodeType":"ExpressionStatement","src":"11299:11:10"},{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11328:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"11328:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11371:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2448,"nodeType":"IfStatement","src":"11367:93:10","trueBody":{"id":2447,"nodeType":"Block","src":"11387:73:10","statements":[{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2442,"nodeType":"ExpressionStatement","src":"11405:11:10"},{"expression":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11434:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2446,"nodeType":"ExpressionStatement","src":"11434:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11477:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2463,"nodeType":"IfStatement","src":"11473:93:10","trueBody":{"id":2462,"nodeType":"Block","src":"11493:73:10","statements":[{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ExpressionStatement","src":"11511:11:10"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11540:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2461,"nodeType":"ExpressionStatement","src":"11540:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11583:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"11579:64:10","trueBody":{"id":2473,"nodeType":"Block","src":"11599:44:10","statements":[{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11617:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"11617:11:10"}]}}]},{"expression":{"id":2476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11669:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2354,"id":2477,"nodeType":"Return","src":"11662:13:10"}]},"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"10575:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:10","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"value","nameLocation":"10721:5:10","nodeType":"VariableDeclaration","scope":2479,"src":"10713:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:10"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"10751:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:10"},"scope":2823,"src":"10699:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"11915:168:10","statements":[{"id":2512,"nodeType":"UncheckedBlock","src":"11925:152:10","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"result","nameLocation":"11957:6:10","nodeType":"VariableDeclaration","scope":2512,"src":"11949:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2495,"initialValue":{"arguments":[{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"11971:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2492,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2479,2514],"referencedDeclaration":2479,"src":"11966:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"11998:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2498,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"12025:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2497,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"12008:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"12043:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:10","trueExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2489,"id":2511,"nodeType":"Return","src":"11991:75:10"}]}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"11688:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:10","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"value","nameLocation":"11857:5:10","nodeType":"VariableDeclaration","scope":2514,"src":"11849:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:10","nodeType":"VariableDeclaration","scope":2514,"src":"11864:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2484,"nodeType":"UserDefinedTypeName","pathNode":{"id":2483,"name":"Rounding","nameLocations":["11864:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"11864:8:10"},"referencedDeclaration":1780,"src":"11864:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:10"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"11906:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:10"},"scope":2823,"src":"11835:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2642,"nodeType":"Block","src":"12276:854:10","statements":[{"assignments":[2523],"declarations":[{"constant":false,"id":2523,"mutability":"mutable","name":"result","nameLocation":"12294:6:10","nodeType":"VariableDeclaration","scope":2642,"src":"12286:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2525,"initialValue":{"hexValue":"30","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:10"},{"id":2639,"nodeType":"UncheckedBlock","src":"12314:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12342:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"12338:103:10","trueBody":{"id":2541,"nodeType":"Block","src":"12361:80:10","statements":[{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12379:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"12379:17:10"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"12414:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2559,"nodeType":"IfStatement","src":"12454:103:10","trueBody":{"id":2558,"nodeType":"Block","src":"12477:80:10","statements":[{"expression":{"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12495:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2553,"nodeType":"ExpressionStatement","src":"12495:17:10"},{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12530:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"12530:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12574:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"IfStatement","src":"12570:103:10","trueBody":{"id":2575,"nodeType":"Block","src":"12593:80:10","statements":[{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12611:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"12611:17:10"},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12646:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"12646:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12690:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"12686:100:10","trueBody":{"id":2592,"nodeType":"Block","src":"12708:78:10","statements":[{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12726:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"12726:16:10"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ExpressionStatement","src":"12760:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12803:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2610,"nodeType":"IfStatement","src":"12799:100:10","trueBody":{"id":2609,"nodeType":"Block","src":"12821:78:10","statements":[{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ExpressionStatement","src":"12839:16:10"},{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12873:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"12873:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"nodeType":"IfStatement","src":"12912:100:10","trueBody":{"id":2626,"nodeType":"Block","src":"12934:78:10","statements":[{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12952:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ExpressionStatement","src":"12952:16:10"},{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"12986:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"13029:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2638,"nodeType":"IfStatement","src":"13025:66:10","trueBody":{"id":2637,"nodeType":"Block","src":"13047:44:10","statements":[{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"13065:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"13065:11:10"}]}}]},{"expression":{"id":2640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"13117:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2521,"id":2641,"nodeType":"Return","src":"13110:13:10"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"12089:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:10","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"value","nameLocation":"12237:5:10","nodeType":"VariableDeclaration","scope":2643,"src":"12229:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:10"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"12267:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:10"},"scope":2823,"src":"12214:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2677,"nodeType":"Block","src":"13365:170:10","statements":[{"id":2676,"nodeType":"UncheckedBlock","src":"13375:154:10","statements":[{"assignments":[2655],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"result","nameLocation":"13407:6:10","nodeType":"VariableDeclaration","scope":2676,"src":"13399:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[{"id":2657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13422:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2656,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2643,2678],"referencedDeclaration":2643,"src":"13416:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"13449:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2662,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"13476:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2661,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"13459:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"13495:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13504:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:10","trueExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2653,"id":2675,"nodeType":"Return","src":"13442:76:10"}]}]},"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"13136:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:10","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"value","nameLocation":"13307:5:10","nodeType":"VariableDeclaration","scope":2678,"src":"13299:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:10","nodeType":"VariableDeclaration","scope":2678,"src":"13314:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2648,"nodeType":"UserDefinedTypeName","pathNode":{"id":2647,"name":"Rounding","nameLocations":["13314:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"13314:8:10"},"referencedDeclaration":1780,"src":"13314:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:10"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"13356:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:10"},"scope":2823,"src":"13284:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"13855:600:10","statements":[{"assignments":[2687],"declarations":[{"constant":false,"id":2687,"mutability":"mutable","name":"result","nameLocation":"13873:6:10","nodeType":"VariableDeclaration","scope":2764,"src":"13865:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2689,"initialValue":{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:10"},{"id":2761,"nodeType":"UncheckedBlock","src":"13893:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"13921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2704,"nodeType":"IfStatement","src":"13917:98:10","trueBody":{"id":2703,"nodeType":"Block","src":"13939:76:10","statements":[{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"13957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"13957:13:10"},{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"13988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ExpressionStatement","src":"13988:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14032:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"IfStatement","src":"14028:95:10","trueBody":{"id":2718,"nodeType":"Block","src":"14049:74:10","statements":[{"expression":{"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14067:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2713,"nodeType":"ExpressionStatement","src":"14067:12:10"},{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14097:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"14097:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14140:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2734,"nodeType":"IfStatement","src":"14136:95:10","trueBody":{"id":2733,"nodeType":"Block","src":"14157:74:10","statements":[{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2728,"nodeType":"ExpressionStatement","src":"14175:12:10"},{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2732,"nodeType":"ExpressionStatement","src":"14205:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2749,"nodeType":"IfStatement","src":"14244:95:10","trueBody":{"id":2748,"nodeType":"Block","src":"14265:74:10","statements":[{"expression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14283:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ExpressionStatement","src":"14283:12:10"},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"14313:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"14356:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2760,"nodeType":"IfStatement","src":"14352:64:10","trueBody":{"id":2759,"nodeType":"Block","src":"14372:44:10","statements":[{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ExpressionStatement","src":"14390:11:10"}]}}]},{"expression":{"id":2762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14442:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2685,"id":2763,"nodeType":"Return","src":"14435:13:10"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"13541:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:10","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"value","nameLocation":"13816:5:10","nodeType":"VariableDeclaration","scope":2765,"src":"13808:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:10"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"13846:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:10"},"scope":2823,"src":"13792:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"14692:177:10","statements":[{"id":2801,"nodeType":"UncheckedBlock","src":"14702:161:10","statements":[{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"result","nameLocation":"14734:6:10","nodeType":"VariableDeclaration","scope":2801,"src":"14726:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2781,"initialValue":{"arguments":[{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14750:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2778,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2765,2803],"referencedDeclaration":2765,"src":"14743:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"14777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2784,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"14804:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2783,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"14787:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"14823:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14838:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:10","trueExpression":{"hexValue":"31","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2775,"id":2800,"nodeType":"Return","src":"14770:82:10"}]}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"14461:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:10","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"value","nameLocation":"14634:5:10","nodeType":"VariableDeclaration","scope":2803,"src":"14626:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:10","nodeType":"VariableDeclaration","scope":2803,"src":"14641:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"Rounding","nameLocations":["14641:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"14641:8:10"},"referencedDeclaration":1780,"src":"14641:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:10"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2803,"src":"14683:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:10"},"scope":2823,"src":"14610:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"15067:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2814,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"15090:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2812,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:10","typeDescriptions":{}}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2811,"id":2820,"nodeType":"Return","src":"15077:31:10"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"14875:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:10","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:10","nodeType":"VariableDeclaration","scope":2822,"src":"15019:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"},"typeName":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"Rounding","nameLocations":["15019:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"15019:8:10"},"referencedDeclaration":1780,"src":"15019:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1780","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:10"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"15061:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2809,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:10"},"scope":2823,"src":"14993:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2824,"src":"203:14914:10","usedErrors":[1775],"usedEvents":[]}],"src":"103:15015:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2928]},"id":2929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"135:80:11","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2928,"linearizedBaseContracts":[2928],"name":"SignedMath","nameLocation":"224:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2843,"nodeType":"Block","src":"376:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"393:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"397:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"405:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:11","trueExpression":{"id":2839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"401:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2835,"id":2842,"nodeType":"Return","src":"386:20:11"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"241:66:11","text":" @dev Returns the largest of two signed numbers."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:11","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"a","nameLocation":"332:1:11","nodeType":"VariableDeclaration","scope":2844,"src":"325:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2828,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"b","nameLocation":"342:1:11","nodeType":"VariableDeclaration","scope":2844,"src":"335:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2830,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:11"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"368:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2833,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:11"},"scope":2928,"src":"312:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2861,"nodeType":"Block","src":"555:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"572:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"576:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"584:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:11","trueExpression":{"id":2857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"580:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2853,"id":2860,"nodeType":"Return","src":"565:20:11"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"419:67:11","text":" @dev Returns the smallest of two signed numbers."},"id":2862,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:11","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"a","nameLocation":"511:1:11","nodeType":"VariableDeclaration","scope":2862,"src":"504:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2846,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"b","nameLocation":"521:1:11","nodeType":"VariableDeclaration","scope":2862,"src":"514:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2848,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:11"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2862,"src":"547:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2851,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:11"},"scope":2928,"src":"491:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2905,"nodeType":"Block","src":"797:162:11","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"x","nameLocation":"866:1:11","nodeType":"VariableDeclaration","scope":2905,"src":"859:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2872,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2886,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"871:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"875:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"882:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"886:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"911:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2892,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"931:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:11","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2888,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:11","typeDescriptions":{}}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"945:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"949:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2871,"id":2904,"nodeType":"Return","src":"904:48:11"}]},"documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"598:126:11","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:11","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"a","nameLocation":"753:1:11","nodeType":"VariableDeclaration","scope":2906,"src":"746:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2864,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"b","nameLocation":"763:1:11","nodeType":"VariableDeclaration","scope":2906,"src":"756:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2866,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:11"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"789:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2869,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:11"},"scope":2928,"src":"729:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"1103:158:11","statements":[{"id":2925,"nodeType":"UncheckedBlock","src":"1113:142:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"1228:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:11","subExpression":{"id":2920,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"1242:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:11","trueExpression":{"id":2919,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"1237:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:11","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2913,"id":2924,"nodeType":"Return","src":"1213:31:11"}]}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"965:78:11","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:11","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"n","nameLocation":"1068:1:11","nodeType":"VariableDeclaration","scope":2927,"src":"1061:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2908,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:11"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2927,"src":"1094:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:11"},"scope":2928,"src":"1048:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2929,"src":"216:1047:11","usedErrors":[],"usedEvents":[]}],"src":"109:1155:11"},"id":11},"src/Card.sol":{"ast":{"absolutePath":"src/Card.sol","exportedSymbols":{"Card":[2987],"Context":[1478],"Ownable":[147]},"id":2988,"nodeType":"SourceUnit","nodes":[{"id":2930,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"0:21:12"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2988,"sourceUnit":148,"src":"23:52:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2932,"name":"Ownable","nameLocations":["94:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"94:7:12"},"id":2933,"nodeType":"InheritanceSpecifier","src":"94:7:12"}],"canonicalName":"Card","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2987,"linearizedBaseContracts":[2987,147,1478],"name":"Card","nameLocation":"86:4:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2935,"mutability":"mutable","name":"id","nameLocation":"148:2:12","nodeType":"VariableDeclaration","scope":2987,"src":"135:15:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint","nodeType":"ElementaryTypeName","src":"135:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2937,"mutability":"mutable","name":"imgLink","nameLocation":"171:7:12","nodeType":"VariableDeclaration","scope":2987,"src":"156:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2936,"name":"string","nodeType":"ElementaryTypeName","src":"156:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2956,"nodeType":"Block","src":"251:53:12","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"261:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2949,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"266:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"261:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"261:8:12"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"imgLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"279:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2953,"name":"_imgLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"289:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"279:18:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2955,"nodeType":"ExpressionStatement","src":"279:18:12"}]},"id":2957,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"239:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"243:6:12","memberName":"sender","nodeType":"MemberAccess","src":"239:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2946,"kind":"baseConstructorSpecifier","modifierName":{"id":2943,"name":"Ownable","nameLocations":["231:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"231:7:12"},"nodeType":"ModifierInvocation","src":"231:19:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"_id","nameLocation":"202:3:12","nodeType":"VariableDeclaration","scope":2957,"src":"197:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint","nodeType":"ElementaryTypeName","src":"197:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"_imgLink","nameLocation":"221:8:12","nodeType":"VariableDeclaration","scope":2957,"src":"207:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2940,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"196:34:12"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[],"src":"251:0:12"},"scope":2987,"src":"185:119:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2964,"nodeType":"Block","src":"354:26:12","statements":[{"expression":{"id":2962,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"371:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2961,"id":2963,"nodeType":"Return","src":"364:9:12"}]},"functionSelector":"5d1ca631","id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"getId","nameLocation":"319:5:12","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[],"src":"324:2:12"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2965,"src":"348:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint","nodeType":"ElementaryTypeName","src":"348:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"347:6:12"},"scope":2987,"src":"310:70:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2972,"nodeType":"Block","src":"444:31:12","statements":[{"expression":{"id":2970,"name":"imgLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"461:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2969,"id":2971,"nodeType":"Return","src":"454:14:12"}]},"functionSelector":"7802dff5","id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"getImgLink","nameLocation":"395:10:12","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[],"src":"405:2:12"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"429:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2967,"name":"string","nodeType":"ElementaryTypeName","src":"429:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"428:15:12"},"scope":2987,"src":"386:89:12","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[126],"body":{"id":2985,"nodeType":"Block","src":"546:76:12","statements":[{"expression":{"arguments":[{"id":2982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"574:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2981,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[2986],"referencedDeclaration":2986,"src":"556:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"556:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2984,"nodeType":"ExpressionStatement","src":"556:21:12"}]},"functionSelector":"f2fde38b","id":2986,"implemented":true,"kind":"function","modifiers":[{"id":2979,"kind":"modifierInvocation","modifierName":{"id":2978,"name":"onlyOwner","nameLocations":["536:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"536:9:12"},"nodeType":"ModifierInvocation","src":"536:9:12"}],"name":"transferOwnership","nameLocation":"490:17:12","nodeType":"FunctionDefinition","overrides":{"id":2977,"nodeType":"OverrideSpecifier","overrides":[],"src":"527:8:12"},"parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"to","nameLocation":"516:2:12","nodeType":"VariableDeclaration","scope":2986,"src":"508:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:12:12"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"546:0:12"},"scope":2987,"src":"481:141:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2988,"src":"77:547:12","usedErrors":[13,18],"usedEvents":[24]}],"src":"0:624:12"},"id":12},"src/CardOwnership.sol":{"ast":{"absolutePath":"src/CardOwnership.sol","exportedSymbols":{"Card":[2987],"CardOwnership":[3299],"Context":[1478],"ERC165":[1757],"ERC721":[1293],"GameCollection":[3593],"IERC165":[1769],"IERC721":[1410],"IERC721Errors":[237],"IERC721Metadata":[1456],"IERC721Receiver":[1428],"Ownable":[147],"Strings":[1733]},"id":3300,"nodeType":"SourceUnit","nodes":[{"id":2989,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"0:21:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":2990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3300,"sourceUnit":1294,"src":"23:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3300,"sourceUnit":148,"src":"81:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/Card.sol","file":"./Card.sol","id":2992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3300,"sourceUnit":2988,"src":"135:20:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/GameCollection.sol","file":"./GameCollection.sol","id":2993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3300,"sourceUnit":3594,"src":"156:30:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2994,"name":"Ownable","nameLocations":["214:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"214:7:13"},"id":2995,"nodeType":"InheritanceSpecifier","src":"214:7:13"},{"baseName":{"id":2996,"name":"ERC721","nameLocations":["223:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"223:6:13"},"id":2997,"nodeType":"InheritanceSpecifier","src":"223:6:13"}],"canonicalName":"CardOwnership","contractDependencies":[3593],"contractKind":"contract","fullyImplemented":true,"id":3299,"linearizedBaseContracts":[3299,1293,237,1456,1410,1757,1769,147,1478],"name":"CardOwnership","nameLocation":"197:13:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"bc4f6def","id":3002,"mutability":"mutable","name":"cardCollections","nameLocation":"275:15:13","nodeType":"VariableDeclaration","scope":3299,"src":"236:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"},"typeName":{"id":3001,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2998,"name":"uint","nodeType":"ElementaryTypeName","src":"244:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"236:31:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3000,"nodeType":"UserDefinedTypeName","pathNode":{"id":2999,"name":"GameCollection","nameLocations":["252:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"252:14:13"},"referencedDeclaration":3593,"src":"252:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}}},"visibility":"public"},{"constant":false,"functionSelector":"d57f966b","id":3004,"mutability":"mutable","name":"collectionCount","nameLocation":"308:15:13","nodeType":"VariableDeclaration","scope":3299,"src":"296:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint","nodeType":"ElementaryTypeName","src":"296:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3015,"nodeType":"Block","src":"436:7:13","statements":[]},"id":3016,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":3007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"401:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"405:6:13","memberName":"sender","nodeType":"MemberAccess","src":"401:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3009,"kind":"baseConstructorSpecifier","modifierName":{"id":3006,"name":"Ownable","nameLocations":["393:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"393:7:13"},"nodeType":"ModifierInvocation","src":"393:19:13"},{"arguments":[{"hexValue":"43617264","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"420:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a60e39fe05ef8dd3a3fbcb0f6bd3582cb8ba62fb3b5dbac70098a2a40d8fb587","typeString":"literal_string \"Card\""},"value":"Card"},{"hexValue":"43415244","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"428:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_692887df8b068fab58f859d9b722a54fdf5d77d70c16cdb740d378412a9c9148","typeString":"literal_string \"CARD\""},"value":"CARD"}],"id":3013,"kind":"baseConstructorSpecifier","modifierName":{"id":3010,"name":"ERC721","nameLocations":["413:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"413:6:13"},"nodeType":"ModifierInvocation","src":"413:22:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[],"src":"390:2:13"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[],"src":"436:0:13"},"scope":3299,"src":"379:64:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[413],"body":{"id":3051,"nodeType":"Block","src":"1204:165:13","statements":[{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"nb","nameLocation":"1219:2:13","nodeType":"VariableDeclaration","scope":3051,"src":"1214:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint","nodeType":"ElementaryTypeName","src":"1214:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"hexValue":"30","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1224:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1214:11:13"},{"body":{"id":3047,"nodeType":"Block","src":"1278:66:13","statements":[{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"nb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"1292:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"1327:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3039,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1298:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3041,"indexExpression":{"id":3040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1314:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1298:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1317:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3427,"src":"1298:28:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1298:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1292:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"1292:41:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1252:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3033,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1256:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1252:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3048,"initializationExpression":{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"i","nameLocation":"1245:1:13","nodeType":"VariableDeclaration","scope":3048,"src":"1240:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint","nodeType":"ElementaryTypeName","src":"1240:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3031,"initialValue":{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1240:10:13"},"loopExpression":{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1273:3:13","subExpression":{"id":3035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1273:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"1273:3:13"},"nodeType":"ForStatement","src":"1235:109:13"},{"expression":{"id":3049,"name":"nb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"1360:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3023,"id":3050,"nodeType":"Return","src":"1353:9:13"}]},"functionSelector":"70a08231","id":3052,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1143:9:13","nodeType":"FunctionDefinition","overrides":{"id":3020,"nodeType":"OverrideSpecifier","overrides":[],"src":"1180:8:13"},"parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"owner","nameLocation":"1161:5:13","nodeType":"VariableDeclaration","scope":3052,"src":"1153:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3017,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1152:15:13"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"1198:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint","nodeType":"ElementaryTypeName","src":"1198:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1197:6:13"},"scope":3299,"src":"1134:235:13","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[426],"body":{"id":3095,"nodeType":"Block","src":"1487:232:13","statements":[{"body":{"id":3088,"nodeType":"Block","src":"1543:143:13","statements":[{"assignments":[3071],"declarations":[{"constant":false,"id":3071,"mutability":"mutable","name":"owner","nameLocation":"1565:5:13","nodeType":"VariableDeclaration","scope":3088,"src":"1557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[{"id":3076,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1600:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3072,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1573:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3074,"indexExpression":{"id":3073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1589:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1573:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1592:7:13","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":3462,"src":"1573:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1557:51:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"1626:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1643:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1635:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"1635:7:13","typeDescriptions":{}}},"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1626:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"1622:53:13","trueBody":{"expression":{"id":3085,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"1670:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3059,"id":3086,"nodeType":"Return","src":"1663:12:13"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1517:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3065,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1521:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1517:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"initializationExpression":{"assignments":[3061],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"i","nameLocation":"1510:1:13","nodeType":"VariableDeclaration","scope":3089,"src":"1502:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1502:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"hexValue":"30","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1502:13:13"},"loopExpression":{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1538:3:13","subExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1538:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"1538:3:13"},"nodeType":"ForStatement","src":"1497:189:13"},{"expression":{"arguments":[{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1702:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"1702:7:13","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1702:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3059,"id":3094,"nodeType":"Return","src":"1695:17:13"}]},"functionSelector":"6352211e","id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1426:7:13","nodeType":"FunctionDefinition","overrides":{"id":3056,"nodeType":"OverrideSpecifier","overrides":[],"src":"1460:8:13"},"parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"tokenId","nameLocation":"1439:7:13","nodeType":"VariableDeclaration","scope":3096,"src":"1434:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint","nodeType":"ElementaryTypeName","src":"1434:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1433:14:13"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"1478:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1477:9:13"},"scope":3299,"src":"1417:302:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3134,"nodeType":"Block","src":"1797:205:13","statements":[{"body":{"id":3129,"nodeType":"Block","src":"1854:123:13","statements":[{"condition":{"arguments":[{"id":3123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"1916:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3116,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1872:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3121,"indexExpression":{"arguments":[{"id":3119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1893:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1888:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3117,"name":"uint","nodeType":"ElementaryTypeName","src":"1888:4:13","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1872:24:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1897:18:13","memberName":"isCardInCollection","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"1872:43:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"1868:99:13","trueBody":{"id":3127,"nodeType":"Block","src":"1926:41:13","statements":[{"expression":{"id":3125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1951:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3102,"id":3126,"nodeType":"Return","src":"1944:8:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1823:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":3110,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1831:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1827:3:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3108,"name":"int","nodeType":"ElementaryTypeName","src":"1827:3:13","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1823:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3130,"initializationExpression":{"assignments":[3104],"declarations":[{"constant":false,"id":3104,"mutability":"mutable","name":"i","nameLocation":"1816:1:13","nodeType":"VariableDeclaration","scope":3130,"src":"1812:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3103,"name":"int","nodeType":"ElementaryTypeName","src":"1812:3:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3106,"initialValue":{"hexValue":"30","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1820:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1812:9:13"},"loopExpression":{"expression":{"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1849:3:13","subExpression":{"id":3113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1849:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3115,"nodeType":"ExpressionStatement","src":"1849:3:13"},"nodeType":"ForStatement","src":"1807:170:13"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1993:2:13","subExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1994:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"functionReturnParameters":3102,"id":3133,"nodeType":"Return","src":"1986:9:13"}]},"functionSelector":"0abc4a78","id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"getCollectionNbForCard","nameLocation":"1734:22:13","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"tokenId","nameLocation":"1762:7:13","nodeType":"VariableDeclaration","scope":3135,"src":"1757:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint","nodeType":"ElementaryTypeName","src":"1757:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:14:13"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"1792:3:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3100,"name":"int","nodeType":"ElementaryTypeName","src":"1792:3:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1791:5:13"},"scope":3299,"src":"1725:277:13","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[601],"body":{"id":3197,"nodeType":"Block","src":"2143:458:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"2161:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2177:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3147,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[3096],"referencedDeclaration":3096,"src":"2169:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2161:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172644f776e6572736869703a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:50:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","typeString":"literal_string \"CardOwnership: transfer of token that is not own\""},"value":"CardOwnership: transfer of token that is not own"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","typeString":"literal_string \"CardOwnership: transfer of token that is not own\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2153:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:85:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"2153:85:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"2256:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2270:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2262:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:13","typeDescriptions":{}}},"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2256:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172644f776e6572736869703a207472616e7366657220746f20746865207a65726f2061646472657373","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2274:45:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","typeString":"literal_string \"CardOwnership: transfer to the zero address\""},"value":"CardOwnership: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","typeString":"literal_string \"CardOwnership: transfer to the zero address\""}],"id":3154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2248:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3163,"nodeType":"ExpressionStatement","src":"2248:72:13"},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"collectionNumber","nameLocation":"2334:16:13","nodeType":"VariableDeclaration","scope":3197,"src":"2330:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3164,"name":"int","nodeType":"ElementaryTypeName","src":"2330:3:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[{"id":3167,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2376:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3166,"name":"getCollectionNbForCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"2353:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) view returns (int256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2330:54:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"2402:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2422:2:13","subExpression":{"hexValue":"31","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2423:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"2402:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172644f776e6572736869703a206361726420646f6573206e6f74206578697374","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","typeString":"literal_string \"CardOwnership: card does not exist\""},"value":"CardOwnership: card does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","typeString":"literal_string \"CardOwnership: card does not exist\""}],"id":3170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3177,"nodeType":"ExpressionStatement","src":"2394:69:13"},{"expression":{"arguments":[{"id":3188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"2549:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3185,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2522:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3178,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2474:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3183,"indexExpression":{"arguments":[{"id":3181,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"2495:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2490:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3179,"name":"uint","nodeType":"ElementaryTypeName","src":"2490:4:13","typeDescriptions":{}}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2490:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2474:39:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2514:7:13","memberName":"getCard","nodeType":"MemberAccess","referencedDeclaration":3389,"src":"2474:47:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_contract$_Card_$2987_$","typeString":"function (uint256) view external returns (contract Card)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2474:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2531:17:13","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"2474:74:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2474:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3190,"nodeType":"ExpressionStatement","src":"2474:78:13"},{"eventCall":{"arguments":[{"id":3192,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"2576:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"2582:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2586:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3191,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2567:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3196,"nodeType":"EmitStatement","src":"2562:32:13"}]},"functionSelector":"23b872dd","id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2074:12:13","nodeType":"FunctionDefinition","overrides":{"id":3143,"nodeType":"OverrideSpecifier","overrides":[],"src":"2134:8:13"},"parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"from","nameLocation":"2095:4:13","nodeType":"VariableDeclaration","scope":3198,"src":"2087:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"2087:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"to","nameLocation":"2109:2:13","nodeType":"VariableDeclaration","scope":3198,"src":"2101:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"tokenId","nameLocation":"2118:7:13","nodeType":"VariableDeclaration","scope":3198,"src":"2113:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint","nodeType":"ElementaryTypeName","src":"2113:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2086:40:13"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[],"src":"2143:0:13"},"scope":3299,"src":"2065:536:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3222,"nodeType":"Block","src":"2716:176:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2734:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3209,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2753:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2734:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e6f74206578697374","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2770:42:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","typeString":"literal_string \"CardOwnership: collection does not exist\""},"value":"CardOwnership: collection does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","typeString":"literal_string \"CardOwnership: collection does not exist\""}],"id":3207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2726:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3213,"nodeType":"ExpressionStatement","src":"2726:87:13"},{"expression":{"arguments":[{"id":3218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"2872:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3219,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2876:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3214,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2824:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3216,"indexExpression":{"id":3215,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2840:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2824:33:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2858:13:13","memberName":"mintSomeCards","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"2824:47:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3221,"nodeType":"ExpressionStatement","src":"2824:61:13"}]},"functionSelector":"f7374d11","id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"mintSomeCards","nameLocation":"2645:13:13","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"to","nameLocation":"2667:2:13","nodeType":"VariableDeclaration","scope":3223,"src":"2659:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3199,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"quantity","nameLocation":"2676:8:13","nodeType":"VariableDeclaration","scope":3223,"src":"2671:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint","nodeType":"ElementaryTypeName","src":"2671:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"collectionNumber","nameLocation":"2691:16:13","nodeType":"VariableDeclaration","scope":3223,"src":"2686:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint","nodeType":"ElementaryTypeName","src":"2686:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2658:50:13"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[],"src":"2716:0:13"},"scope":3299,"src":"2636:256:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3247,"nodeType":"Block","src":"2996:166:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3014:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3234,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3033:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3014:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e6f74206578697374","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3050:42:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","typeString":"literal_string \"CardOwnership: collection does not exist\""},"value":"CardOwnership: collection does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","typeString":"literal_string \"CardOwnership: collection does not exist\""}],"id":3232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3006:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3006:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3238,"nodeType":"ExpressionStatement","src":"3006:87:13"},{"expression":{"arguments":[{"id":3243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"3143:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3147:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3239,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3104:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3241,"indexExpression":{"id":3240,"name":"collectionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3120:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3104:33:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3138:4:13","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3568,"src":"3104:38:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3104:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3246,"nodeType":"ExpressionStatement","src":"3104:51:13"}]},"functionSelector":"156e29f6","id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2935:4:13","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"to","nameLocation":"2948:2:13","nodeType":"VariableDeclaration","scope":3248,"src":"2940:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"tokenId","nameLocation":"2957:7:13","nodeType":"VariableDeclaration","scope":3248,"src":"2952:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint","nodeType":"ElementaryTypeName","src":"2952:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"collectionNumber","nameLocation":"2971:16:13","nodeType":"VariableDeclaration","scope":3248,"src":"2966:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint","nodeType":"ElementaryTypeName","src":"2966:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2939:49:13"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[],"src":"2996:0:13"},"scope":3299,"src":"2926:236:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3297,"nodeType":"Block","src":"3823:361:13","statements":[{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"gameCollections","nameLocation":"3848:15:13","nodeType":"VariableDeclaration","scope":3297,"src":"3833:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"},"typeName":{"id":3256,"nodeType":"UserDefinedTypeName","pathNode":{"id":3255,"name":"GameCollection","nameLocations":["3833:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"3833:14:13"},"referencedDeclaration":3593,"src":"3833:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"visibility":"internal"}],"id":3264,"initialValue":{"arguments":[{"hexValue":"57697a617264","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3885:8:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","typeString":"literal_string \"Wizard\""},"value":"Wizard"},{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3895:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","typeString":"literal_string \"Wizard\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3866:18:13","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_GameCollection_$3593_$","typeString":"function (string memory,uint256) returns (contract GameCollection)"},"typeName":{"id":3259,"nodeType":"UserDefinedTypeName","pathNode":{"id":3258,"name":"GameCollection","nameLocations":["3870:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"3870:14:13"},"referencedDeclaration":3593,"src":"3870:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3866:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"VariableDeclarationStatement","src":"3833:64:13"},{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3265,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3901:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3267,"indexExpression":{"id":3266,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3917:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3901:32:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3268,"name":"gameCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"3936:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"src":"3901:50:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3270,"nodeType":"ExpressionStatement","src":"3901:50:13"},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3955:17:13","subExpression":{"id":3271,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3955:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ExpressionStatement","src":"3955:17:13"},{"expression":{"arguments":[{"id":3278,"name":"cardNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"4003:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f7879312f312e706e67","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4015:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","typeString":"literal_string \"https://images.pokemontcg.io/xy1/1.png\""},"value":"https://images.pokemontcg.io/xy1/1.png"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","typeString":"literal_string \"https://images.pokemontcg.io/xy1/1.png\""}],"expression":{"baseExpression":{"id":3274,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3976:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3276,"indexExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3992:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3976:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3995:7:13","memberName":"addCard","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"3976:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"3976:80:13"},{"assignments":[3284],"declarations":[{"constant":false,"id":3284,"mutability":"mutable","name":"c","nameLocation":"4071:1:13","nodeType":"VariableDeclaration","scope":3297,"src":"4066:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"},"typeName":{"id":3283,"nodeType":"UserDefinedTypeName","pathNode":{"id":3282,"name":"Card","nameLocations":["4066:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":2987,"src":"4066:4:13"},"referencedDeclaration":2987,"src":"4066:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"visibility":"internal"}],"id":3291,"initialValue":{"arguments":[{"id":3289,"name":"cardNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"4102:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3285,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"4075:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3287,"indexExpression":{"hexValue":"30","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4091:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4075:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4094:7:13","memberName":"getCard","nodeType":"MemberAccess","referencedDeclaration":3389,"src":"4075:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_contract$_Card_$2987_$","typeString":"function (uint256) view external returns (contract Card)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4075:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"nodeType":"VariableDeclarationStatement","src":"4066:47:13"},{"expression":{"arguments":[{"hexValue":"363636","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4176:3:13","typeDescriptions":{"typeIdentifier":"t_rational_666_by_1","typeString":"int_const 666"},"value":"666"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_666_by_1","typeString":"int_const 666"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4168:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"4168:7:13","typeDescriptions":{}}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4168:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3254,"id":3296,"nodeType":"Return","src":"4161:19:13"}]},"functionSelector":"bf874103","id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"addACard","nameLocation":"3770:8:13","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"cardNumber","nameLocation":"3784:10:13","nodeType":"VariableDeclaration","scope":3298,"src":"3779:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint","nodeType":"ElementaryTypeName","src":"3779:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3778:17:13"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3298,"src":"3814:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"3814:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3813:9:13"},"scope":3299,"src":"3761:423:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3300,"src":"188:3998:13","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1309,1318,1327]}],"src":"0:4186:13"},"id":13},"src/GameCollection.sol":{"ast":{"absolutePath":"src/GameCollection.sol","exportedSymbols":{"Card":[2987],"Context":[1478],"GameCollection":[3593],"Ownable":[147]},"id":3594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3301,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"32:21:14"},{"absolutePath":"src/Card.sol","file":"./Card.sol","id":3302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3594,"sourceUnit":2988,"src":"55:20:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GameCollection","contractDependencies":[2987],"contractKind":"contract","fullyImplemented":true,"id":3593,"linearizedBaseContracts":[3593],"name":"GameCollection","nameLocation":"86:14:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":3304,"mutability":"mutable","name":"name","nameLocation":"118:4:14","nodeType":"VariableDeclaration","scope":3593,"src":"104:18:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3303,"name":"string","nodeType":"ElementaryTypeName","src":"104:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"1b6cde10","id":3306,"mutability":"mutable","name":"cardCount","nameLocation":"137:9:14","nodeType":"VariableDeclaration","scope":3593,"src":"125:21:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint","nodeType":"ElementaryTypeName","src":"125:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8dc10768","id":3311,"mutability":"mutable","name":"cards","nameLocation":"178:5:14","nodeType":"VariableDeclaration","scope":3593,"src":"149:34:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"},"typeName":{"id":3310,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3307,"name":"uint","nodeType":"ElementaryTypeName","src":"157:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"149:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3309,"nodeType":"UserDefinedTypeName","pathNode":{"id":3308,"name":"Card","nameLocations":["165:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":2987,"src":"165:4:14"},"referencedDeclaration":2987,"src":"165:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}}},"visibility":"public"},{"body":{"id":3326,"nodeType":"Block","src":"237:46:14","statements":[{"expression":{"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3318,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"241:4:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3319,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"248:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"241:12:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3321,"nodeType":"ExpressionStatement","src":"241:12:14"},{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3322,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"257:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3323,"name":"_cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"269:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"257:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3325,"nodeType":"ExpressionStatement","src":"257:22:14"}]},"id":3327,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"_name","nameLocation":"213:5:14","nodeType":"VariableDeclaration","scope":3327,"src":"199:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"199:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"_cardCount","nameLocation":"225:10:14","nodeType":"VariableDeclaration","scope":3327,"src":"220:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint","nodeType":"ElementaryTypeName","src":"220:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"198:38:14"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"237:0:14"},"scope":3593,"src":"187:96:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3334,"nodeType":"Block","src":"383:24:14","statements":[{"expression":{"id":3332,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"394:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3331,"id":3333,"nodeType":"Return","src":"387:16:14"}]},"functionSelector":"7d620130","id":3335,"implemented":true,"kind":"function","modifiers":[],"name":"getCardCount","nameLocation":"341:12:14","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"353:2:14"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3335,"src":"377:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint","nodeType":"ElementaryTypeName","src":"377:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"376:6:14"},"scope":3593,"src":"332:75:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3342,"nodeType":"Block","src":"499:19:14","statements":[{"expression":{"id":3340,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"510:4:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3339,"id":3341,"nodeType":"Return","src":"503:11:14"}]},"functionSelector":"17d7de7c","id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"453:7:14","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[],"src":"460:2:14"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"484:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3337,"name":"string","nodeType":"ElementaryTypeName","src":"484:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"483:15:14"},"scope":3593,"src":"444:74:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3375,"nodeType":"Block","src":"590:125:14","statements":[{"body":{"id":3371,"nodeType":"Block","src":"631:65:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3360,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"640:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3362,"indexExpression":{"id":3361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"646:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"649:5:14","memberName":"getId","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"640:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"660:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"640:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3370,"nodeType":"IfStatement","src":"636:56:14","trueBody":{"id":3369,"nodeType":"Block","src":"669:23:14","statements":[{"expression":{"hexValue":"74727565","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"682:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3349,"id":3368,"nodeType":"Return","src":"675:11:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3355,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"615:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"611:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3372,"initializationExpression":{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"i","nameLocation":"604:1:14","nodeType":"VariableDeclaration","scope":3372,"src":"599:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint","nodeType":"ElementaryTypeName","src":"599:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3353,"initialValue":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"608:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"599:10:14"},"loopExpression":{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"626:3:14","subExpression":{"id":3357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"626:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"626:3:14"},"nodeType":"ForStatement","src":"594:102:14"},{"expression":{"hexValue":"66616c7365","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"706:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3349,"id":3374,"nodeType":"Return","src":"699:12:14"}]},"functionSelector":"a9aa75ef","id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"isCardInCollection","nameLocation":"530:18:14","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"tokenId","nameLocation":"554:7:14","nodeType":"VariableDeclaration","scope":3376,"src":"549:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint","nodeType":"ElementaryTypeName","src":"549:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"548:14:14"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"584:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"584:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"583:6:14"},"scope":3593,"src":"521:194:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3388,"nodeType":"Block","src":"776:29:14","statements":[{"expression":{"baseExpression":{"id":3384,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"787:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3386,"indexExpression":{"id":3385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"793:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"787:14:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"functionReturnParameters":3383,"id":3387,"nodeType":"Return","src":"780:21:14"}]},"functionSelector":"9188d312","id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"getCard","nameLocation":"727:7:14","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"tokenId","nameLocation":"740:7:14","nodeType":"VariableDeclaration","scope":3389,"src":"735:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint","nodeType":"ElementaryTypeName","src":"735:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"734:14:14"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"770:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"},"typeName":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"Card","nameLocations":["770:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":2987,"src":"770:4:14"},"referencedDeclaration":2987,"src":"770:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"visibility":"internal"}],"src":"769:6:14"},"scope":3593,"src":"718:87:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3426,"nodeType":"Block","src":"915:128:14","statements":[{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"nb","nameLocation":"924:2:14","nodeType":"VariableDeclaration","scope":3426,"src":"919:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint","nodeType":"ElementaryTypeName","src":"919:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3399,"initialValue":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"929:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"919:11:14"},{"body":{"id":3422,"nodeType":"Block","src":"971:56:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3410,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"980:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3412,"indexExpression":{"id":3411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"986:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"980:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"989:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"980:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"980:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"1000:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"980:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3421,"nodeType":"IfStatement","src":"976:47:14","trueBody":{"id":3420,"nodeType":"Block","src":"1007:16:14","statements":[{"expression":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1013:4:14","subExpression":{"id":3417,"name":"nb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1013:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3419,"nodeType":"ExpressionStatement","src":"1013:4:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"951:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3405,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"955:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"951:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"initializationExpression":{"assignments":[3401],"declarations":[{"constant":false,"id":3401,"mutability":"mutable","name":"i","nameLocation":"944:1:14","nodeType":"VariableDeclaration","scope":3423,"src":"939:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint","nodeType":"ElementaryTypeName","src":"939:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3403,"initialValue":{"hexValue":"30","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"939:10:14"},"loopExpression":{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"966:3:14","subExpression":{"id":3407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"966:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ExpressionStatement","src":"966:3:14"},"nodeType":"ForStatement","src":"934:93:14"},{"expression":{"id":3424,"name":"nb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1037:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3395,"id":3425,"nodeType":"Return","src":"1030:9:14"}]},"functionSelector":"70a08231","id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"863:9:14","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"owner","nameLocation":"881:5:14","nodeType":"VariableDeclaration","scope":3427,"src":"873:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"872:15:14"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"909:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint","nodeType":"ElementaryTypeName","src":"909:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"908:6:14"},"scope":3593,"src":"854:189:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3461,"nodeType":"Block","src":"1156:121:14","statements":[{"body":{"id":3459,"nodeType":"Block","src":"1197:77:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3444,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1206:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3446,"indexExpression":{"id":3445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"1212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1206:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1215:5:14","memberName":"getId","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"1206:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3449,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"1226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1206:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3458,"nodeType":"IfStatement","src":"1202:68:14","trueBody":{"id":3457,"nodeType":"Block","src":"1235:35:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3451,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1248:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3453,"indexExpression":{"id":3452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"1254:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1248:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1257:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"1248:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1248:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3433,"id":3456,"nodeType":"Return","src":"1241:23:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"1177:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3439,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1181:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1177:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3460,"initializationExpression":{"assignments":[3435],"declarations":[{"constant":false,"id":3435,"mutability":"mutable","name":"i","nameLocation":"1170:1:14","nodeType":"VariableDeclaration","scope":3460,"src":"1165:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint","nodeType":"ElementaryTypeName","src":"1165:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3437,"initialValue":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1174:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1165:10:14"},"loopExpression":{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1192:3:14","subExpression":{"id":3441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"1192:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"1192:3:14"},"nodeType":"ForStatement","src":"1160:114:14"}]},"functionSelector":"6352211e","id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1104:7:14","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"tokenId","nameLocation":"1117:7:14","nodeType":"VariableDeclaration","scope":3462,"src":"1112:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint","nodeType":"ElementaryTypeName","src":"1112:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1111:14:14"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"1147:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1146:9:14"},"scope":3593,"src":"1095:182:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3481,"nodeType":"Block","src":"1374:50:14","statements":[{"expression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3469,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1378:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3472,"indexExpression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1384:11:14","subExpression":{"id":3470,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1384:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1378:18:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3476,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"1408:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3477,"name":"imgLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"1412:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1399:8:14","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_contract$_Card_$2987_$","typeString":"function (uint256,string memory) returns (contract Card)"},"typeName":{"id":3474,"nodeType":"UserDefinedTypeName","pathNode":{"id":3473,"name":"Card","nameLocations":["1403:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":2987,"src":"1403:4:14"},"referencedDeclaration":2987,"src":"1403:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"src":"1378:42:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3480,"nodeType":"ExpressionStatement","src":"1378:42:14"}]},"functionSelector":"aa93d702","id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"addCard","nameLocation":"1327:7:14","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"id","nameLocation":"1340:2:14","nodeType":"VariableDeclaration","scope":3482,"src":"1335:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint","nodeType":"ElementaryTypeName","src":"1335:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"imgLink","nameLocation":"1358:7:14","nodeType":"VariableDeclaration","scope":3482,"src":"1344:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3465,"name":"string","nodeType":"ElementaryTypeName","src":"1344:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1334:32:14"},"returnParameters":{"id":3468,"nodeType":"ParameterList","parameters":[],"src":"1374:0:14"},"scope":3593,"src":"1318:106:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3519,"nodeType":"Block","src":"1496:142:14","statements":[{"body":{"id":3517,"nodeType":"Block","src":"1537:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3497,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1546:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3499,"indexExpression":{"id":3498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1552:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1546:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1555:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"1546:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1566:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:14","typeDescriptions":{}}},"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1546:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"nodeType":"IfStatement","src":"1542:89:14","trueBody":{"id":3515,"nodeType":"Block","src":"1578:53:14","statements":[{"expression":{"arguments":[{"id":3511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1611:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3507,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1584:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3509,"indexExpression":{"id":3508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1590:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1584:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1593:17:14","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"1584:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3513,"nodeType":"ExpressionStatement","src":"1584:30:14"},{"id":3514,"nodeType":"Break","src":"1620:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1517:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3492,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1521:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1517:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"initializationExpression":{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"i","nameLocation":"1510:1:14","nodeType":"VariableDeclaration","scope":3518,"src":"1505:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint","nodeType":"ElementaryTypeName","src":"1505:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3490,"initialValue":{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1505:10:14"},"loopExpression":{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1532:3:14","subExpression":{"id":3494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1532:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"1532:3:14"},"nodeType":"ForStatement","src":"1500:135:14"}]},"functionSelector":"6a627842","id":3520,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1472:4:14","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"to","nameLocation":"1485:2:14","nodeType":"VariableDeclaration","scope":3520,"src":"1477:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1476:12:14"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[],"src":"1496:0:14"},"scope":3593,"src":"1463:175:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3567,"nodeType":"Block","src":"1733:173:14","statements":[{"body":{"id":3565,"nodeType":"Block","src":"1774:129:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3537,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1783:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3539,"indexExpression":{"id":3538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1789:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1792:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"1783:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1811:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1803:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:14","typeDescriptions":{}}},"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1783:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3547,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1817:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3549,"indexExpression":{"id":3548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1823:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1817:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:5:14","memberName":"getId","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"1817:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"1837:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1783:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3564,"nodeType":"IfStatement","src":"1779:120:14","trueBody":{"id":3563,"nodeType":"Block","src":"1846:53:14","statements":[{"expression":{"arguments":[{"id":3559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"1879:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3555,"name":"cards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1852:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_Card_$2987_$","typeString":"mapping(uint256 => contract Card)"}},"id":3557,"indexExpression":{"id":3556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1858:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1852:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_Card_$2987","typeString":"contract Card"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1861:17:14","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"1852:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1852:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3561,"nodeType":"ExpressionStatement","src":"1852:30:14"},{"id":3562,"nodeType":"Break","src":"1888:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1754:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3532,"name":"cardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1758:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1754:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3566,"initializationExpression":{"assignments":[3528],"declarations":[{"constant":false,"id":3528,"mutability":"mutable","name":"i","nameLocation":"1747:1:14","nodeType":"VariableDeclaration","scope":3566,"src":"1742:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint","nodeType":"ElementaryTypeName","src":"1742:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"hexValue":"30","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1751:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1742:10:14"},"loopExpression":{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1769:3:14","subExpression":{"id":3534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1769:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3536,"nodeType":"ExpressionStatement","src":"1769:3:14"},"nodeType":"ForStatement","src":"1737:166:14"}]},"functionSelector":"40c10f19","id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1695:4:14","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"to","nameLocation":"1708:2:14","nodeType":"VariableDeclaration","scope":3568,"src":"1700:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"tokenId","nameLocation":"1717:7:14","nodeType":"VariableDeclaration","scope":3568,"src":"1712:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint","nodeType":"ElementaryTypeName","src":"1712:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1699:26:14"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[],"src":"1733:0:14"},"scope":3593,"src":"1686:220:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3591,"nodeType":"Block","src":"2022:160:14","statements":[{"body":{"id":3589,"nodeType":"Block","src":"2062:117:14","statements":[{"expression":{"arguments":[{"id":3586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"2171:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3585,"name":"mint","nodeType":"Identifier","overloadedDeclarations":[3520,3568],"referencedDeclaration":3520,"src":"2166:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3588,"nodeType":"ExpressionStatement","src":"2166:8:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"2043:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3580,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"2047:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2043:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3590,"initializationExpression":{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"i","nameLocation":"2036:1:14","nodeType":"VariableDeclaration","scope":3590,"src":"2031:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint","nodeType":"ElementaryTypeName","src":"2031:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3578,"initialValue":{"hexValue":"30","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2040:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2031:10:14"},"loopExpression":{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2057:3:14","subExpression":{"id":3582,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"2057:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"2057:3:14"},"nodeType":"ForStatement","src":"2026:153:14"}]},"functionSelector":"f92906ff","id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"mintSomeCards","nameLocation":"1974:13:14","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"to","nameLocation":"1996:2:14","nodeType":"VariableDeclaration","scope":3592,"src":"1988:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"quantity","nameLocation":"2005:8:14","nodeType":"VariableDeclaration","scope":3592,"src":"2000:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint","nodeType":"ElementaryTypeName","src":"2000:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:27:14"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[],"src":"2022:0:14"},"scope":3593,"src":"1965:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3594,"src":"77:2107:14","usedErrors":[],"usedEvents":[]}],"src":"32:2153:14"},"id":14},"src/Main.sol":{"ast":{"absolutePath":"src/Main.sol","exportedSymbols":{"Card":[2987],"CardOwnership":[3299],"Context":[1478],"ERC165":[1757],"ERC721":[1293],"GameCollection":[3593],"IERC165":[1769],"IERC721":[1410],"IERC721Errors":[237],"IERC721Metadata":[1456],"IERC721Receiver":[1428],"Main":[3661],"Ownable":[147],"Strings":[1733]},"id":3662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3595,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"32:21:15"},{"absolutePath":"src/GameCollection.sol","file":"./GameCollection.sol","id":3596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3662,"sourceUnit":3594,"src":"55:30:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/CardOwnership.sol","file":"./CardOwnership.sol","id":3597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3662,"sourceUnit":3300,"src":"86:29:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3598,"name":"CardOwnership","nameLocations":["134:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3299,"src":"134:13:15"},"id":3599,"nodeType":"InheritanceSpecifier","src":"134:13:15"}],"canonicalName":"Main","contractDependencies":[3593],"contractKind":"contract","fullyImplemented":true,"id":3661,"linearizedBaseContracts":[3661,3299,1293,237,1456,1410,1757,1769,147,1478],"name":"Main","nameLocation":"126:4:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3601,"mutability":"mutable","name":"administrateur","nameLocation":"167:14:15","nodeType":"VariableDeclaration","scope":3661,"src":"151:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"151:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":3609,"nodeType":"Block","src":"364:35:15","statements":[{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3604,"name":"administrateur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"368:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"385:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"389:6:15","memberName":"sender","nodeType":"MemberAccess","src":"385:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"368:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3608,"nodeType":"ExpressionStatement","src":"368:27:15"}]},"id":3610,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"361:2:15"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[],"src":"364:0:15"},"scope":3661,"src":"350:49:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3636,"nodeType":"Block","src":"478:143:15","statements":[{"assignments":[3619],"declarations":[{"constant":false,"id":3619,"mutability":"mutable","name":"gameCollections","nameLocation":"497:15:15","nodeType":"VariableDeclaration","scope":3636,"src":"482:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"},"typeName":{"id":3618,"nodeType":"UserDefinedTypeName","pathNode":{"id":3617,"name":"GameCollection","nameLocations":["482:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"482:14:15"},"referencedDeclaration":3593,"src":"482:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"visibility":"internal"}],"id":3626,"initialValue":{"arguments":[{"id":3623,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"534:4:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"30","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"540:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"515:18:15","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_GameCollection_$3593_$","typeString":"function (string memory,uint256) returns (contract GameCollection)"},"typeName":{"id":3621,"nodeType":"UserDefinedTypeName","pathNode":{"id":3620,"name":"GameCollection","nameLocations":["519:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"519:14:15"},"referencedDeclaration":3593,"src":"519:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"515:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"VariableDeclarationStatement","src":"482:60:15"},{"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3627,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"546:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3629,"indexExpression":{"id":3628,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"562:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"546:32:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3630,"name":"gameCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"581:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"src":"546:50:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3632,"nodeType":"ExpressionStatement","src":"546:50:15"},{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"600:17:15","subExpression":{"id":3633,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"600:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3635,"nodeType":"ExpressionStatement","src":"600:17:15"}]},"functionSelector":"64f37671","id":3637,"implemented":true,"kind":"function","modifiers":[],"name":"createGameCollection","nameLocation":"411:20:15","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"name","nameLocation":"448:4:15","nodeType":"VariableDeclaration","scope":3637,"src":"432:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3611,"name":"string","nodeType":"ElementaryTypeName","src":"432:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"cardCount","nameLocation":"458:9:15","nodeType":"VariableDeclaration","scope":3637,"src":"454:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3613,"name":"int","nodeType":"ElementaryTypeName","src":"454:3:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"431:37:15"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"478:0:15"},"scope":3661,"src":"402:219:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3659,"nodeType":"Block","src":"666:147:15","statements":[{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"gameCollections","nameLocation":"685:15:15","nodeType":"VariableDeclaration","scope":3659,"src":"670:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"GameCollection","nameLocations":["670:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"670:14:15"},"referencedDeclaration":3593,"src":"670:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"visibility":"internal"}],"id":3649,"initialValue":{"arguments":[{"hexValue":"57697a617264","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"722:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","typeString":"literal_string \"Wizard\""},"value":"Wizard"},{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"732:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","typeString":"literal_string \"Wizard\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"703:18:15","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_GameCollection_$3593_$","typeString":"function (string memory,uint256) returns (contract GameCollection)"},"typeName":{"id":3644,"nodeType":"UserDefinedTypeName","pathNode":{"id":3643,"name":"GameCollection","nameLocations":["707:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"707:14:15"},"referencedDeclaration":3593,"src":"707:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"703:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"VariableDeclarationStatement","src":"670:64:15"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3650,"name":"cardCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"738:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_contract$_GameCollection_$3593_$","typeString":"mapping(uint256 => contract GameCollection)"}},"id":3652,"indexExpression":{"id":3651,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"754:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"738:32:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3653,"name":"gameCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"773:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"src":"738:50:15","typeDescriptions":{"typeIdentifier":"t_contract$_GameCollection_$3593","typeString":"contract GameCollection"}},"id":3655,"nodeType":"ExpressionStatement","src":"738:50:15"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"792:17:15","subExpression":{"id":3656,"name":"collectionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"792:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"792:17:15"}]},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"createGameCollection2","nameLocation":"633:21:15","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[],"src":"654:2:15"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"666:0:15"},"scope":3661,"src":"624:189:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3662,"src":"117:1129:15","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1309,1318,1327]}],"src":"32:1215:15"},"id":15}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":317,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":323,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d1a1503b94e67b1140e37648e2b81c7ec8d2834b954c500654eb5772ec9e9164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD1 LOG1 POP EXTCODESIZE SWAP5 0xE6 PUSH28 0x1140E37648E2B81C7EC8D2834B954C500654EB5772EC9E9164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d1a1503b94e67b1140e37648e2b81c7ec8d2834b954c500654eb5772ec9e9164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD1 LOG1 POP EXTCODESIZE SWAP5 0xE6 PUSH28 0x1140E37648E2B81C7EC8D2834B954C500654EB5772EC9E9164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"251:2847:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066d55c3938bdee5e14d05a6a04425c3d0b6d4fad67efc8aafeaf67cc517b228a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD55C3938BDEE5E EQ 0xD0 GAS PUSH11 0x4425C3D0B6D4FAD67EFC8 0xAA INVALID 0xAF PUSH8 0xCC517B228A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066d55c3938bdee5e14d05a6a04425c3d0b6d4fad67efc8aafeaf67cc517b228a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD55C3938BDEE5E EQ 0xD0 GAS PUSH11 0x4425C3D0B6D4FAD67EFC8 0xAA INVALID 0xAF PUSH8 0xCC517B228A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"216:1047:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/Card.sol":{"Card":{"abi":[{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"string","name":"_imgLink","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"getId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getImgLink","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2957":{"entryPoint":null,"id":2957,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":224,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":756,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory":{"entryPoint":882,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1036,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1053,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":420,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1193,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1082,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1504,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1016,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":440,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1465,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1339,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1659,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":712,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1214,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1140,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1629,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":573,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1329,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1597,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1093,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":526,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1379,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":499,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":504,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":430,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":509,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1230,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1584,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1437,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1243,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1389,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":450,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1432,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9264:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:32:16","statements":[{"nodeType":"YulAssignment","src":"389:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:77:16"},{"body":{"nodeType":"YulBlock","src":"460:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:16"},"nodeType":"YulFunctionCall","src":"519:12:16"},"nodeType":"YulExpressionStatement","src":"519:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:16"},"nodeType":"YulFunctionCall","src":"490:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:16"},"nodeType":"YulFunctionCall","src":"480:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:16"},"nodeType":"YulFunctionCall","src":"473:43:16"},"nodeType":"YulIf","src":"470:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:16","type":""}],"src":"417:122:16"},{"body":{"nodeType":"YulBlock","src":"608:80:16","statements":[{"nodeType":"YulAssignment","src":"618:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:16"},"nodeType":"YulFunctionCall","src":"627:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:16"},"nodeType":"YulFunctionCall","src":"649:33:16"},"nodeType":"YulExpressionStatement","src":"649:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:16","type":""}],"src":"545:143:16"},{"body":{"nodeType":"YulBlock","src":"783:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"800:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"793:6:16"},"nodeType":"YulFunctionCall","src":"793:12:16"},"nodeType":"YulExpressionStatement","src":"793:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"694:117:16"},{"body":{"nodeType":"YulBlock","src":"906:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"923:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"926:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"916:6:16"},"nodeType":"YulFunctionCall","src":"916:12:16"},"nodeType":"YulExpressionStatement","src":"916:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"817:117:16"},{"body":{"nodeType":"YulBlock","src":"988:54:16","statements":[{"nodeType":"YulAssignment","src":"998:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1012:3:16"},"nodeType":"YulFunctionCall","src":"1012:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1032:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1028:3:16"},"nodeType":"YulFunctionCall","src":"1028:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1008:3:16"},"nodeType":"YulFunctionCall","src":"1008:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"998:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"971:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"981:6:16","type":""}],"src":"940:102:16"},{"body":{"nodeType":"YulBlock","src":"1076:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1093:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1096:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1086:6:16"},"nodeType":"YulFunctionCall","src":"1086:88:16"},"nodeType":"YulExpressionStatement","src":"1086:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1190:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1193:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:16"},"nodeType":"YulFunctionCall","src":"1183:15:16"},"nodeType":"YulExpressionStatement","src":"1183:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1217:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1207:6:16"},"nodeType":"YulFunctionCall","src":"1207:15:16"},"nodeType":"YulExpressionStatement","src":"1207:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1048:180:16"},{"body":{"nodeType":"YulBlock","src":"1277:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1287:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1309:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1339:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1317:21:16"},"nodeType":"YulFunctionCall","src":"1317:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1305:3:16"},"nodeType":"YulFunctionCall","src":"1305:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1291:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1456:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1458:16:16"},"nodeType":"YulFunctionCall","src":"1458:18:16"},"nodeType":"YulExpressionStatement","src":"1458:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1399:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1411:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1396:2:16"},"nodeType":"YulFunctionCall","src":"1396:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1435:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1432:2:16"},"nodeType":"YulFunctionCall","src":"1432:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1393:2:16"},"nodeType":"YulFunctionCall","src":"1393:62:16"},"nodeType":"YulIf","src":"1390:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1498:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1487:6:16"},"nodeType":"YulFunctionCall","src":"1487:22:16"},"nodeType":"YulExpressionStatement","src":"1487:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1263:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"1271:4:16","type":""}],"src":"1234:281:16"},{"body":{"nodeType":"YulBlock","src":"1562:88:16","statements":[{"nodeType":"YulAssignment","src":"1572:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1582:18:16"},"nodeType":"YulFunctionCall","src":"1582:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1572:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1631:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1639:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1611:19:16"},"nodeType":"YulFunctionCall","src":"1611:33:16"},"nodeType":"YulExpressionStatement","src":"1611:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1546:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1555:6:16","type":""}],"src":"1521:129:16"},{"body":{"nodeType":"YulBlock","src":"1723:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1828:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1830:16:16"},"nodeType":"YulFunctionCall","src":"1830:18:16"},"nodeType":"YulExpressionStatement","src":"1830:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1808:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:16"},"nodeType":"YulFunctionCall","src":"1797:30:16"},"nodeType":"YulIf","src":"1794:56:16"},{"nodeType":"YulAssignment","src":"1860:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1890:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1868:21:16"},"nodeType":"YulFunctionCall","src":"1868:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1860:4:16"}]},{"nodeType":"YulAssignment","src":"1934:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1946:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1952:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:16"},"nodeType":"YulFunctionCall","src":"1942:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1934:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1707:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1718:4:16","type":""}],"src":"1656:308:16"},{"body":{"nodeType":"YulBlock","src":"2032:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2042:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2051:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2046:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2111:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2136:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"2141:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2132:3:16"},"nodeType":"YulFunctionCall","src":"2132:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2155:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"2160:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2151:3:16"},"nodeType":"YulFunctionCall","src":"2151:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2145:5:16"},"nodeType":"YulFunctionCall","src":"2145:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:16"},"nodeType":"YulFunctionCall","src":"2125:39:16"},"nodeType":"YulExpressionStatement","src":"2125:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2072:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"2075:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2069:2:16"},"nodeType":"YulFunctionCall","src":"2069:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2083:19:16","statements":[{"nodeType":"YulAssignment","src":"2085:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2094:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"2097:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2090:3:16"},"nodeType":"YulFunctionCall","src":"2090:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2085:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2065:3:16","statements":[]},"src":"2061:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2194:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2199:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:16"},"nodeType":"YulFunctionCall","src":"2190:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2208:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2183:6:16"},"nodeType":"YulFunctionCall","src":"2183:27:16"},"nodeType":"YulExpressionStatement","src":"2183:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2014:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2019:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"2024:6:16","type":""}],"src":"1970:246:16"},{"body":{"nodeType":"YulBlock","src":"2317:339:16","statements":[{"nodeType":"YulAssignment","src":"2327:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2394:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2352:41:16"},"nodeType":"YulFunctionCall","src":"2352:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2336:15:16"},"nodeType":"YulFunctionCall","src":"2336:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2327:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2418:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2425:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2411:6:16"},"nodeType":"YulFunctionCall","src":"2411:21:16"},"nodeType":"YulExpressionStatement","src":"2411:21:16"},{"nodeType":"YulVariableDeclaration","src":"2441:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2456:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2463:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:16"},"nodeType":"YulFunctionCall","src":"2452:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2445:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2506:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2508:77:16"},"nodeType":"YulFunctionCall","src":"2508:79:16"},"nodeType":"YulExpressionStatement","src":"2508:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2487:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2492:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:16"},"nodeType":"YulFunctionCall","src":"2483:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2501:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2480:2:16"},"nodeType":"YulFunctionCall","src":"2480:25:16"},"nodeType":"YulIf","src":"2477:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2633:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2638:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2643:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2598:34:16"},"nodeType":"YulFunctionCall","src":"2598:52:16"},"nodeType":"YulExpressionStatement","src":"2598:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2290:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"2295:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2303:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2311:5:16","type":""}],"src":"2222:434:16"},{"body":{"nodeType":"YulBlock","src":"2749:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2798:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2800:77:16"},"nodeType":"YulFunctionCall","src":"2800:79:16"},"nodeType":"YulExpressionStatement","src":"2800:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2777:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2785:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2773:3:16"},"nodeType":"YulFunctionCall","src":"2773:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2792:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2769:3:16"},"nodeType":"YulFunctionCall","src":"2769:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2762:6:16"},"nodeType":"YulFunctionCall","src":"2762:35:16"},"nodeType":"YulIf","src":"2759:122:16"},{"nodeType":"YulVariableDeclaration","src":"2890:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2910:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2904:5:16"},"nodeType":"YulFunctionCall","src":"2904:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2894:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2926:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2998:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3006:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2994:3:16"},"nodeType":"YulFunctionCall","src":"2994:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"3013:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"3021:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2935:58:16"},"nodeType":"YulFunctionCall","src":"2935:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2926:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2727:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2735:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2743:5:16","type":""}],"src":"2676:355:16"},{"body":{"nodeType":"YulBlock","src":"3141:576:16","statements":[{"body":{"nodeType":"YulBlock","src":"3187:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3189:77:16"},"nodeType":"YulFunctionCall","src":"3189:79:16"},"nodeType":"YulExpressionStatement","src":"3189:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3162:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3158:3:16"},"nodeType":"YulFunctionCall","src":"3158:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3183:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3154:3:16"},"nodeType":"YulFunctionCall","src":"3154:32:16"},"nodeType":"YulIf","src":"3151:119:16"},{"nodeType":"YulBlock","src":"3280:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3295:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3309:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3299:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3324:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3370:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3381:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3366:3:16"},"nodeType":"YulFunctionCall","src":"3366:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3390:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3334:31:16"},"nodeType":"YulFunctionCall","src":"3334:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3324:6:16"}]}]},{"nodeType":"YulBlock","src":"3418:292:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3457:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3468:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3453:3:16"},"nodeType":"YulFunctionCall","src":"3453:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:16"},"nodeType":"YulFunctionCall","src":"3447:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3519:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3521:77:16"},"nodeType":"YulFunctionCall","src":"3521:79:16"},"nodeType":"YulExpressionStatement","src":"3521:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3491:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3499:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3488:2:16"},"nodeType":"YulFunctionCall","src":"3488:30:16"},"nodeType":"YulIf","src":"3485:117:16"},{"nodeType":"YulAssignment","src":"3616:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3683:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:16"},"nodeType":"YulFunctionCall","src":"3668:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3692:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3626:41:16"},"nodeType":"YulFunctionCall","src":"3626:74:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3616:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3103:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3114:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3126:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3134:6:16","type":""}],"src":"3037:680:16"},{"body":{"nodeType":"YulBlock","src":"3768:81:16","statements":[{"nodeType":"YulAssignment","src":"3778:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3793:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3800:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3789:3:16"},"nodeType":"YulFunctionCall","src":"3789:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3778:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3750:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3760:7:16","type":""}],"src":"3723:126:16"},{"body":{"nodeType":"YulBlock","src":"3900:51:16","statements":[{"nodeType":"YulAssignment","src":"3910:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3939:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3921:17:16"},"nodeType":"YulFunctionCall","src":"3921:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3910:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3882:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3892:7:16","type":""}],"src":"3855:96:16"},{"body":{"nodeType":"YulBlock","src":"4022:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4039:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4062:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4044:17:16"},"nodeType":"YulFunctionCall","src":"4044:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:16"},"nodeType":"YulFunctionCall","src":"4032:37:16"},"nodeType":"YulExpressionStatement","src":"4032:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4010:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4017:3:16","type":""}],"src":"3957:118:16"},{"body":{"nodeType":"YulBlock","src":"4179:124:16","statements":[{"nodeType":"YulAssignment","src":"4189:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4201:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4212:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4197:3:16"},"nodeType":"YulFunctionCall","src":"4197:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4189:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4269:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4282:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4293:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4278:3:16"},"nodeType":"YulFunctionCall","src":"4278:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4225:43:16"},"nodeType":"YulFunctionCall","src":"4225:71:16"},"nodeType":"YulExpressionStatement","src":"4225:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4151:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4163:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4174:4:16","type":""}],"src":"4081:222:16"},{"body":{"nodeType":"YulBlock","src":"4368:40:16","statements":[{"nodeType":"YulAssignment","src":"4379:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4395:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4389:5:16"},"nodeType":"YulFunctionCall","src":"4389:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4379:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4351:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4361:6:16","type":""}],"src":"4309:99:16"},{"body":{"nodeType":"YulBlock","src":"4442:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4459:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4462:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4452:6:16"},"nodeType":"YulFunctionCall","src":"4452:88:16"},"nodeType":"YulExpressionStatement","src":"4452:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4556:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4559:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:16"},"nodeType":"YulFunctionCall","src":"4549:15:16"},"nodeType":"YulExpressionStatement","src":"4549:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4580:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4583:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4573:6:16"},"nodeType":"YulFunctionCall","src":"4573:15:16"},"nodeType":"YulExpressionStatement","src":"4573:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4414:180:16"},{"body":{"nodeType":"YulBlock","src":"4651:269:16","statements":[{"nodeType":"YulAssignment","src":"4661:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4675:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4681:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4671:3:16"},"nodeType":"YulFunctionCall","src":"4671:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4661:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"4692:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4722:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4728:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4718:3:16"},"nodeType":"YulFunctionCall","src":"4718:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4696:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4769:51:16","statements":[{"nodeType":"YulAssignment","src":"4783:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4797:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4805:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4793:3:16"},"nodeType":"YulFunctionCall","src":"4793:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4783:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4749:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4742:6:16"},"nodeType":"YulFunctionCall","src":"4742:26:16"},"nodeType":"YulIf","src":"4739:81:16"},{"body":{"nodeType":"YulBlock","src":"4872:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4886:16:16"},"nodeType":"YulFunctionCall","src":"4886:18:16"},"nodeType":"YulExpressionStatement","src":"4886:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4836:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4859:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4856:2:16"},"nodeType":"YulFunctionCall","src":"4856:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4833:2:16"},"nodeType":"YulFunctionCall","src":"4833:38:16"},"nodeType":"YulIf","src":"4830:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4635:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4644:6:16","type":""}],"src":"4600:320:16"},{"body":{"nodeType":"YulBlock","src":"4980:87:16","statements":[{"nodeType":"YulAssignment","src":"4990:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4998:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4990:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5018:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5021:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:16"},"nodeType":"YulFunctionCall","src":"5011:14:16"},"nodeType":"YulExpressionStatement","src":"5011:14:16"},{"nodeType":"YulAssignment","src":"5034:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5055:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5042:9:16"},"nodeType":"YulFunctionCall","src":"5042:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5034:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4967:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4975:4:16","type":""}],"src":"4926:141:16"},{"body":{"nodeType":"YulBlock","src":"5117:49:16","statements":[{"nodeType":"YulAssignment","src":"5127:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5145:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5152:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5141:3:16"},"nodeType":"YulFunctionCall","src":"5141:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"5157:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5137:3:16"},"nodeType":"YulFunctionCall","src":"5137:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5127:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5110:6:16","type":""}],"src":"5073:93:16"},{"body":{"nodeType":"YulBlock","src":"5225:54:16","statements":[{"nodeType":"YulAssignment","src":"5235:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5260:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"5266:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5256:3:16"},"nodeType":"YulFunctionCall","src":"5256:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5235:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5200:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"5206:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5216:8:16","type":""}],"src":"5172:107:16"},{"body":{"nodeType":"YulBlock","src":"5361:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5371:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5392:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"5404:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5388:3:16"},"nodeType":"YulFunctionCall","src":"5388:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5375:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5415:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5457:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5427:18:16"},"nodeType":"YulFunctionCall","src":"5427:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5419:4:16","type":""}]},{"nodeType":"YulAssignment","src":"5533:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5564:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5575:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5545:18:16"},"nodeType":"YulFunctionCall","src":"5545:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5533:8:16"}]},{"nodeType":"YulAssignment","src":"5593:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5606:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5617:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5613:3:16"},"nodeType":"YulFunctionCall","src":"5613:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5602:3:16"},"nodeType":"YulFunctionCall","src":"5602:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5593:5:16"}]},{"nodeType":"YulAssignment","src":"5632:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5645:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5656:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"5666:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5652:3:16"},"nodeType":"YulFunctionCall","src":"5652:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5642:2:16"},"nodeType":"YulFunctionCall","src":"5642:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5632:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5322:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5329:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5341:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5354:6:16","type":""}],"src":"5285:393:16"},{"body":{"nodeType":"YulBlock","src":"5716:28:16","statements":[{"nodeType":"YulAssignment","src":"5726:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5733:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5726:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5702:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5712:3:16","type":""}],"src":"5684:60:16"},{"body":{"nodeType":"YulBlock","src":"5810:82:16","statements":[{"nodeType":"YulAssignment","src":"5820:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5878:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5860:17:16"},"nodeType":"YulFunctionCall","src":"5860:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5851:8:16"},"nodeType":"YulFunctionCall","src":"5851:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5833:17:16"},"nodeType":"YulFunctionCall","src":"5833:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5820:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5790:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5800:9:16","type":""}],"src":"5750:142:16"},{"body":{"nodeType":"YulBlock","src":"5945:28:16","statements":[{"nodeType":"YulAssignment","src":"5955:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5962:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5955:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5931:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5941:3:16","type":""}],"src":"5898:75:16"},{"body":{"nodeType":"YulBlock","src":"6055:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6065:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6120:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6089:30:16"},"nodeType":"YulFunctionCall","src":"6089:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6069:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6144:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6184:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6178:5:16"},"nodeType":"YulFunctionCall","src":"6178:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6191:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6223:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6199:23:16"},"nodeType":"YulFunctionCall","src":"6199:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6150:27:16"},"nodeType":"YulFunctionCall","src":"6150:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6137:6:16"},"nodeType":"YulFunctionCall","src":"6137:105:16"},"nodeType":"YulExpressionStatement","src":"6137:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6032:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6038:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6046:7:16","type":""}],"src":"5979:269:16"},{"body":{"nodeType":"YulBlock","src":"6303:24:16","statements":[{"nodeType":"YulAssignment","src":"6313:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6320:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6313:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6299:3:16","type":""}],"src":"6254:73:16"},{"body":{"nodeType":"YulBlock","src":"6386:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6396:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6410:30:16"},"nodeType":"YulFunctionCall","src":"6410:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6400:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6495:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6501:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6509:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6451:43:16"},"nodeType":"YulFunctionCall","src":"6451:65:16"},"nodeType":"YulExpressionStatement","src":"6451:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6372:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6378:6:16","type":""}],"src":"6333:189:16"},{"body":{"nodeType":"YulBlock","src":"6578:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"6645:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6689:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6696:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6659:29:16"},"nodeType":"YulFunctionCall","src":"6659:39:16"},"nodeType":"YulExpressionStatement","src":"6659:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6598:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"6605:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6595:2:16"},"nodeType":"YulFunctionCall","src":"6595:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6610:26:16","statements":[{"nodeType":"YulAssignment","src":"6612:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6625:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6632:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6621:3:16"},"nodeType":"YulFunctionCall","src":"6621:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6612:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6592:2:16","statements":[]},"src":"6588:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6566:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6573:3:16","type":""}],"src":"6528:186:16"},{"body":{"nodeType":"YulBlock","src":"6799:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"6825:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6839:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6887:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6855:31:16"},"nodeType":"YulFunctionCall","src":"6855:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6843:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6906:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6929:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6957:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6939:17:16"},"nodeType":"YulFunctionCall","src":"6939:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:16"},"nodeType":"YulFunctionCall","src":"6925:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6910:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7126:27:16","statements":[{"nodeType":"YulAssignment","src":"7128:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7143:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7128:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7110:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"7122:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7107:2:16"},"nodeType":"YulFunctionCall","src":"7107:18:16"},"nodeType":"YulIf","src":"7104:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7195:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7212:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7240:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7222:17:16"},"nodeType":"YulFunctionCall","src":"7222:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7208:3:16"},"nodeType":"YulFunctionCall","src":"7208:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7166:28:16"},"nodeType":"YulFunctionCall","src":"7166:80:16"},"nodeType":"YulExpressionStatement","src":"7166:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6816:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6821:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6813:2:16"},"nodeType":"YulFunctionCall","src":"6813:11:16"},"nodeType":"YulIf","src":"6810:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6775:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6782:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6787:10:16","type":""}],"src":"6720:543:16"},{"body":{"nodeType":"YulBlock","src":"7332:54:16","statements":[{"nodeType":"YulAssignment","src":"7342:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7367:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"7373:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7363:3:16"},"nodeType":"YulFunctionCall","src":"7363:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7342:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7307:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"7313:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7323:8:16","type":""}],"src":"7269:117:16"},{"body":{"nodeType":"YulBlock","src":"7443:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7453:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7502:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7505:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7498:3:16"},"nodeType":"YulFunctionCall","src":"7498:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7517:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7513:3:16"},"nodeType":"YulFunctionCall","src":"7513:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7469:28:16"},"nodeType":"YulFunctionCall","src":"7469:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7465:3:16"},"nodeType":"YulFunctionCall","src":"7465:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7457:4:16","type":""}]},{"nodeType":"YulAssignment","src":"7530:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7544:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"7550:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7540:3:16"},"nodeType":"YulFunctionCall","src":"7540:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7530:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7420:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7426:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7436:6:16","type":""}],"src":"7392:169:16"},{"body":{"nodeType":"YulBlock","src":"7647:214:16","statements":[{"nodeType":"YulAssignment","src":"7780:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7807:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"7813:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7788:18:16"},"nodeType":"YulFunctionCall","src":"7788:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7780:4:16"}]},{"nodeType":"YulAssignment","src":"7826:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7837:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7847:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7850:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7843:3:16"},"nodeType":"YulFunctionCall","src":"7843:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7834:2:16"},"nodeType":"YulFunctionCall","src":"7834:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7826:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7628:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"7634:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7642:4:16","type":""}],"src":"7566:295:16"},{"body":{"nodeType":"YulBlock","src":"7958:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7969:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8016:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7983:32:16"},"nodeType":"YulFunctionCall","src":"7983:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7973:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8105:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8107:16:16"},"nodeType":"YulFunctionCall","src":"8107:18:16"},"nodeType":"YulExpressionStatement","src":"8107:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8077:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8085:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8074:2:16"},"nodeType":"YulFunctionCall","src":"8074:30:16"},"nodeType":"YulIf","src":"8071:56:16"},{"nodeType":"YulVariableDeclaration","src":"8137:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8183:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8177:5:16"},"nodeType":"YulFunctionCall","src":"8177:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8151:25:16"},"nodeType":"YulFunctionCall","src":"8151:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8141:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8282:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8288:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8296:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8236:45:16"},"nodeType":"YulFunctionCall","src":"8236:67:16"},"nodeType":"YulExpressionStatement","src":"8236:67:16"},{"nodeType":"YulVariableDeclaration","src":"8313:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8330:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8317:9:16","type":""}]},{"nodeType":"YulAssignment","src":"8341:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8354:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8341:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8405:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8419:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8438:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8450:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8446:3:16"},"nodeType":"YulFunctionCall","src":"8446:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8434:3:16"},"nodeType":"YulFunctionCall","src":"8434:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8423:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8470:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8516:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8484:31:16"},"nodeType":"YulFunctionCall","src":"8484:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8474:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8534:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8543:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8538:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8602:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8627:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8645:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8650:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8641:3:16"},"nodeType":"YulFunctionCall","src":"8641:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8635:5:16"},"nodeType":"YulFunctionCall","src":"8635:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8620:6:16"},"nodeType":"YulFunctionCall","src":"8620:42:16"},"nodeType":"YulExpressionStatement","src":"8620:42:16"},{"nodeType":"YulAssignment","src":"8679:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8693:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8701:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8689:3:16"},"nodeType":"YulFunctionCall","src":"8689:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8679:6:16"}]},{"nodeType":"YulAssignment","src":"8720:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8737:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8748:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8733:3:16"},"nodeType":"YulFunctionCall","src":"8733:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8720:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8568:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8571:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8565:2:16"},"nodeType":"YulFunctionCall","src":"8565:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8580:21:16","statements":[{"nodeType":"YulAssignment","src":"8582:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8591:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"8594:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8587:3:16"},"nodeType":"YulFunctionCall","src":"8587:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8582:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"8561:3:16","statements":[]},"src":"8557:208:16"},{"body":{"nodeType":"YulBlock","src":"8801:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8819:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8846:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8851:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8842:3:16"},"nodeType":"YulFunctionCall","src":"8842:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8836:5:16"},"nodeType":"YulFunctionCall","src":"8836:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8823:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8886:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8913:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8928:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8936:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8924:3:16"},"nodeType":"YulFunctionCall","src":"8924:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8894:18:16"},"nodeType":"YulFunctionCall","src":"8894:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8879:6:16"},"nodeType":"YulFunctionCall","src":"8879:64:16"},"nodeType":"YulExpressionStatement","src":"8879:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8784:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8793:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8781:2:16"},"nodeType":"YulFunctionCall","src":"8781:19:16"},"nodeType":"YulIf","src":"8778:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8977:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8991:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8999:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8987:3:16"},"nodeType":"YulFunctionCall","src":"8987:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"9003:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:16"},"nodeType":"YulFunctionCall","src":"8983:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8970:6:16"},"nodeType":"YulFunctionCall","src":"8970:36:16"},"nodeType":"YulExpressionStatement","src":"8970:36:16"}]},"nodeType":"YulCase","src":"8398:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8403:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9033:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9047:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9060:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9051:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9084:67:16","statements":[{"nodeType":"YulAssignment","src":"9102:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9121:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9126:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9117:3:16"},"nodeType":"YulFunctionCall","src":"9117:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9111:5:16"},"nodeType":"YulFunctionCall","src":"9111:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9102:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9077:6:16"},"nodeType":"YulIf","src":"9074:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9171:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9230:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"9237:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9177:52:16"},"nodeType":"YulFunctionCall","src":"9177:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9164:6:16"},"nodeType":"YulFunctionCall","src":"9164:81:16"},"nodeType":"YulExpressionStatement","src":"9164:81:16"}]},"nodeType":"YulCase","src":"9025:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8378:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8386:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8375:2:16"},"nodeType":"YulFunctionCall","src":"8375:14:16"},"nodeType":"YulSwitch","src":"8368:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7947:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"7953:3:16","type":""}],"src":"7866:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000cc438038062000cc4833981810160405281019062000037919062000372565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200041d565b60405180910390fd5b620000be81620000e060201b60201c565b50816001819055508060029081620000d791906200067b565b50505062000762565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001cd81620001b8565b8114620001d957600080fd5b50565b600081519050620001ed81620001c2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024882620001fd565b810181811067ffffffffffffffff821117156200026a57620002696200020e565b5b80604052505050565b60006200027f620001a4565b90506200028d82826200023d565b919050565b600067ffffffffffffffff821115620002b057620002af6200020e565b5b620002bb82620001fd565b9050602081019050919050565b60005b83811015620002e8578082015181840152602081019050620002cb565b60008484015250505050565b60006200030b620003058462000292565b62000273565b9050828152602081018484840111156200032a5762000329620001f8565b5b62000337848285620002c8565b509392505050565b600082601f830112620003575762000356620001f3565b5b815162000369848260208601620002f4565b91505092915050565b600080604083850312156200038c576200038b620001ae565b5b60006200039c85828601620001dc565b925050602083015167ffffffffffffffff811115620003c057620003bf620001b3565b5b620003ce858286016200033f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040582620003d8565b9050919050565b6200041781620003f8565b82525050565b60006020820190506200043460008301846200040c565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048d57607f821691505b602082108103620004a357620004a262000445565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200050d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004ce565b620005198683620004ce565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200055c620005566200055084620001b8565b62000531565b620001b8565b9050919050565b6000819050919050565b62000578836200053b565b62000590620005878262000563565b848454620004db565b825550505050565b600090565b620005a762000598565b620005b48184846200056d565b505050565b5b81811015620005dc57620005d06000826200059d565b600181019050620005ba565b5050565b601f8211156200062b57620005f581620004a9565b6200060084620004be565b8101602085101562000610578190505b620006286200061f85620004be565b830182620005b9565b50505b505050565b600082821c905092915050565b6000620006506000198460080262000630565b1980831691505092915050565b60006200066b83836200063d565b9150826002028217905092915050565b62000686826200043a565b67ffffffffffffffff811115620006a257620006a16200020e565b5b620006ae825462000474565b620006bb828285620005e0565b600060209050601f831160018114620006f35760008415620006de578287015190505b620006ea85826200065d565b8655506200075a565b601f1984166200070386620004a9565b60005b828110156200072d5784890151825560018201915060208501945060208101905062000706565b868310156200074d578489015162000749601f8916826200063d565b8355505b6001600288020188555050505b505050505050565b61055280620007726000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635d1ca6311461005c578063715018a61461007a5780637802dff5146100845780638da5cb5b146100a2578063f2fde38b146100c0575b600080fd5b6100646100dc565b6040516100719190610335565b60405180910390f35b6100826100e6565b005b61008c6100fa565b60405161009991906103e0565b60405180910390f35b6100aa61018c565b6040516100b79190610443565b60405180910390f35b6100da60048036038101906100d5919061048f565b6101b5565b005b6000600154905090565b6100ee6101c9565b6100f86000610250565b565b606060028054610109906104eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906104eb565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bd6101c9565b6101c6816101b5565b50565b6101d1610314565b73ffffffffffffffffffffffffffffffffffffffff166101ef61018c565b73ffffffffffffffffffffffffffffffffffffffff161461024e57610212610314565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102459190610443565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61032f8161031c565b82525050565b600060208201905061034a6000830184610326565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561038a57808201518184015260208101905061036f565b60008484015250505050565b6000601f19601f8301169050919050565b60006103b282610350565b6103bc818561035b565b93506103cc81856020860161036c565b6103d581610396565b840191505092915050565b600060208201905081810360008301526103fa81846103a7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042d82610402565b9050919050565b61043d81610422565b82525050565b60006020820190506104586000830184610434565b92915050565b600080fd5b61046c81610422565b811461047757600080fd5b50565b60008135905061048981610463565b92915050565b6000602082840312156104a5576104a461045e565b5b60006104b38482850161047a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050357607f821691505b602082108103610516576105156104bc565b5b5091905056fea2646970667358221220c9055a330222893d1592b6ba51a425feae93b76700fc1cf31e7c593035fd370d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"77:547:12:-:0;;;185:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;239:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;266:3:12::1;261:2;:8;;;;289;279:7;:18;;;;;;:::i;:::-;;185:119:::0;;77:547;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:246::-;2051:1;2061:113;2075:6;2072:1;2069:13;2061:113;;;2160:1;2155:3;2151:11;2145:18;2141:1;2136:3;2132:11;2125:39;2097:2;2094:1;2090:10;2085:15;;2061:113;;;2208:1;2199:6;2194:3;2190:16;2183:27;2032:184;1970:246;;;:::o;2222:434::-;2311:5;2336:66;2352:49;2394:6;2352:49;:::i;:::-;2336:66;:::i;:::-;2327:75;;2425:6;2418:5;2411:21;2463:4;2456:5;2452:16;2501:3;2492:6;2487:3;2483:16;2480:25;2477:112;;;2508:79;;:::i;:::-;2477:112;2598:52;2643:6;2638:3;2633;2598:52;:::i;:::-;2317:339;2222:434;;;;;:::o;2676:355::-;2743:5;2792:3;2785:4;2777:6;2773:17;2769:27;2759:122;;2800:79;;:::i;:::-;2759:122;2910:6;2904:13;2935:90;3021:3;3013:6;3006:4;2998:6;2994:17;2935:90;:::i;:::-;2926:99;;2749:282;2676:355;;;;:::o;3037:680::-;3126:6;3134;3183:2;3171:9;3162:7;3158:23;3154:32;3151:119;;;3189:79;;:::i;:::-;3151:119;3309:1;3334:64;3390:7;3381:6;3370:9;3366:22;3334:64;:::i;:::-;3324:74;;3280:128;3468:2;3457:9;3453:18;3447:25;3499:18;3491:6;3488:30;3485:117;;;3521:79;;:::i;:::-;3485:117;3626:74;3692:7;3683:6;3672:9;3668:22;3626:74;:::i;:::-;3616:84;;3418:292;3037:680;;;;;:::o;3723:126::-;3760:7;3800:42;3793:5;3789:54;3778:65;;3723:126;;;:::o;3855:96::-;3892:7;3921:24;3939:5;3921:24;:::i;:::-;3910:35;;3855:96;;;:::o;3957:118::-;4044:24;4062:5;4044:24;:::i;:::-;4039:3;4032:37;3957:118;;:::o;4081:222::-;4174:4;4212:2;4201:9;4197:18;4189:26;;4225:71;4293:1;4282:9;4278:17;4269:6;4225:71;:::i;:::-;4081:222;;;;:::o;4309:99::-;4361:6;4395:5;4389:12;4379:22;;4309:99;;;:::o;4414:180::-;4462:77;4459:1;4452:88;4559:4;4556:1;4549:15;4583:4;4580:1;4573:15;4600:320;4644:6;4681:1;4675:4;4671:12;4661:22;;4728:1;4722:4;4718:12;4749:18;4739:81;;4805:4;4797:6;4793:17;4783:27;;4739:81;4867:2;4859:6;4856:14;4836:18;4833:38;4830:84;;4886:18;;:::i;:::-;4830:84;4651:269;4600:320;;;:::o;4926:141::-;4975:4;4998:3;4990:11;;5021:3;5018:1;5011:14;5055:4;5052:1;5042:18;5034:26;;4926:141;;;:::o;5073:93::-;5110:6;5157:2;5152;5145:5;5141:14;5137:23;5127:33;;5073:93;;;:::o;5172:107::-;5216:8;5266:5;5260:4;5256:16;5235:37;;5172:107;;;;:::o;5285:393::-;5354:6;5404:1;5392:10;5388:18;5427:97;5457:66;5446:9;5427:97;:::i;:::-;5545:39;5575:8;5564:9;5545:39;:::i;:::-;5533:51;;5617:4;5613:9;5606:5;5602:21;5593:30;;5666:4;5656:8;5652:19;5645:5;5642:30;5632:40;;5361:317;;5285:393;;;;;:::o;5684:60::-;5712:3;5733:5;5726:12;;5684:60;;;:::o;5750:142::-;5800:9;5833:53;5851:34;5860:24;5878:5;5860:24;:::i;:::-;5851:34;:::i;:::-;5833:53;:::i;:::-;5820:66;;5750:142;;;:::o;5898:75::-;5941:3;5962:5;5955:12;;5898:75;;;:::o;5979:269::-;6089:39;6120:7;6089:39;:::i;:::-;6150:91;6199:41;6223:16;6199:41;:::i;:::-;6191:6;6184:4;6178:11;6150:91;:::i;:::-;6144:4;6137:105;6055:193;5979:269;;;:::o;6254:73::-;6299:3;6254:73;:::o;6333:189::-;6410:32;;:::i;:::-;6451:65;6509:6;6501;6495:4;6451:65;:::i;:::-;6386:136;6333:189;;:::o;6528:186::-;6588:120;6605:3;6598:5;6595:14;6588:120;;;6659:39;6696:1;6689:5;6659:39;:::i;:::-;6632:1;6625:5;6621:13;6612:22;;6588:120;;;6528:186;;:::o;6720:543::-;6821:2;6816:3;6813:11;6810:446;;;6855:38;6887:5;6855:38;:::i;:::-;6939:29;6957:10;6939:29;:::i;:::-;6929:8;6925:44;7122:2;7110:10;7107:18;7104:49;;;7143:8;7128:23;;7104:49;7166:80;7222:22;7240:3;7222:22;:::i;:::-;7212:8;7208:37;7195:11;7166:80;:::i;:::-;6825:431;;6810:446;6720:543;;;:::o;7269:117::-;7323:8;7373:5;7367:4;7363:16;7342:37;;7269:117;;;;:::o;7392:169::-;7436:6;7469:51;7517:1;7513:6;7505:5;7502:1;7498:13;7469:51;:::i;:::-;7465:56;7550:4;7544;7540:15;7530:25;;7443:118;7392:169;;;;:::o;7566:295::-;7642:4;7788:29;7813:3;7807:4;7788:29;:::i;:::-;7780:37;;7850:3;7847:1;7843:11;7837:4;7834:21;7826:29;;7566:295;;;;:::o;7866:1395::-;7983:37;8016:3;7983:37;:::i;:::-;8085:18;8077:6;8074:30;8071:56;;;8107:18;;:::i;:::-;8071:56;8151:38;8183:4;8177:11;8151:38;:::i;:::-;8236:67;8296:6;8288;8282:4;8236:67;:::i;:::-;8330:1;8354:4;8341:17;;8386:2;8378:6;8375:14;8403:1;8398:618;;;;9060:1;9077:6;9074:77;;;9126:9;9121:3;9117:19;9111:26;9102:35;;9074:77;9177:67;9237:6;9230:5;9177:67;:::i;:::-;9171:4;9164:81;9033:222;8368:887;;8398:618;8450:4;8446:9;8438:6;8434:22;8484:37;8516:4;8484:37;:::i;:::-;8543:1;8557:208;8571:7;8568:1;8565:14;8557:208;;;8650:9;8645:3;8641:19;8635:26;8627:6;8620:42;8701:1;8693:6;8689:14;8679:24;;8748:2;8737:9;8733:18;8720:31;;8594:4;8591:1;8587:12;8582:17;;8557:208;;;8793:6;8784:7;8781:19;8778:179;;;8851:9;8846:3;8842:19;8836:26;8894:48;8936:4;8928:6;8924:17;8913:9;8894:48;:::i;:::-;8886:6;8879:64;8801:156;8778:179;9003:1;8999;8991:6;8987:14;8983:22;8977:4;8970:36;8405:611;;;8368:887;;7958:1303;;;7866:1395;;:::o;77:547:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":457,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1468":{"entryPoint":788,"id":1468,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":592,"id":146,"parameterSlots":1,"returnSlots":0},"@getId_2965":{"entryPoint":220,"id":2965,"parameterSlots":0,"returnSlots":1},"@getImgLink_2973":{"entryPoint":250,"id":2973,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":396,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":230,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_2986":{"entryPoint":437,"id":2986,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":806,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":821,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":848,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":859,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1058,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1026,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":796,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":876,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1259,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":1212,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1118,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":918,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1123,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3814:16","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:16","statements":[{"nodeType":"YulAssignment","src":"62:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:16","type":""}],"src":"7:77:16"},{"body":{"nodeType":"YulBlock","src":"155:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:16"},"nodeType":"YulFunctionCall","src":"177:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:16"},"nodeType":"YulFunctionCall","src":"165:37:16"},"nodeType":"YulExpressionStatement","src":"165:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:16","type":""}],"src":"90:118:16"},{"body":{"nodeType":"YulBlock","src":"312:124:16","statements":[{"nodeType":"YulAssignment","src":"322:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:16"},"nodeType":"YulFunctionCall","src":"411:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:16"},"nodeType":"YulFunctionCall","src":"358:71:16"},"nodeType":"YulExpressionStatement","src":"358:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:16","type":""}],"src":"214:222:16"},{"body":{"nodeType":"YulBlock","src":"501:40:16","statements":[{"nodeType":"YulAssignment","src":"512:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:16"},"nodeType":"YulFunctionCall","src":"522:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"512:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"494:6:16","type":""}],"src":"442:99:16"},{"body":{"nodeType":"YulBlock","src":"643:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"660:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"665:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:16"},"nodeType":"YulFunctionCall","src":"653:19:16"},"nodeType":"YulExpressionStatement","src":"653:19:16"},{"nodeType":"YulAssignment","src":"681:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"700:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:16"},"nodeType":"YulFunctionCall","src":"696:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"681:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"615:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"620:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"631:11:16","type":""}],"src":"547:169:16"},{"body":{"nodeType":"YulBlock","src":"784:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"794:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"803:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"798:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"863:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"888:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:16"},"nodeType":"YulFunctionCall","src":"884:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"907:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"912:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"903:3:16"},"nodeType":"YulFunctionCall","src":"903:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"897:5:16"},"nodeType":"YulFunctionCall","src":"897:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"877:6:16"},"nodeType":"YulFunctionCall","src":"877:39:16"},"nodeType":"YulExpressionStatement","src":"877:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"824:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"827:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"821:2:16"},"nodeType":"YulFunctionCall","src":"821:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"835:19:16","statements":[{"nodeType":"YulAssignment","src":"837:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"846:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"849:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"842:3:16"},"nodeType":"YulFunctionCall","src":"842:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"837:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"817:3:16","statements":[]},"src":"813:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"946:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"951:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:16"},"nodeType":"YulFunctionCall","src":"942:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"960:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"935:6:16"},"nodeType":"YulFunctionCall","src":"935:27:16"},"nodeType":"YulExpressionStatement","src":"935:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"766:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"771:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"776:6:16","type":""}],"src":"722:246:16"},{"body":{"nodeType":"YulBlock","src":"1022:54:16","statements":[{"nodeType":"YulAssignment","src":"1032:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1057:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:16"},"nodeType":"YulFunctionCall","src":"1046:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1066:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1062:3:16"},"nodeType":"YulFunctionCall","src":"1062:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1042:3:16"},"nodeType":"YulFunctionCall","src":"1042:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1032:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1005:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1015:6:16","type":""}],"src":"974:102:16"},{"body":{"nodeType":"YulBlock","src":"1174:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1231:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1198:32:16"},"nodeType":"YulFunctionCall","src":"1198:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1188:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1246:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1312:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1317:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1253:58:16"},"nodeType":"YulFunctionCall","src":"1253:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1246:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1372:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1379:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:16"},"nodeType":"YulFunctionCall","src":"1368:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"1386:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1391:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1333:34:16"},"nodeType":"YulFunctionCall","src":"1333:65:16"},"nodeType":"YulExpressionStatement","src":"1333:65:16"},{"nodeType":"YulAssignment","src":"1407:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1418:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1445:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1423:21:16"},"nodeType":"YulFunctionCall","src":"1423:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1414:3:16"},"nodeType":"YulFunctionCall","src":"1414:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1407:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1155:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1162:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1170:3:16","type":""}],"src":"1082:377:16"},{"body":{"nodeType":"YulBlock","src":"1583:195:16","statements":[{"nodeType":"YulAssignment","src":"1593:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1616:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1601:3:16"},"nodeType":"YulFunctionCall","src":"1601:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1593:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1640:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1651:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:16"},"nodeType":"YulFunctionCall","src":"1636:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1659:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1655:3:16"},"nodeType":"YulFunctionCall","src":"1655:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1629:6:16"},"nodeType":"YulFunctionCall","src":"1629:47:16"},"nodeType":"YulExpressionStatement","src":"1629:47:16"},{"nodeType":"YulAssignment","src":"1685:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1757:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"1766:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1693:63:16"},"nodeType":"YulFunctionCall","src":"1693:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1555:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1567:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1578:4:16","type":""}],"src":"1465:313:16"},{"body":{"nodeType":"YulBlock","src":"1829:81:16","statements":[{"nodeType":"YulAssignment","src":"1839:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1854:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1861:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1850:3:16"},"nodeType":"YulFunctionCall","src":"1850:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1839:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1811:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1821:7:16","type":""}],"src":"1784:126:16"},{"body":{"nodeType":"YulBlock","src":"1961:51:16","statements":[{"nodeType":"YulAssignment","src":"1971:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2000:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1982:17:16"},"nodeType":"YulFunctionCall","src":"1982:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1971:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1943:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1953:7:16","type":""}],"src":"1916:96:16"},{"body":{"nodeType":"YulBlock","src":"2083:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2100:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2123:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2105:17:16"},"nodeType":"YulFunctionCall","src":"2105:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2093:6:16"},"nodeType":"YulFunctionCall","src":"2093:37:16"},"nodeType":"YulExpressionStatement","src":"2093:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2071:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2078:3:16","type":""}],"src":"2018:118:16"},{"body":{"nodeType":"YulBlock","src":"2240:124:16","statements":[{"nodeType":"YulAssignment","src":"2250:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2262:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2273:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2258:3:16"},"nodeType":"YulFunctionCall","src":"2258:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2250:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2330:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2354:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:16"},"nodeType":"YulFunctionCall","src":"2339:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2286:43:16"},"nodeType":"YulFunctionCall","src":"2286:71:16"},"nodeType":"YulExpressionStatement","src":"2286:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2212:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2224:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2235:4:16","type":""}],"src":"2142:222:16"},{"body":{"nodeType":"YulBlock","src":"2410:35:16","statements":[{"nodeType":"YulAssignment","src":"2420:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2436:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2430:5:16"},"nodeType":"YulFunctionCall","src":"2430:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2420:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:16","type":""}],"src":"2370:75:16"},{"body":{"nodeType":"YulBlock","src":"2540:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2557:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2550:6:16"},"nodeType":"YulFunctionCall","src":"2550:12:16"},"nodeType":"YulExpressionStatement","src":"2550:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2451:117:16"},{"body":{"nodeType":"YulBlock","src":"2663:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2680:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2683:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2673:6:16"},"nodeType":"YulFunctionCall","src":"2673:12:16"},"nodeType":"YulExpressionStatement","src":"2673:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2574:117:16"},{"body":{"nodeType":"YulBlock","src":"2740:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2797:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2809:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2799:6:16"},"nodeType":"YulFunctionCall","src":"2799:12:16"},"nodeType":"YulExpressionStatement","src":"2799:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2763:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2788:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2770:17:16"},"nodeType":"YulFunctionCall","src":"2770:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2760:2:16"},"nodeType":"YulFunctionCall","src":"2760:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2753:6:16"},"nodeType":"YulFunctionCall","src":"2753:43:16"},"nodeType":"YulIf","src":"2750:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2733:5:16","type":""}],"src":"2697:122:16"},{"body":{"nodeType":"YulBlock","src":"2877:87:16","statements":[{"nodeType":"YulAssignment","src":"2887:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2909:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2896:12:16"},"nodeType":"YulFunctionCall","src":"2896:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2887:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2952:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2925:26:16"},"nodeType":"YulFunctionCall","src":"2925:33:16"},"nodeType":"YulExpressionStatement","src":"2925:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2855:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2863:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2871:5:16","type":""}],"src":"2825:139:16"},{"body":{"nodeType":"YulBlock","src":"3036:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3082:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3084:77:16"},"nodeType":"YulFunctionCall","src":"3084:79:16"},"nodeType":"YulExpressionStatement","src":"3084:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3057:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3066:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3053:3:16"},"nodeType":"YulFunctionCall","src":"3053:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3078:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3049:3:16"},"nodeType":"YulFunctionCall","src":"3049:32:16"},"nodeType":"YulIf","src":"3046:119:16"},{"nodeType":"YulBlock","src":"3175:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3190:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3204:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3194:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3219:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3265:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:16"},"nodeType":"YulFunctionCall","src":"3250:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3274:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3229:20:16"},"nodeType":"YulFunctionCall","src":"3229:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3219:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3006:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3017:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3029:6:16","type":""}],"src":"2970:329:16"},{"body":{"nodeType":"YulBlock","src":"3333:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3350:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3353:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3343:6:16"},"nodeType":"YulFunctionCall","src":"3343:88:16"},"nodeType":"YulExpressionStatement","src":"3343:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3447:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3450:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3440:6:16"},"nodeType":"YulFunctionCall","src":"3440:15:16"},"nodeType":"YulExpressionStatement","src":"3440:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3471:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3474:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3464:6:16"},"nodeType":"YulFunctionCall","src":"3464:15:16"},"nodeType":"YulExpressionStatement","src":"3464:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3305:180:16"},{"body":{"nodeType":"YulBlock","src":"3542:269:16","statements":[{"nodeType":"YulAssignment","src":"3552:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3566:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3572:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3562:3:16"},"nodeType":"YulFunctionCall","src":"3562:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3552:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3583:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3613:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3619:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3609:3:16"},"nodeType":"YulFunctionCall","src":"3609:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3587:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3660:51:16","statements":[{"nodeType":"YulAssignment","src":"3674:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3688:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3696:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3684:3:16"},"nodeType":"YulFunctionCall","src":"3684:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3674:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3640:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3633:6:16"},"nodeType":"YulFunctionCall","src":"3633:26:16"},"nodeType":"YulIf","src":"3630:81:16"},{"body":{"nodeType":"YulBlock","src":"3763:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3777:16:16"},"nodeType":"YulFunctionCall","src":"3777:18:16"},"nodeType":"YulExpressionStatement","src":"3777:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3727:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3750:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3758:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3747:2:16"},"nodeType":"YulFunctionCall","src":"3747:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3724:2:16"},"nodeType":"YulFunctionCall","src":"3724:38:16"},"nodeType":"YulIf","src":"3721:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3526:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3535:6:16","type":""}],"src":"3491:320:16"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80635d1ca6311461005c578063715018a61461007a5780637802dff5146100845780638da5cb5b146100a2578063f2fde38b146100c0575b600080fd5b6100646100dc565b6040516100719190610335565b60405180910390f35b6100826100e6565b005b61008c6100fa565b60405161009991906103e0565b60405180910390f35b6100aa61018c565b6040516100b79190610443565b60405180910390f35b6100da60048036038101906100d5919061048f565b6101b5565b005b6000600154905090565b6100ee6101c9565b6100f86000610250565b565b606060028054610109906104eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906104eb565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bd6101c9565b6101c6816101b5565b50565b6101d1610314565b73ffffffffffffffffffffffffffffffffffffffff166101ef61018c565b73ffffffffffffffffffffffffffffffffffffffff161461024e57610212610314565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102459190610443565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61032f8161031c565b82525050565b600060208201905061034a6000830184610326565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561038a57808201518184015260208101905061036f565b60008484015250505050565b6000601f19601f8301169050919050565b60006103b282610350565b6103bc818561035b565b93506103cc81856020860161036c565b6103d581610396565b840191505092915050565b600060208201905081810360008301526103fa81846103a7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042d82610402565b9050919050565b61043d81610422565b82525050565b60006020820190506104586000830184610434565b92915050565b600080fd5b61046c81610422565b811461047757600080fd5b50565b60008135905061048981610463565b92915050565b6000602082840312156104a5576104a461045e565b5b60006104b38482850161047a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050357607f821691505b602082108103610516576105156104bc565b5b5091905056fea2646970667358221220c9055a330222893d1592b6ba51a425feae93b76700fc1cf31e7c593035fd370d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"77:547:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;386:89:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:141:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;310:70;348:4;371:2;;364:9;;310:70;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;386:89:12:-;429:13;461:7;454:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:89;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;481:141:12:-;1531:13:0;:11;:13::i;:::-;556:21:12::1;574:2;556:17;:21::i;:::-;481:141:::0;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;7:77:16:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1784:126::-;1821:7;1861:42;1854:5;1850:54;1839:65;;1784:126;;;:::o;1916:96::-;1953:7;1982:24;2000:5;1982:24;:::i;:::-;1971:35;;1916:96;;;:::o;2018:118::-;2105:24;2123:5;2105:24;:::i;:::-;2100:3;2093:37;2018:118;;:::o;2142:222::-;2235:4;2273:2;2262:9;2258:18;2250:26;;2286:71;2354:1;2343:9;2339:17;2330:6;2286:71;:::i;:::-;2142:222;;;;:::o;2451:117::-;2560:1;2557;2550:12;2697:122;2770:24;2788:5;2770:24;:::i;:::-;2763:5;2760:35;2750:63;;2809:1;2806;2799:12;2750:63;2697:122;:::o;2825:139::-;2871:5;2909:6;2896:20;2887:29;;2925:33;2952:5;2925:33;:::i;:::-;2825:139;;;;:::o;2970:329::-;3029:6;3078:2;3066:9;3057:7;3053:23;3049:32;3046:119;;;3084:79;;:::i;:::-;3046:119;3204:1;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;:::i;:::-;3219:63;;3175:117;2970:329;;;;:::o;3305:180::-;3353:77;3350:1;3343:88;3450:4;3447:1;3440:15;3474:4;3471:1;3464:15;3491:320;3535:6;3572:1;3566:4;3562:12;3552:22;;3619:1;3613:4;3609:12;3640:18;3630:81;;3696:4;3688:6;3684:17;3674:27;;3630:81;3758:2;3750:6;3747:14;3727:18;3724:38;3721:84;;3777:18;;:::i;:::-;3721:84;3542:269;3491:320;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"272400","executionCost":"infinite","totalCost":"infinite"},"external":{"getId()":"2415","getImgLink()":"infinite","owner()":"2566","renounceOwnership()":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"getId()":"5d1ca631","getImgLink()":"7802dff5","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imgLink\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImgLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Card.sol\":\"Card\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"src/Card.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Card is Ownable {\\n    // string public name;\\n    uint private id;\\n    string private imgLink;\\n\\n    constructor(uint _id, string memory _imgLink) Ownable(msg.sender) {\\n        id = _id;\\n        imgLink = _imgLink;\\n    }\\n\\n    function getId() public view returns (uint) {\\n        return id;\\n    }\\n\\n    function getImgLink() public view returns (string memory) {\\n        return imgLink;\\n    }\\n\\n    function transferOwnership(address to) public override onlyOwner {\\n        transferOwnership(to); // TODO : v\\u00e9rifier si \\u00e7a fonctionne\\n    }\\n}\",\"keccak256\":\"0xb150de000f85ce66be92e5b34cec2986a9546d33857f1d593bd202370fc47b6f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"src/Card.sol:Card","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2935,"contract":"src/Card.sol:Card","label":"id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2937,"contract":"src/Card.sol:Card","label":"imgLink","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/CardOwnership.sol":{"CardOwnership":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"cardNumber","type":"uint256"}],"name":"addACard","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"cardCollections","outputs":[{"internalType":"contract GameCollection","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collectionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCollectionNbForCard","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"collectionNumber","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"collectionNumber","type":"uint256"}],"name":"mintSomeCards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3016":{"entryPoint":null,"id":3016,"parameterSlots":0,"returnSlots":0},"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":306,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":554,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":571,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":758,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":600,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1079,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":534,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":502,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":894,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1040,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":779,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":705,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1204,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1172,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":658,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":611,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":954,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":795,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1159,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":808,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":964,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1007,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:16","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:16","statements":[{"nodeType":"YulAssignment","src":"62:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:16"},"nodeType":"YulFunctionCall","src":"73:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:16","type":""}],"src":"7:126:16"},{"body":{"nodeType":"YulBlock","src":"184:51:16","statements":[{"nodeType":"YulAssignment","src":"194:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:16"},"nodeType":"YulFunctionCall","src":"205:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:16","type":""}],"src":"139:96:16"},{"body":{"nodeType":"YulBlock","src":"306:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:16"},"nodeType":"YulFunctionCall","src":"328:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:16"},"nodeType":"YulFunctionCall","src":"316:37:16"},"nodeType":"YulExpressionStatement","src":"316:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:16","type":""}],"src":"241:118:16"},{"body":{"nodeType":"YulBlock","src":"463:124:16","statements":[{"nodeType":"YulAssignment","src":"473:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:16"},"nodeType":"YulFunctionCall","src":"481:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:16"},"nodeType":"YulFunctionCall","src":"562:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:16"},"nodeType":"YulFunctionCall","src":"509:71:16"},"nodeType":"YulExpressionStatement","src":"509:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:16","type":""}],"src":"365:222:16"},{"body":{"nodeType":"YulBlock","src":"652:40:16","statements":[{"nodeType":"YulAssignment","src":"663:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"679:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"673:5:16"},"nodeType":"YulFunctionCall","src":"673:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"663:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"635:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"645:6:16","type":""}],"src":"593:99:16"},{"body":{"nodeType":"YulBlock","src":"726:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"743:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"746:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"736:6:16"},"nodeType":"YulFunctionCall","src":"736:88:16"},"nodeType":"YulExpressionStatement","src":"736:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"840:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"833:6:16"},"nodeType":"YulFunctionCall","src":"833:15:16"},"nodeType":"YulExpressionStatement","src":"833:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"864:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"867:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"857:6:16"},"nodeType":"YulFunctionCall","src":"857:15:16"},"nodeType":"YulExpressionStatement","src":"857:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"698:180:16"},{"body":{"nodeType":"YulBlock","src":"912:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"929:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"932:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"922:6:16"},"nodeType":"YulFunctionCall","src":"922:88:16"},"nodeType":"YulExpressionStatement","src":"922:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1029:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1019:6:16"},"nodeType":"YulFunctionCall","src":"1019:15:16"},"nodeType":"YulExpressionStatement","src":"1019:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1043:6:16"},"nodeType":"YulFunctionCall","src":"1043:15:16"},"nodeType":"YulExpressionStatement","src":"1043:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"884:180:16"},{"body":{"nodeType":"YulBlock","src":"1121:269:16","statements":[{"nodeType":"YulAssignment","src":"1131:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1145:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1141:3:16"},"nodeType":"YulFunctionCall","src":"1141:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1131:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1162:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1192:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1188:3:16"},"nodeType":"YulFunctionCall","src":"1188:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1166:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1239:51:16","statements":[{"nodeType":"YulAssignment","src":"1253:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1267:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1275:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1263:3:16"},"nodeType":"YulFunctionCall","src":"1263:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1253:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1219:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1212:6:16"},"nodeType":"YulFunctionCall","src":"1212:26:16"},"nodeType":"YulIf","src":"1209:81:16"},{"body":{"nodeType":"YulBlock","src":"1342:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1356:16:16"},"nodeType":"YulFunctionCall","src":"1356:18:16"},"nodeType":"YulExpressionStatement","src":"1356:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1306:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1329:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1326:2:16"},"nodeType":"YulFunctionCall","src":"1326:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1303:2:16"},"nodeType":"YulFunctionCall","src":"1303:38:16"},"nodeType":"YulIf","src":"1300:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1105:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1114:6:16","type":""}],"src":"1070:320:16"},{"body":{"nodeType":"YulBlock","src":"1450:87:16","statements":[{"nodeType":"YulAssignment","src":"1460:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1468:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1460:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1488:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1491:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:16"},"nodeType":"YulFunctionCall","src":"1481:14:16"},"nodeType":"YulExpressionStatement","src":"1481:14:16"},{"nodeType":"YulAssignment","src":"1504:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1512:9:16"},"nodeType":"YulFunctionCall","src":"1512:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1504:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1437:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1445:4:16","type":""}],"src":"1396:141:16"},{"body":{"nodeType":"YulBlock","src":"1587:49:16","statements":[{"nodeType":"YulAssignment","src":"1597:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1615:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1622:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:16"},"nodeType":"YulFunctionCall","src":"1611:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1607:3:16"},"nodeType":"YulFunctionCall","src":"1607:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1597:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1580:6:16","type":""}],"src":"1543:93:16"},{"body":{"nodeType":"YulBlock","src":"1695:54:16","statements":[{"nodeType":"YulAssignment","src":"1705:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1730:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"1736:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1726:3:16"},"nodeType":"YulFunctionCall","src":"1726:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1705:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1670:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"1676:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1686:8:16","type":""}],"src":"1642:107:16"},{"body":{"nodeType":"YulBlock","src":"1831:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1841:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1862:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1874:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1858:3:16"},"nodeType":"YulFunctionCall","src":"1858:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1845:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1885:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1916:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1927:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1897:18:16"},"nodeType":"YulFunctionCall","src":"1897:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1889:4:16","type":""}]},{"nodeType":"YulAssignment","src":"2003:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2034:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2045:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2015:18:16"},"nodeType":"YulFunctionCall","src":"2015:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2003:8:16"}]},{"nodeType":"YulAssignment","src":"2063:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2087:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2083:3:16"},"nodeType":"YulFunctionCall","src":"2083:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:16"},"nodeType":"YulFunctionCall","src":"2072:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2063:5:16"}]},{"nodeType":"YulAssignment","src":"2102:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2115:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2126:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"2136:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2112:2:16"},"nodeType":"YulFunctionCall","src":"2112:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2102:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1792:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1799:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1811:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1824:6:16","type":""}],"src":"1755:393:16"},{"body":{"nodeType":"YulBlock","src":"2199:32:16","statements":[{"nodeType":"YulAssignment","src":"2209:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2220:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2209:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2191:7:16","type":""}],"src":"2154:77:16"},{"body":{"nodeType":"YulBlock","src":"2269:28:16","statements":[{"nodeType":"YulAssignment","src":"2279:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2286:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2279:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2255:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2265:3:16","type":""}],"src":"2237:60:16"},{"body":{"nodeType":"YulBlock","src":"2363:82:16","statements":[{"nodeType":"YulAssignment","src":"2373:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2413:17:16"},"nodeType":"YulFunctionCall","src":"2413:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2404:8:16"},"nodeType":"YulFunctionCall","src":"2404:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2386:17:16"},"nodeType":"YulFunctionCall","src":"2386:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2373:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2343:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2353:9:16","type":""}],"src":"2303:142:16"},{"body":{"nodeType":"YulBlock","src":"2498:28:16","statements":[{"nodeType":"YulAssignment","src":"2508:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2515:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2508:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2494:3:16","type":""}],"src":"2451:75:16"},{"body":{"nodeType":"YulBlock","src":"2608:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2618:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2673:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2642:30:16"},"nodeType":"YulFunctionCall","src":"2642:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2622:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2697:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2737:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2731:5:16"},"nodeType":"YulFunctionCall","src":"2731:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2776:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2752:23:16"},"nodeType":"YulFunctionCall","src":"2752:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2703:27:16"},"nodeType":"YulFunctionCall","src":"2703:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2690:6:16"},"nodeType":"YulFunctionCall","src":"2690:105:16"},"nodeType":"YulExpressionStatement","src":"2690:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2585:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2591:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2599:7:16","type":""}],"src":"2532:269:16"},{"body":{"nodeType":"YulBlock","src":"2856:24:16","statements":[{"nodeType":"YulAssignment","src":"2866:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2873:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2866:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2852:3:16","type":""}],"src":"2807:73:16"},{"body":{"nodeType":"YulBlock","src":"2939:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2949:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2963:30:16"},"nodeType":"YulFunctionCall","src":"2963:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2953:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3048:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3054:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3062:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3004:43:16"},"nodeType":"YulFunctionCall","src":"3004:65:16"},"nodeType":"YulExpressionStatement","src":"3004:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2925:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2931:6:16","type":""}],"src":"2886:189:16"},{"body":{"nodeType":"YulBlock","src":"3131:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"3198:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3242:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3212:29:16"},"nodeType":"YulFunctionCall","src":"3212:39:16"},"nodeType":"YulExpressionStatement","src":"3212:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3151:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"3158:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3148:2:16"},"nodeType":"YulFunctionCall","src":"3148:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3163:26:16","statements":[{"nodeType":"YulAssignment","src":"3165:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3178:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3185:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:16"},"nodeType":"YulFunctionCall","src":"3174:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3165:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3145:2:16","statements":[]},"src":"3141:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3119:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3126:3:16","type":""}],"src":"3081:186:16"},{"body":{"nodeType":"YulBlock","src":"3352:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"3378:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3392:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3440:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3408:31:16"},"nodeType":"YulFunctionCall","src":"3408:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3396:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3459:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3482:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3510:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3492:17:16"},"nodeType":"YulFunctionCall","src":"3492:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:16"},"nodeType":"YulFunctionCall","src":"3478:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3463:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3679:27:16","statements":[{"nodeType":"YulAssignment","src":"3681:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3696:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3681:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3663:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3660:2:16"},"nodeType":"YulFunctionCall","src":"3660:18:16"},"nodeType":"YulIf","src":"3657:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3748:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3765:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3793:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3775:17:16"},"nodeType":"YulFunctionCall","src":"3775:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:16"},"nodeType":"YulFunctionCall","src":"3761:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3719:28:16"},"nodeType":"YulFunctionCall","src":"3719:80:16"},"nodeType":"YulExpressionStatement","src":"3719:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3369:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3366:2:16"},"nodeType":"YulFunctionCall","src":"3366:11:16"},"nodeType":"YulIf","src":"3363:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3328:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"3335:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3340:10:16","type":""}],"src":"3273:543:16"},{"body":{"nodeType":"YulBlock","src":"3885:54:16","statements":[{"nodeType":"YulAssignment","src":"3895:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3920:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"3926:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3916:3:16"},"nodeType":"YulFunctionCall","src":"3916:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3895:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3860:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"3866:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3876:8:16","type":""}],"src":"3822:117:16"},{"body":{"nodeType":"YulBlock","src":"3996:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4006:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4058:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4051:3:16"},"nodeType":"YulFunctionCall","src":"4051:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4066:3:16"},"nodeType":"YulFunctionCall","src":"4066:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4022:28:16"},"nodeType":"YulFunctionCall","src":"4022:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4018:3:16"},"nodeType":"YulFunctionCall","src":"4018:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4010:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4083:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4097:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4103:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4093:3:16"},"nodeType":"YulFunctionCall","src":"4093:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4083:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3973:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3979:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3989:6:16","type":""}],"src":"3945:169:16"},{"body":{"nodeType":"YulBlock","src":"4200:214:16","statements":[{"nodeType":"YulAssignment","src":"4333:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4360:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"4366:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4341:18:16"},"nodeType":"YulFunctionCall","src":"4341:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4333:4:16"}]},{"nodeType":"YulAssignment","src":"4379:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4390:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4400:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4403:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4396:3:16"},"nodeType":"YulFunctionCall","src":"4396:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4387:2:16"},"nodeType":"YulFunctionCall","src":"4387:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4379:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4181:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"4187:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4195:4:16","type":""}],"src":"4119:295:16"},{"body":{"nodeType":"YulBlock","src":"4511:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4522:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4569:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4536:32:16"},"nodeType":"YulFunctionCall","src":"4536:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4526:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4658:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4660:16:16"},"nodeType":"YulFunctionCall","src":"4660:18:16"},"nodeType":"YulExpressionStatement","src":"4660:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4630:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4638:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4627:2:16"},"nodeType":"YulFunctionCall","src":"4627:30:16"},"nodeType":"YulIf","src":"4624:56:16"},{"nodeType":"YulVariableDeclaration","src":"4690:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4736:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4730:5:16"},"nodeType":"YulFunctionCall","src":"4730:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4704:25:16"},"nodeType":"YulFunctionCall","src":"4704:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4694:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4835:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4841:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4849:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4789:45:16"},"nodeType":"YulFunctionCall","src":"4789:67:16"},"nodeType":"YulExpressionStatement","src":"4789:67:16"},{"nodeType":"YulVariableDeclaration","src":"4866:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4883:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4870:9:16","type":""}]},{"nodeType":"YulAssignment","src":"4894:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4907:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4894:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4958:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4991:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5003:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4999:3:16"},"nodeType":"YulFunctionCall","src":"4999:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:16"},"nodeType":"YulFunctionCall","src":"4987:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4976:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5023:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5069:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5037:31:16"},"nodeType":"YulFunctionCall","src":"5037:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5027:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5087:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5096:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5091:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5155:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5180:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5198:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5203:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:16"},"nodeType":"YulFunctionCall","src":"5194:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5188:5:16"},"nodeType":"YulFunctionCall","src":"5188:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5173:6:16"},"nodeType":"YulFunctionCall","src":"5173:42:16"},"nodeType":"YulExpressionStatement","src":"5173:42:16"},{"nodeType":"YulAssignment","src":"5232:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5246:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5254:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5242:3:16"},"nodeType":"YulFunctionCall","src":"5242:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5232:6:16"}]},{"nodeType":"YulAssignment","src":"5273:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5290:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:16"},"nodeType":"YulFunctionCall","src":"5286:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5273:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5121:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5124:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5118:2:16"},"nodeType":"YulFunctionCall","src":"5118:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5133:21:16","statements":[{"nodeType":"YulAssignment","src":"5135:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5144:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5147:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:16"},"nodeType":"YulFunctionCall","src":"5140:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5135:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5114:3:16","statements":[]},"src":"5110:208:16"},{"body":{"nodeType":"YulBlock","src":"5354:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5372:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5399:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5404:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:16"},"nodeType":"YulFunctionCall","src":"5395:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5389:5:16"},"nodeType":"YulFunctionCall","src":"5389:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5376:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5439:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5466:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5481:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5489:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5477:3:16"},"nodeType":"YulFunctionCall","src":"5477:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5447:18:16"},"nodeType":"YulFunctionCall","src":"5447:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5432:6:16"},"nodeType":"YulFunctionCall","src":"5432:64:16"},"nodeType":"YulExpressionStatement","src":"5432:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5337:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5346:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5334:2:16"},"nodeType":"YulFunctionCall","src":"5334:19:16"},"nodeType":"YulIf","src":"5331:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5530:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5544:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5552:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5540:3:16"},"nodeType":"YulFunctionCall","src":"5540:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:16"},"nodeType":"YulFunctionCall","src":"5536:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5523:6:16"},"nodeType":"YulFunctionCall","src":"5523:36:16"},"nodeType":"YulExpressionStatement","src":"5523:36:16"}]},"nodeType":"YulCase","src":"4951:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4956:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5586:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5613:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5604:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5637:67:16","statements":[{"nodeType":"YulAssignment","src":"5655:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5674:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5679:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:16"},"nodeType":"YulFunctionCall","src":"5670:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5664:5:16"},"nodeType":"YulFunctionCall","src":"5664:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5655:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5630:6:16"},"nodeType":"YulIf","src":"5627:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5724:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5783:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5790:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5730:52:16"},"nodeType":"YulFunctionCall","src":"5730:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5717:6:16"},"nodeType":"YulFunctionCall","src":"5717:81:16"},"nodeType":"YulExpressionStatement","src":"5717:81:16"}]},"nodeType":"YulCase","src":"5578:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4931:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4939:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4928:2:16"},"nodeType":"YulFunctionCall","src":"4928:14:16"},"nodeType":"YulSwitch","src":"4921:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4500:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"4506:3:16","type":""}],"src":"4419:1395:16"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600481526020017f43617264000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f434152440000000000000000000000000000000000000000000000000000000081525033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000f45760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000eb91906200023b565b60405180910390fd5b62000105816200013260201b60201c565b508160019081620001179190620004d2565b508060029081620001299190620004d2565b505050620005b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022382620001f6565b9050919050565b620002358162000216565b82525050565b60006020820190506200025260008301846200022a565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002da57607f821691505b602082108103620002f057620002ef62000292565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200031b565b6200036686836200031b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b3620003ad620003a7846200037e565b62000388565b6200037e565b9050919050565b6000819050919050565b620003cf8362000392565b620003e7620003de82620003ba565b84845462000328565b825550505050565b600090565b620003fe620003ef565b6200040b818484620003c4565b505050565b5b81811015620004335762000427600082620003f4565b60018101905062000411565b5050565b601f82111562000482576200044c81620002f6565b62000457846200030b565b8101602085101562000467578190505b6200047f62000476856200030b565b83018262000410565b50505b505050565b600082821c905092915050565b6000620004a76000198460080262000487565b1980831691505092915050565b6000620004c2838362000494565b9150826002028217905092915050565b620004dd8262000258565b67ffffffffffffffff811115620004f957620004f862000263565b5b620005058254620002c1565b6200051282828562000437565b600060209050601f8311600181146200054a576000841562000535578287015190505b620005418582620004b4565b865550620005b1565b601f1984166200055a86620002f6565b60005b8281101562000584578489015182556001820191506020850194506020810190506200055d565b86831015620005a45784890151620005a0601f89168262000494565b8355505b6001600288020188555050505b505050505050565b61545980620005c96000396000f3fe60806040523480156200001157600080fd5b5060043610620001605760003560e01c80638da5cb5b11620000c9578063bf8741031162000087578063bf87410314620003db578063c87b56dd1462000411578063d57f966b1462000447578063e985e9c51462000469578063f2fde38b146200049f578063f7374d1114620004bf5762000160565b80638da5cb5b146200032157806395d89b411462000343578063a22cb4651462000365578063b88d4fde1462000385578063bc4f6def14620003a55762000160565b8063156e29f61162000123578063156e29f6146200024957806323b872dd146200026957806342842e0e14620002895780636352211e14620002a957806370a0823114620002df578063715018a614620003155762000160565b806301ffc9a7146200016557806306fdde03146200019b578063081812fc14620001bd578063095ea7b314620001f35780630abc4a781462000213575b600080fd5b6200018360048036038101906200017d919062001e70565b620004df565b60405162000192919062001ebf565b60405180910390f35b620001a5620005c5565b604051620001b4919062001f76565b60405180910390f35b620001db6004803603810190620001d5919062001fd5565b6200065f565b604051620001ea91906200204c565b60405180910390f35b6200021160048036038101906200020b91906200209a565b6200067f565b005b6200023160048036038101906200022b919062001fd5565b62000699565b604051620002409190620020fc565b60405180910390f35b62000267600480360381019062000261919062002119565b620007ae565b005b62000287600480360381019062000281919062002175565b6200089e565b005b620002a76004803603810190620002a1919062002175565b62000b80565b005b620002c76004803603810190620002c1919062001fd5565b62000ba2565b604051620002d691906200204c565b60405180910390f35b620002fd6004803603810190620002f79190620021d1565b62000ccd565b6040516200030c919062002214565b60405180910390f35b6200031f62000dc3565b005b6200032b62000ddb565b6040516200033a91906200204c565b60405180910390f35b6200034d62000e04565b6040516200035c919062001f76565b60405180910390f35b6200038360048036038101906200037d919062002262565b62000e9e565b005b620003a360048036038101906200039d9190620023fa565b62000eb8565b005b620003c36004803603810190620003bd919062001fd5565b62000ed9565b604051620003d29190620024f6565b60405180910390f35b620003f96004803603810190620003f3919062001fd5565b62000f0c565b6040516200040891906200204c565b60405180910390f35b6200042f600480360381019062000429919062001fd5565b6200111d565b6040516200043e919062001f76565b60405180910390f35b6200045162001190565b60405162000460919062002214565b60405180910390f35b62000487600480360381019062000481919062002513565b62001196565b60405162000496919062001ebf565b60405180910390f35b620004bd6004803603810190620004b79190620021d1565b6200122a565b005b620004dd6004803603810190620004d7919062002119565b620012b7565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480620005ab57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80620005be5750620005bd82620013a7565b5b9050919050565b606060018054620005d69062002589565b80601f0160208091040260200160405190810160405280929190818152602001828054620006049062002589565b8015620006555780601f10620006295761010080835404028352916020019162000655565b820191906000526020600020905b8154815290600101906020018083116200063757829003601f168201915b5050505050905090565b60006200066c8262001411565b5062000678826200149e565b9050919050565b6200069582826200068f620014db565b620014e3565b5050565b600080600090505b60085481121562000784576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9aa75ef846040518263ffffffff1660e01b81526004016200071a919062002214565b602060405180830381865afa15801562000738573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200075e9190620025d5565b156200076e5780915050620007a9565b80806200077b9062002636565b915050620006a1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b6008548110620007f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007ec90620026f9565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401620008659291906200271b565b600060405180830381600087803b1580156200088057600080fd5b505af115801562000895573d6000803e3d6000fd5b50505050505050565b620008a98162000ba2565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462000919576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091090620027be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200098b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009829062002856565b60405180910390fd5b6000620009988262000699565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103620009ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009f690620028ee565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312836040518263ffffffff1660e01b815260040162000a6d919062002214565b602060405180830381865afa15801562000a8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ab1919062002955565b73ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000aeb91906200204c565b600060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b50505050818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b62000b9d8383836040518060200160405280600081525062000eb8565b505050565b600080600090505b60085481101562000cc25760006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040162000c25919062002214565b602060405180830381865afa15801562000c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6991906200299e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000cab57809250505062000cc8565b50808062000cb990620029d0565b91505062000baa565b50600090505b919050565b6000806000905060005b60085481101562000db9576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040162000d5091906200204c565b602060405180830381865afa15801562000d6e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d94919062002a34565b8262000da1919062002a66565b9150808062000db090620029d0565b91505062000cd7565b5080915050919050565b62000dcd620014f7565b62000dd9600062001587565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805462000e159062002589565b80601f016020809104026020016040519081016040528092919081815260200182805462000e439062002589565b801562000e945780601f1062000e685761010080835404028352916020019162000e94565b820191906000526020600020905b81548152906001019060200180831162000e7657829003601f168201915b5050505050905090565b62000eb462000eac620014db565b83836200164b565b5050565b62000ec58484846200089e565b62000ed384848484620017bf565b50505050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060405162000f1f9062001df1565b62000f2b919062002b34565b604051809103906000f08015801562000f48573d6000803e3d6000fd5b5090508060076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600081548092919062000fb490620029d0565b91905055506007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa93d702846040518263ffffffff1660e01b815260040162001027919062002bdc565b600060405180830381600087803b1580156200104257600080fd5b505af115801562001057573d6000803e3d6000fd5b5050505060006007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312856040518263ffffffff1660e01b8152600401620010cb919062002214565b602060405180830381865afa158015620010e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200110f919062002955565b905061029a92505050919050565b60606200112a8262001411565b5060006200113762001987565b9050600081511162001159576040518060200160405280600081525062001188565b8062001165846200199e565b6040516020016200117892919062002c50565b6040516020818303038152906040525b915050919050565b60085481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001234620014f7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620012a95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620012a091906200204c565b60405180910390fd5b620012b48162001587565b50565b6008548110620012fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620012f590620026f9565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f92906ff84846040518363ffffffff1660e01b81526004016200136e9291906200271b565b600060405180830381600087803b1580156200138957600080fd5b505af11580156200139e573d6000803e3d6000fd5b50505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806200141f8362001a77565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200149557826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016200148c919062002214565b60405180910390fd5b80915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b620014f2838383600162001ab4565b505050565b62001501620014db565b73ffffffffffffffffffffffffffffffffffffffff166200152162000ddb565b73ffffffffffffffffffffffffffffffffffffffff1614620015855762001547620014db565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016200157c91906200204c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620016bf57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401620016b691906200204c565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051620017b2919062001ebf565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111562001981578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0262001806620014db565b8685856040518563ffffffff1660e01b81526004016200182a949392919062002cd5565b6020604051808303816000875af19250505080156200186957506040513d601f19601f8201168201806040525081019062001866919062002d40565b60015b620018f3573d80600081146200189c576040519150601f19603f3d011682016040523d82523d6000602084013e620018a1565b606091505b506000815103620018eb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401620018e291906200204c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200197f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016200197691906200204c565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001620019af8462001c85565b01905060008167ffffffffffffffff811115620019d157620019d0620022b3565b5b6040519080825280601f01601f19166020018201604052801562001a045781602001600182028036833780820191505090505b509050600082602001820190505b60011562001a6c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858162001a5f5762001a5e62002d72565b5b0494506000850362001a12575b819350505050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808062001aee5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1562001c2d57600062001b018462001411565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801562001b6d57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801562001b83575062001b81818462001196565b155b1562001bc857826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040162001bbf91906200204c565b60405180910390fd5b811562001c2b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831062001ce7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838162001cdd5762001cdc62002d72565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062001d28576d04ee2d6d415b85acef8100000000838162001d1e5762001d1d62002d72565b5b0492506020810190505b662386f26fc10000831062001d5b57662386f26fc10000838162001d515762001d5062002d72565b5b0492506010810190505b6305f5e100831062001d88576305f5e100838162001d7e5762001d7d62002d72565b5b0492506008810190505b612710831062001db157612710838162001da75762001da662002d72565b5b0492506004810190505b6064831062001dd8576064838162001dce5762001dcd62002d72565b5b0492506002810190505b600a831062001de8576001810190505b80915050919050565b6126828062002da283390190565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62001e4a8162001e13565b811462001e5657600080fd5b50565b60008135905062001e6a8162001e3f565b92915050565b60006020828403121562001e895762001e8862001e09565b5b600062001e998482850162001e59565b91505092915050565b60008115159050919050565b62001eb98162001ea2565b82525050565b600060208201905062001ed6600083018462001eae565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001f1857808201518184015260208101905062001efb565b60008484015250505050565b6000601f19601f8301169050919050565b600062001f428262001edc565b62001f4e818562001ee7565b935062001f6081856020860162001ef8565b62001f6b8162001f24565b840191505092915050565b6000602082019050818103600083015262001f92818462001f35565b905092915050565b6000819050919050565b62001faf8162001f9a565b811462001fbb57600080fd5b50565b60008135905062001fcf8162001fa4565b92915050565b60006020828403121562001fee5762001fed62001e09565b5b600062001ffe8482850162001fbe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620020348262002007565b9050919050565b620020468162002027565b82525050565b60006020820190506200206360008301846200203b565b92915050565b620020748162002027565b81146200208057600080fd5b50565b600081359050620020948162002069565b92915050565b60008060408385031215620020b457620020b362001e09565b5b6000620020c48582860162002083565b9250506020620020d78582860162001fbe565b9150509250929050565b6000819050919050565b620020f681620020e1565b82525050565b6000602082019050620021136000830184620020eb565b92915050565b60008060006060848603121562002135576200213462001e09565b5b6000620021458682870162002083565b9350506020620021588682870162001fbe565b92505060406200216b8682870162001fbe565b9150509250925092565b60008060006060848603121562002191576200219062001e09565b5b6000620021a18682870162002083565b9350506020620021b48682870162002083565b9250506040620021c78682870162001fbe565b9150509250925092565b600060208284031215620021ea57620021e962001e09565b5b6000620021fa8482850162002083565b91505092915050565b6200220e8162001f9a565b82525050565b60006020820190506200222b600083018462002203565b92915050565b6200223c8162001ea2565b81146200224857600080fd5b50565b6000813590506200225c8162002231565b92915050565b600080604083850312156200227c576200227b62001e09565b5b60006200228c8582860162002083565b92505060206200229f858286016200224b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620022ed8262001f24565b810181811067ffffffffffffffff821117156200230f576200230e620022b3565b5b80604052505050565b60006200232462001dff565b9050620023328282620022e2565b919050565b600067ffffffffffffffff821115620023555762002354620022b3565b5b620023608262001f24565b9050602081019050919050565b82818337600083830152505050565b6000620023936200238d8462002337565b62002318565b905082815260208101848484011115620023b257620023b1620022ae565b5b620023bf8482856200236d565b509392505050565b600082601f830112620023df57620023de620022a9565b5b8135620023f18482602086016200237c565b91505092915050565b6000806000806080858703121562002417576200241662001e09565b5b6000620024278782880162002083565b94505060206200243a8782880162002083565b93505060406200244d8782880162001fbe565b925050606085013567ffffffffffffffff81111562002471576200247062001e0e565b5b6200247f87828801620023c7565b91505092959194509250565b6000819050919050565b6000620024b6620024b0620024aa8462002007565b6200248b565b62002007565b9050919050565b6000620024ca8262002495565b9050919050565b6000620024de82620024bd565b9050919050565b620024f081620024d1565b82525050565b60006020820190506200250d6000830184620024e5565b92915050565b600080604083850312156200252d576200252c62001e09565b5b60006200253d8582860162002083565b9250506020620025508582860162002083565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620025a257607f821691505b602082108103620025b857620025b76200255a565b5b50919050565b600081519050620025cf8162002231565b92915050565b600060208284031215620025ee57620025ed62001e09565b5b6000620025fe84828501620025be565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200264382620020e1565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362002678576200267762002607565b5b600182019050919050565b7f436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e60008201527f6f74206578697374000000000000000000000000000000000000000000000000602082015250565b6000620026e160288362001ee7565b9150620026ee8262002683565b604082019050919050565b600060208201905081810360008301526200271481620026d2565b9050919050565b60006040820190506200273260008301856200203b565b62002741602083018462002203565b9392505050565b7f436172644f776e6572736869703a207472616e73666572206f6620746f6b656e60008201527f2074686174206973206e6f74206f776e00000000000000000000000000000000602082015250565b6000620027a660308362001ee7565b9150620027b38262002748565b604082019050919050565b60006020820190508181036000830152620027d98162002797565b9050919050565b7f436172644f776e6572736869703a207472616e7366657220746f20746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b60006200283e602b8362001ee7565b91506200284b82620027e0565b604082019050919050565b6000602082019050818103600083015262002871816200282f565b9050919050565b7f436172644f776e6572736869703a206361726420646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b6000620028d660228362001ee7565b9150620028e38262002878565b604082019050919050565b600060208201905081810360008301526200290981620028c7565b9050919050565b60006200291d8262002027565b9050919050565b6200292f8162002910565b81146200293b57600080fd5b50565b6000815190506200294f8162002924565b92915050565b6000602082840312156200296e576200296d62001e09565b5b60006200297e848285016200293e565b91505092915050565b600081519050620029988162002069565b92915050565b600060208284031215620029b757620029b662001e09565b5b6000620029c78482850162002987565b91505092915050565b6000620029dd8262001f9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362002a125762002a1162002607565b5b600182019050919050565b60008151905062002a2e8162001fa4565b92915050565b60006020828403121562002a4d5762002a4c62001e09565b5b600062002a5d8482850162002a1d565b91505092915050565b600062002a738262001f9a565b915062002a808362001f9a565b925082820190508082111562002a9b5762002a9a62002607565b5b92915050565b7f57697a6172640000000000000000000000000000000000000000000000000000600082015250565b600062002ad960068362001ee7565b915062002ae68262002aa1565b602082019050919050565b6000819050919050565b600062002b1c62002b1662002b108462002af1565b6200248b565b62001f9a565b9050919050565b62002b2e8162002afb565b82525050565b6000604082019050818103600083015262002b4f8162002aca565b905062002b60602083018462002b23565b92915050565b7f68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f78793160008201527f2f312e706e670000000000000000000000000000000000000000000000000000602082015250565b600062002bc460268362001ee7565b915062002bd18262002b66565b604082019050919050565b600060408201905062002bf3600083018462002203565b818103602083015262002c068162002bb5565b905092915050565b600081905092915050565b600062002c268262001edc565b62002c32818562002c0e565b935062002c4481856020860162001ef8565b80840191505092915050565b600062002c5e828562002c19565b915062002c6c828462002c19565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600062002ca18262002c78565b62002cad818562002c83565b935062002cbf81856020860162001ef8565b62002cca8162001f24565b840191505092915050565b600060808201905062002cec60008301876200203b565b62002cfb60208301866200203b565b62002d0a604083018562002203565b818103606083015262002d1e818462002c94565b905095945050505050565b60008151905062002d3a8162001e3f565b92915050565b60006020828403121562002d595762002d5862001e09565b5b600062002d698482850162002d29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfe60806040523480156200001157600080fd5b506040516200268238038062002682833981810160405281019062000037919062000226565b8160009081620000489190620004cd565b50806001819055505050620005b4565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000c18262000076565b810181811067ffffffffffffffff82111715620000e357620000e262000087565b5b80604052505050565b6000620000f862000058565b9050620001068282620000b6565b919050565b600067ffffffffffffffff82111562000129576200012862000087565b5b620001348262000076565b9050602081019050919050565b60005b838110156200016157808201518184015260208101905062000144565b60008484015250505050565b6000620001846200017e846200010b565b620000ec565b905082815260208101848484011115620001a357620001a262000071565b5b620001b084828562000141565b509392505050565b600082601f830112620001d057620001cf6200006c565b5b8151620001e28482602086016200016d565b91505092915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000806040838503121562000240576200023f62000062565b5b600083015167ffffffffffffffff81111562000261576200026062000067565b5b6200026f85828601620001b8565b925050602062000282858286016200020f565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002df57607f821691505b602082108103620002f557620002f462000297565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000320565b6200036b868362000320565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003ae620003a8620003a284620001eb565b62000383565b620001eb565b9050919050565b6000819050919050565b620003ca836200038d565b620003e2620003d982620003b5565b8484546200032d565b825550505050565b600090565b620003f9620003ea565b62000406818484620003bf565b505050565b5b818110156200042e5762000422600082620003ef565b6001810190506200040c565b5050565b601f8211156200047d576200044781620002fb565b620004528462000310565b8101602085101562000462578190505b6200047a620004718562000310565b8301826200040b565b50505b505050565b600082821c905092915050565b6000620004a26000198460080262000482565b1980831691505092915050565b6000620004bd83836200048f565b9150826002028217905092915050565b620004d8826200028c565b67ffffffffffffffff811115620004f457620004f362000087565b5b620005008254620002c6565b6200050d82828562000432565b600060209050601f83116001811462000545576000841562000530578287015190505b6200053c8582620004af565b865550620005ac565b601f1984166200055586620002fb565b60005b828110156200057f5784890151825560018201915060208501945060208101905062000558565b868310156200059f57848901516200059b601f8916826200048f565b8355505b6001600288020188555050505b505050505050565b6120be80620005c46000396000f3fe60806040523480156200001157600080fd5b5060043610620000e25760003560e01c806370a0823111620000995780639188d312116200006f5780639188d3121462000251578063a9aa75ef1462000287578063aa93d70214620002bd578063f92906ff14620002dd57620000e2565b806370a0823114620001c35780637d62013014620001f95780638dc10768146200021b57620000e2565b806306fdde0314620000e757806317d7de7c14620001095780631b6cde10146200012b57806340c10f19146200014d5780636352211e146200016d5780636a62784214620001a3575b600080fd5b620000f1620002fd565b60405162000100919062000dc6565b60405180910390f35b6200011362000393565b60405162000122919062000dc6565b60405180910390f35b620001356200042d565b60405162000144919062000e05565b60405180910390f35b6200016b600480360381019062000165919062000ecc565b62000433565b005b6200018b600480360381019062000185919062000f13565b6200068e565b6040516200019a919062000f56565b60405180910390f35b620001c16004803603810190620001bb919062000f73565b62000818565b005b620001e16004803603810190620001db919062000f73565b620009c1565b604051620001f0919062000e05565b60405180910390f35b6200020362000adf565b60405162000212919062000e05565b60405180910390f35b62000239600480360381019062000233919062000f13565b62000ae9565b60405162000248919062001010565b60405180910390f35b6200026f600480360381019062000269919062000f13565b62000b1c565b6040516200027e919062001010565b60405180910390f35b620002a560048036038101906200029f919062000f13565b62000b59565b604051620002b491906200104a565b60405180910390f35b620002db6004803603810190620002d59190620011b8565b62000c44565b005b620002fb6004803603810190620002f5919062000ecc565b62000cec565b005b600080546200030c906200124d565b80601f01602080910402602001604051908101604052809291908181526020018280546200033a906200124d565b80156200038b5780601f106200035f576101008083540402835291602001916200038b565b820191906000526020600020905b8154815290600101906020018083116200036d57829003601f168201915b505050505081565b606060008054620003a4906200124d565b80601f0160208091040260200160405190810160405280929190818152602001828054620003d2906200124d565b8015620004235780601f10620003f75761010080835404028352916020019162000423565b820191906000526020600020905b8154815290600101906020018083116200040557829003601f168201915b5050505050905090565b60015481565b60005b6001548110156200068957600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fe919062001299565b73ffffffffffffffffffffffffffffffffffffffff16148015620005c55750816002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200059d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005c39190620012e2565b145b1562000673576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000639919062000f56565b600060405180830381600087803b1580156200065457600080fd5b505af115801562000669573d6000803e3d6000fd5b5050505062000689565b8080620006809062001343565b91505062000436565b505050565b600080600090505b6001548110156200081157826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007479190620012e2565b03620007fb576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f2919062001299565b91505062000813565b8080620008089062001343565b91505062000696565b505b919050565b60005b600154811015620009bd57600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e3919062001299565b73ffffffffffffffffffffffffffffffffffffffff1603620009a7576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b81526004016200096d919062000f56565b600060405180830381600087803b1580156200098857600080fd5b505af11580156200099d573d6000803e3d6000fd5b50505050620009bd565b8080620009b49062001343565b9150506200081b565b5050565b6000806000905060005b60015481101562000ad5578373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a92919062001299565b73ffffffffffffffffffffffffffffffffffffffff160362000abf57818062000abb9062001343565b9250505b808062000acc9062001343565b915050620009cb565b5080915050919050565b6000600154905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600090505b60015481101562000c3957826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000bec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c129190620012e2565b0362000c2357600191505062000c3f565b808062000c309062001343565b91505062000b61565b50600090505b919050565b818160405162000c549062000d1e565b62000c6192919062001390565b604051809103906000f08015801562000c7e573d6000803e3d6000fd5b50600260006001600081548092919062000c989062001343565b91905055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60005b8181101562000d195762000d038362000818565b808062000d109062001343565b91505062000cef565b505050565b610cc480620013c583390190565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000d6857808201518184015260208101905062000d4b565b60008484015250505050565b6000601f19601f8301169050919050565b600062000d928262000d2c565b62000d9e818562000d37565b935062000db081856020860162000d48565b62000dbb8162000d74565b840191505092915050565b6000602082019050818103600083015262000de2818462000d85565b905092915050565b6000819050919050565b62000dff8162000dea565b82525050565b600060208201905062000e1c600083018462000df4565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e638262000e36565b9050919050565b62000e758162000e56565b811462000e8157600080fd5b50565b60008135905062000e958162000e6a565b92915050565b62000ea68162000dea565b811462000eb257600080fd5b50565b60008135905062000ec68162000e9b565b92915050565b6000806040838503121562000ee65762000ee562000e2c565b5b600062000ef68582860162000e84565b925050602062000f098582860162000eb5565b9150509250929050565b60006020828403121562000f2c5762000f2b62000e2c565b5b600062000f3c8482850162000eb5565b91505092915050565b62000f508162000e56565b82525050565b600060208201905062000f6d600083018462000f45565b92915050565b60006020828403121562000f8c5762000f8b62000e2c565b5b600062000f9c8482850162000e84565b91505092915050565b6000819050919050565b600062000fd062000fca62000fc48462000e36565b62000fa5565b62000e36565b9050919050565b600062000fe48262000faf565b9050919050565b600062000ff88262000fd7565b9050919050565b6200100a8162000feb565b82525050565b600060208201905062001027600083018462000fff565b92915050565b60008115159050919050565b62001044816200102d565b82525050565b600060208201905062001061600083018462001039565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620010ab8262000d74565b810181811067ffffffffffffffff82111715620010cd57620010cc62001071565b5b80604052505050565b6000620010e262000e22565b9050620010f08282620010a0565b919050565b600067ffffffffffffffff82111562001113576200111262001071565b5b6200111e8262000d74565b9050602081019050919050565b82818337600083830152505050565b6000620011516200114b84620010f5565b620010d6565b90508281526020810184848401111562001170576200116f6200106c565b5b6200117d8482856200112b565b509392505050565b600082601f8301126200119d576200119c62001067565b5b8135620011af8482602086016200113a565b91505092915050565b60008060408385031215620011d257620011d162000e2c565b5b6000620011e28582860162000eb5565b925050602083013567ffffffffffffffff81111562001206576200120562000e31565b5b620012148582860162001185565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200126657607f821691505b6020821081036200127c576200127b6200121e565b5b50919050565b600081519050620012938162000e6a565b92915050565b600060208284031215620012b257620012b162000e2c565b5b6000620012c28482850162001282565b91505092915050565b600081519050620012dc8162000e9b565b92915050565b600060208284031215620012fb57620012fa62000e2c565b5b60006200130b84828501620012cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620013508262000dea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001385576200138462001314565b5b600182019050919050565b6000604082019050620013a7600083018562000df4565b8181036020830152620013bb818462000d85565b9050939250505056fe60806040523480156200001157600080fd5b5060405162000cc438038062000cc4833981810160405281019062000037919062000372565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200041d565b60405180910390fd5b620000be81620000e060201b60201c565b50816001819055508060029081620000d791906200067b565b50505062000762565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001cd81620001b8565b8114620001d957600080fd5b50565b600081519050620001ed81620001c2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024882620001fd565b810181811067ffffffffffffffff821117156200026a57620002696200020e565b5b80604052505050565b60006200027f620001a4565b90506200028d82826200023d565b919050565b600067ffffffffffffffff821115620002b057620002af6200020e565b5b620002bb82620001fd565b9050602081019050919050565b60005b83811015620002e8578082015181840152602081019050620002cb565b60008484015250505050565b60006200030b620003058462000292565b62000273565b9050828152602081018484840111156200032a5762000329620001f8565b5b62000337848285620002c8565b509392505050565b600082601f830112620003575762000356620001f3565b5b815162000369848260208601620002f4565b91505092915050565b600080604083850312156200038c576200038b620001ae565b5b60006200039c85828601620001dc565b925050602083015167ffffffffffffffff811115620003c057620003bf620001b3565b5b620003ce858286016200033f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040582620003d8565b9050919050565b6200041781620003f8565b82525050565b60006020820190506200043460008301846200040c565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048d57607f821691505b602082108103620004a357620004a262000445565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200050d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004ce565b620005198683620004ce565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200055c620005566200055084620001b8565b62000531565b620001b8565b9050919050565b6000819050919050565b62000578836200053b565b62000590620005878262000563565b848454620004db565b825550505050565b600090565b620005a762000598565b620005b48184846200056d565b505050565b5b81811015620005dc57620005d06000826200059d565b600181019050620005ba565b5050565b601f8211156200062b57620005f581620004a9565b6200060084620004be565b8101602085101562000610578190505b620006286200061f85620004be565b830182620005b9565b50505b505050565b600082821c905092915050565b6000620006506000198460080262000630565b1980831691505092915050565b60006200066b83836200063d565b9150826002028217905092915050565b62000686826200043a565b67ffffffffffffffff811115620006a257620006a16200020e565b5b620006ae825462000474565b620006bb828285620005e0565b600060209050601f831160018114620006f35760008415620006de578287015190505b620006ea85826200065d565b8655506200075a565b601f1984166200070386620004a9565b60005b828110156200072d5784890151825560018201915060208501945060208101905062000706565b868310156200074d578489015162000749601f8916826200063d565b8355505b6001600288020188555050505b505050505050565b61055280620007726000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635d1ca6311461005c578063715018a61461007a5780637802dff5146100845780638da5cb5b146100a2578063f2fde38b146100c0575b600080fd5b6100646100dc565b6040516100719190610335565b60405180910390f35b6100826100e6565b005b61008c6100fa565b60405161009991906103e0565b60405180910390f35b6100aa61018c565b6040516100b79190610443565b60405180910390f35b6100da60048036038101906100d5919061048f565b6101b5565b005b6000600154905090565b6100ee6101c9565b6100f86000610250565b565b606060028054610109906104eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906104eb565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bd6101c9565b6101c6816101b5565b50565b6101d1610314565b73ffffffffffffffffffffffffffffffffffffffff166101ef61018c565b73ffffffffffffffffffffffffffffffffffffffff161461024e57610212610314565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102459190610443565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61032f8161031c565b82525050565b600060208201905061034a6000830184610326565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561038a57808201518184015260208101905061036f565b60008484015250505050565b6000601f19601f8301169050919050565b60006103b282610350565b6103bc818561035b565b93506103cc81856020860161036c565b6103d581610396565b840191505092915050565b600060208201905081810360008301526103fa81846103a7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042d82610402565b9050919050565b61043d81610422565b82525050565b60006020820190506104586000830184610434565b92915050565b600080fd5b61046c81610422565b811461047757600080fd5b50565b60008135905061048981610463565b92915050565b6000602082840312156104a5576104a461045e565b5b60006104b38482850161047a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050357607f821691505b602082108103610516576105156104bc565b5b5091905056fea2646970667358221220c9055a330222893d1592b6ba51a425feae93b76700fc1cf31e7c593035fd370d64736f6c63430008140033a26469706673582212205d2eff3a6afb4b31ee29993c53541514f33fc14b38083eaf5bce9a1d25c8f49864736f6c63430008140033a2646970667358221220974c1b1e283699d1092638977022efdd9a344c631bba1f504bea576eab8d648164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4361726400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4341524400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEB SWAP2 SWAP1 PUSH3 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x105 DUP2 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x117 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP POP POP PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x223 DUP3 PUSH3 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x235 DUP2 PUSH3 0x216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x252 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x22A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0x292 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x31B JUMP JUMPDEST PUSH3 0x366 DUP7 DUP4 PUSH3 0x31B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B3 PUSH3 0x3AD PUSH3 0x3A7 DUP5 PUSH3 0x37E JUMP JUMPDEST PUSH3 0x388 JUMP JUMPDEST PUSH3 0x37E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CF DUP4 PUSH3 0x392 JUMP JUMPDEST PUSH3 0x3E7 PUSH3 0x3DE DUP3 PUSH3 0x3BA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x328 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3FE PUSH3 0x3EF JUMP JUMPDEST PUSH3 0x40B DUP2 DUP5 DUP5 PUSH3 0x3C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x433 JUMPI PUSH3 0x427 PUSH1 0x0 DUP3 PUSH3 0x3F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x411 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x482 JUMPI PUSH3 0x44C DUP2 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x457 DUP5 PUSH3 0x30B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x467 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47F PUSH3 0x476 DUP6 PUSH3 0x30B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x410 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x487 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C2 DUP4 DUP4 PUSH3 0x494 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4DD DUP3 PUSH3 0x258 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F9 JUMPI PUSH3 0x4F8 PUSH3 0x263 JUMP JUMPDEST JUMPDEST PUSH3 0x505 DUP3 SLOAD PUSH3 0x2C1 JUMP JUMPDEST PUSH3 0x512 DUP3 DUP3 DUP6 PUSH3 0x437 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x54A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x535 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x541 DUP6 DUP3 PUSH3 0x4B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5B1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x55A DUP7 PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x584 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x55D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5A4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5A0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x494 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5459 DUP1 PUSH3 0x5C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x160 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xC9 JUMPI DUP1 PUSH4 0xBF874103 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xBF874103 EQ PUSH3 0x3DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH3 0x411 JUMPI DUP1 PUSH4 0xD57F966B EQ PUSH3 0x447 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x49F JUMPI DUP1 PUSH4 0xF7374D11 EQ PUSH3 0x4BF JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x321 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x343 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x365 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH3 0x385 JUMPI DUP1 PUSH4 0xBC4F6DEF EQ PUSH3 0x3A5 JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH3 0x123 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH3 0x249 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x269 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH3 0x289 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x2A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x315 JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x165 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x19B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH3 0x1BD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x1F3 JUMPI DUP1 PUSH4 0xABC4A78 EQ PUSH3 0x213 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x1E70 JUMP JUMPDEST PUSH3 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x192 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1A5 PUSH3 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B4 SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1D5 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1EA SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x20B SWAP2 SWAP1 PUSH3 0x209A JUMP JUMPDEST PUSH3 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH3 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x22B SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x240 SWAP2 SWAP1 PUSH3 0x20FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x261 SWAP2 SWAP1 PUSH3 0x2119 JUMP JUMPDEST PUSH3 0x7AE JUMP JUMPDEST STOP JUMPDEST PUSH3 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x281 SWAP2 SWAP1 PUSH3 0x2175 JUMP JUMPDEST PUSH3 0x89E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2A1 SWAP2 SWAP1 PUSH3 0x2175 JUMP JUMPDEST PUSH3 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2C1 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D6 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F7 SWAP2 SWAP1 PUSH3 0x21D1 JUMP JUMPDEST PUSH3 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x30C SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x31F PUSH3 0xDC3 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x32B PUSH3 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x33A SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34D PUSH3 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x35C SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x37D SWAP2 SWAP1 PUSH3 0x2262 JUMP JUMPDEST PUSH3 0xE9E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x39D SWAP2 SWAP1 PUSH3 0x23FA JUMP JUMPDEST PUSH3 0xEB8 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3BD SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3D2 SWAP2 SWAP1 PUSH3 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3F3 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x408 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x429 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x43E SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x451 PUSH3 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x460 SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x481 SWAP2 SWAP1 PUSH3 0x2513 JUMP JUMPDEST PUSH3 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x496 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4B7 SWAP2 SWAP1 PUSH3 0x21D1 JUMP JUMPDEST PUSH3 0x122A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4D7 SWAP2 SWAP1 PUSH3 0x2119 JUMP JUMPDEST PUSH3 0x12B7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH3 0x5AB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH3 0x5BE JUMPI POP PUSH3 0x5BD DUP3 PUSH3 0x13A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH3 0x5D6 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x604 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x629 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x637 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66C DUP3 PUSH3 0x1411 JUMP JUMPDEST POP PUSH3 0x678 DUP3 PUSH3 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x695 DUP3 DUP3 PUSH3 0x68F PUSH3 0x14DB JUMP JUMPDEST PUSH3 0x14E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 SLT ISZERO PUSH3 0x784 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9AA75EF DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x71A SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x75E SWAP2 SWAP1 PUSH3 0x25D5 JUMP JUMPDEST ISZERO PUSH3 0x76E JUMPI DUP1 SWAP2 POP POP PUSH3 0x7A9 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x77B SWAP1 PUSH3 0x2636 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6A1 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7EC SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x865 SWAP3 SWAP2 SWAP1 PUSH3 0x271B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x895 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x8A9 DUP2 PUSH3 0xBA2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x910 SWAP1 PUSH3 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x98B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x982 SWAP1 PUSH3 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x998 DUP3 PUSH3 0x699 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH3 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F6 SWAP1 PUSH3 0x28EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA6D SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xAB1 SWAP2 SWAP1 PUSH3 0x2955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAEB SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xB1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH3 0xB9D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xEB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xCC2 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC25 SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC69 SWAP2 SWAP1 PUSH3 0x299E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCAB JUMPI DUP1 SWAP3 POP POP POP PUSH3 0xCC8 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xCB9 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xBAA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xDB9 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD50 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD94 SWAP2 SWAP1 PUSH3 0x2A34 JUMP JUMPDEST DUP3 PUSH3 0xDA1 SWAP2 SWAP1 PUSH3 0x2A66 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH3 0xDB0 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCD7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDCD PUSH3 0x14F7 JUMP JUMPDEST PUSH3 0xDD9 PUSH1 0x0 PUSH3 0x1587 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0xE15 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xE43 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xE68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xE76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xEB4 PUSH3 0xEAC PUSH3 0x14DB JUMP JUMPDEST DUP4 DUP4 PUSH3 0x164B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xEC5 DUP5 DUP5 DUP5 PUSH3 0x89E JUMP JUMPDEST PUSH3 0xED3 DUP5 DUP5 DUP5 DUP5 PUSH3 0x17BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0xF1F SWAP1 PUSH3 0x1DF1 JUMP JUMPDEST PUSH3 0xF2B SWAP2 SWAP1 PUSH3 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xFB4 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA93D702 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1027 SWAP2 SWAP1 PUSH3 0x2BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1057 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10CB SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x110F SWAP2 SWAP1 PUSH3 0x2955 JUMP JUMPDEST SWAP1 POP PUSH2 0x29A SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x112A DUP3 PUSH3 0x1411 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1137 PUSH3 0x1987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x1159 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x1188 JUMP JUMPDEST DUP1 PUSH3 0x1165 DUP5 PUSH3 0x199E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1178 SWAP3 SWAP2 SWAP1 PUSH3 0x2C50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1234 PUSH3 0x14F7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12A9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12A0 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B4 DUP2 PUSH3 0x1587 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12F5 SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92906FF DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136E SWAP3 SWAP2 SWAP1 PUSH3 0x271B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x139E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x141F DUP4 PUSH3 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1495 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x148C SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x14F2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x1AB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x1501 PUSH3 0x14DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1521 PUSH3 0xDDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1585 JUMPI PUSH3 0x1547 PUSH3 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x157C SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x16BF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16B6 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH3 0x17B2 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x1981 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH3 0x1806 PUSH3 0x14DB JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x182A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2CD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x1869 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1866 SWAP2 SWAP1 PUSH3 0x2D40 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x18F3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x189C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x18A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x18EB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x18E2 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x197F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1976 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x19AF DUP5 PUSH3 0x1C85 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x19D1 JUMPI PUSH3 0x19D0 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x1A04 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1A6C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1A5F JUMPI PUSH3 0x1A5E PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1A12 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x1AEE JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x1C2D JUMPI PUSH1 0x0 PUSH3 0x1B01 DUP5 PUSH3 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x1B6D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1B83 JUMPI POP PUSH3 0x1B81 DUP2 DUP5 PUSH3 0x1196 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x1BC8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BBF SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x1C2B JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x1CE7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x1CDD JUMPI PUSH3 0x1CDC PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x1D28 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x1D1E JUMPI PUSH3 0x1D1D PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x1D5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x1D51 JUMPI PUSH3 0x1D50 PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x1D88 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x1D7E JUMPI PUSH3 0x1D7D PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x1DB1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x1DA7 JUMPI PUSH3 0x1DA6 PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x1DD8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x1DCE JUMPI PUSH3 0x1DCD PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x1DE8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 DUP1 PUSH3 0x2DA2 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E4A DUP2 PUSH3 0x1E13 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1E6A DUP2 PUSH3 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1E89 JUMPI PUSH3 0x1E88 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1E99 DUP5 DUP3 DUP6 ADD PUSH3 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1EB9 DUP2 PUSH3 0x1EA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1ED6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1F18 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1EFB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F42 DUP3 PUSH3 0x1EDC JUMP JUMPDEST PUSH3 0x1F4E DUP2 DUP6 PUSH3 0x1EE7 JUMP JUMPDEST SWAP4 POP PUSH3 0x1F60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST PUSH3 0x1F6B DUP2 PUSH3 0x1F24 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1F92 DUP2 DUP5 PUSH3 0x1F35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FAF DUP2 PUSH3 0x1F9A JUMP JUMPDEST DUP2 EQ PUSH3 0x1FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1FCF DUP2 PUSH3 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1FEE JUMPI PUSH3 0x1FED PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FFE DUP5 DUP3 DUP6 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2034 DUP3 PUSH3 0x2007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2046 DUP2 PUSH3 0x2027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2063 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x203B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2074 DUP2 PUSH3 0x2027 JUMP JUMPDEST DUP2 EQ PUSH3 0x2080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2094 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x20B4 JUMPI PUSH3 0x20B3 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x20C4 DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x20D7 DUP6 DUP3 DUP7 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F6 DUP2 PUSH3 0x20E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2113 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2135 JUMPI PUSH3 0x2134 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2145 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2158 DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x216B DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2191 JUMPI PUSH3 0x2190 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21A1 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x21B4 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x21C7 DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x21EA JUMPI PUSH3 0x21E9 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21FA DUP5 DUP3 DUP6 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x220E DUP2 PUSH3 0x1F9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x222B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x223C DUP2 PUSH3 0x1EA2 JUMP JUMPDEST DUP2 EQ PUSH3 0x2248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x225C DUP2 PUSH3 0x2231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x227C JUMPI PUSH3 0x227B PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x228C DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x229F DUP6 DUP3 DUP7 ADD PUSH3 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x22ED DUP3 PUSH3 0x1F24 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x230F JUMPI PUSH3 0x230E PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2324 PUSH3 0x1DFF JUMP JUMPDEST SWAP1 POP PUSH3 0x2332 DUP3 DUP3 PUSH3 0x22E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2355 JUMPI PUSH3 0x2354 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST PUSH3 0x2360 DUP3 PUSH3 0x1F24 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2393 PUSH3 0x238D DUP5 PUSH3 0x2337 JUMP JUMPDEST PUSH3 0x2318 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x23B2 JUMPI PUSH3 0x23B1 PUSH3 0x22AE JUMP JUMPDEST JUMPDEST PUSH3 0x23BF DUP5 DUP3 DUP6 PUSH3 0x236D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x23DF JUMPI PUSH3 0x23DE PUSH3 0x22A9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x23F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x237C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2417 JUMPI PUSH3 0x2416 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2427 DUP8 DUP3 DUP9 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x243A DUP8 DUP3 DUP9 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x244D DUP8 DUP3 DUP9 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2471 JUMPI PUSH3 0x2470 PUSH3 0x1E0E JUMP JUMPDEST JUMPDEST PUSH3 0x247F DUP8 DUP3 DUP9 ADD PUSH3 0x23C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B6 PUSH3 0x24B0 PUSH3 0x24AA DUP5 PUSH3 0x2007 JUMP JUMPDEST PUSH3 0x248B JUMP JUMPDEST PUSH3 0x2007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24CA DUP3 PUSH3 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24DE DUP3 PUSH3 0x24BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24F0 DUP2 PUSH3 0x24D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x250D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x24E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x252D JUMPI PUSH3 0x252C PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x253D DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2550 DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x25A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x25B8 JUMPI PUSH3 0x25B7 PUSH3 0x255A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25CF DUP2 PUSH3 0x2231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25EE JUMPI PUSH3 0x25ED PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x25FE DUP5 DUP3 DUP6 ADD PUSH3 0x25BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2643 DUP3 PUSH3 0x20E1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2678 JUMPI PUSH3 0x2677 PUSH3 0x2607 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A20636F6C6C656374696F6E20646F6573206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206578697374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26E1 PUSH1 0x28 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x26EE DUP3 PUSH3 0x2683 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2714 DUP2 PUSH3 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2732 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2741 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E73666572206F6620746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2074686174206973206E6F74206F776E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27A6 PUSH1 0x30 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x27B3 DUP3 PUSH3 0x2748 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x27D9 DUP2 PUSH3 0x2797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E7366657220746F20746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x283E PUSH1 0x2B DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x284B DUP3 PUSH3 0x27E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2871 DUP2 PUSH3 0x282F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A206361726420646F6573206E6F7420657869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28D6 PUSH1 0x22 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x28E3 DUP3 PUSH3 0x2878 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2909 DUP2 PUSH3 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x291D DUP3 PUSH3 0x2027 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x292F DUP2 PUSH3 0x2910 JUMP JUMPDEST DUP2 EQ PUSH3 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x294F DUP2 PUSH3 0x2924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x296E JUMPI PUSH3 0x296D PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x297E DUP5 DUP3 DUP6 ADD PUSH3 0x293E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2998 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x29B7 JUMPI PUSH3 0x29B6 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x29C7 DUP5 DUP3 DUP6 ADD PUSH3 0x2987 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29DD DUP3 PUSH3 0x1F9A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2A12 JUMPI PUSH3 0x2A11 PUSH3 0x2607 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A2E DUP2 PUSH3 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A4D JUMPI PUSH3 0x2A4C PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A5D DUP5 DUP3 DUP6 ADD PUSH3 0x2A1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A73 DUP3 PUSH3 0x1F9A JUMP JUMPDEST SWAP2 POP PUSH3 0x2A80 DUP4 PUSH3 0x1F9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x2A9B JUMPI PUSH3 0x2A9A PUSH3 0x2607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57697A6172640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD9 PUSH1 0x6 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x2AE6 DUP3 PUSH3 0x2AA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B1C PUSH3 0x2B16 PUSH3 0x2B10 DUP5 PUSH3 0x2AF1 JUMP JUMPDEST PUSH3 0x248B JUMP JUMPDEST PUSH3 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B2E DUP2 PUSH3 0x2AFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2B4F DUP2 PUSH3 0x2ACA JUMP JUMPDEST SWAP1 POP PUSH3 0x2B60 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2B23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x68747470733A2F2F696D616765732E706F6B656D6F6E7463672E696F2F787931 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2F312E706E670000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BC4 PUSH1 0x26 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x2BD1 DUP3 PUSH3 0x2B66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2BF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2C06 DUP2 PUSH3 0x2BB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C26 DUP3 PUSH3 0x1EDC JUMP JUMPDEST PUSH3 0x2C32 DUP2 DUP6 PUSH3 0x2C0E JUMP JUMPDEST SWAP4 POP PUSH3 0x2C44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C5E DUP3 DUP6 PUSH3 0x2C19 JUMP JUMPDEST SWAP2 POP PUSH3 0x2C6C DUP3 DUP5 PUSH3 0x2C19 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA1 DUP3 PUSH3 0x2C78 JUMP JUMPDEST PUSH3 0x2CAD DUP2 DUP6 PUSH3 0x2C83 JUMP JUMPDEST SWAP4 POP PUSH3 0x2CBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST PUSH3 0x2CCA DUP2 PUSH3 0x1F24 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2CEC PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2CFB PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2D0A PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2203 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x2D1E DUP2 DUP5 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D3A DUP2 PUSH3 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D59 JUMPI PUSH3 0x2D58 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D69 DUP5 DUP3 DUP6 ADD PUSH3 0x2D29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2682 CODESIZE SUB DUP1 PUSH3 0x2682 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xC1 DUP3 PUSH3 0x76 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8 PUSH3 0x58 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x76 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1EB JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH3 0x23F PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x260 PUSH3 0x67 JUMP JUMPDEST JUMPDEST PUSH3 0x26F DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x282 DUP6 DUP3 DUP7 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x297 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x320 JUMP JUMPDEST PUSH3 0x36B DUP7 DUP4 PUSH3 0x320 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AE PUSH3 0x3A8 PUSH3 0x3A2 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x383 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP4 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D9 DUP3 PUSH3 0x3B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x406 DUP2 DUP5 DUP5 PUSH3 0x3BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42E JUMPI PUSH3 0x422 PUSH1 0x0 DUP3 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x40C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x447 DUP2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x452 DUP5 PUSH3 0x310 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x462 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47A PUSH3 0x471 DUP6 PUSH3 0x310 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x482 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BD DUP4 DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D8 DUP3 PUSH3 0x28C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 SLOAD PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x50D DUP3 DUP3 DUP6 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x545 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x530 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x53C DUP6 DUP3 PUSH3 0x4AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x555 DUP7 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x558 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x59B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20BE DUP1 PUSH3 0x5C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x4C SHL 0x1E 0x28 CALLDATASIZE SWAP10 0xD1 MULMOD 0x26 CODESIZE SWAP8 PUSH17 0x22EFDD9A344C631BBA1F504BEA576EAB8D PUSH5 0x8164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"188:3998:13:-:0;;;379:64;;;;;;;;;;1381:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:10:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1455:5:2;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;188:3998:13;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;188:3998:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1096":{"entryPoint":5347,"id":1096,"parameterSlots":3,"returnSlots":0},"@_approve_1162":{"entryPoint":6836,"id":1162,"parameterSlots":4,"returnSlots":0},"@_baseURI_489":{"entryPoint":6535,"id":489,"parameterSlots":0,"returnSlots":1},"@_checkOnERC721Received_1292":{"entryPoint":6079,"id":1292,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5367,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_671":{"entryPoint":5278,"id":671,"parameterSlots":1,"returnSlots":1},"@_msgSender_1468":{"entryPoint":5339,"id":1468,"parameterSlots":0,"returnSlots":1},"@_ownerOf_658":{"entryPoint":6775,"id":658,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1228":{"entryPoint":5137,"id":1228,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1199":{"entryPoint":5707,"id":1199,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5511,"id":146,"parameterSlots":1,"returnSlots":0},"@addACard_3298":{"entryPoint":3852,"id":3298,"parameterSlots":1,"returnSlots":1},"@approve_505":{"entryPoint":1663,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_3052":{"entryPoint":3277,"id":3052,"parameterSlots":1,"returnSlots":1},"@cardCollections_3002":{"entryPoint":3801,"id":3002,"parameterSlots":0,"returnSlots":0},"@collectionCount_3004":{"entryPoint":4496,"id":3004,"parameterSlots":0,"returnSlots":0},"@getApproved_522":{"entryPoint":1631,"id":522,"parameterSlots":1,"returnSlots":1},"@getCollectionNbForCard_3135":{"entryPoint":1689,"id":3135,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":4502,"id":555,"parameterSlots":2,"returnSlots":1},"@log10_2643":{"entryPoint":7301,"id":2643,"parameterSlots":1,"returnSlots":1},"@mintSomeCards_3223":{"entryPoint":4791,"id":3223,"parameterSlots":3,"returnSlots":0},"@mint_3248":{"entryPoint":1966,"id":3248,"parameterSlots":3,"returnSlots":0},"@name_435":{"entryPoint":1477,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_3096":{"entryPoint":2978,"id":3096,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3547,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3523,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":2944,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_645":{"entryPoint":3768,"id":645,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":3742,"id":538,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1756":{"entryPoint":5031,"id":1756,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":1247,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":3588,"id":444,"parameterSlots":0,"returnSlots":1},"@toString_1546":{"entryPoint":6558,"id":1546,"parameterSlots":1,"returnSlots":1},"@tokenURI_480":{"entryPoint":4381,"id":480,"parameterSlots":1,"returnSlots":1},"@transferFrom_3198":{"entryPoint":2206,"id":3198,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4650,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9084,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":10631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_Card_$2987_fromMemory":{"entryPoint":10558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9491,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8565,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9210,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8802,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8346,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":8473,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":7792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_Card_$2987_fromMemory":{"entryPoint":10581,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7854,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack":{"entryPoint":9445,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8427,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":11043,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack":{"entryPoint":10287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack":{"entryPoint":10135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack":{"entryPoint":10954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack":{"entryPoint":9938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack":{"entryPoint":10439,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack":{"entryPoint":11189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8707,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11344,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11477,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10011,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed":{"entryPoint":9462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9977,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11228,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8984,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7679,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9015,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11384,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7900,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11395,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7911,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11278,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10854,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8231,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7842,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7699,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_Card_$2987":{"entryPoint":10512,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":8417,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":10993,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8199,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8090,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_GameCollection_$3593_to_t_address":{"entryPoint":9425,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":11003,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":9405,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":9365,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9069,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7928,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9609,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8930,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9355,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_int256":{"entryPoint":9782,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10704,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9735,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11634,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8883,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8873,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8878,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7694,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7689,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7972,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0":{"entryPoint":10208,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846":{"entryPoint":10056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5":{"entryPoint":10913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b":{"entryPoint":9859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a":{"entryPoint":10360,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92":{"entryPoint":11110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8297,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8753,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7743,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_Card_$2987":{"entryPoint":10532,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8100,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:26517:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1860:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:16"},"nodeType":"YulFunctionCall","src":"1960:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:16"},"nodeType":"YulFunctionCall","src":"1979:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:16"},"nodeType":"YulFunctionCall","src":"1973:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:16"},"nodeType":"YulFunctionCall","src":"1953:39:16"},"nodeType":"YulExpressionStatement","src":"1953:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:16"},"nodeType":"YulFunctionCall","src":"1897:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:16","statements":[{"nodeType":"YulAssignment","src":"1913:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:16"},"nodeType":"YulFunctionCall","src":"1918:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:16","statements":[]},"src":"1889:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:16"},"nodeType":"YulFunctionCall","src":"2018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:16"},"nodeType":"YulFunctionCall","src":"2011:27:16"},"nodeType":"YulExpressionStatement","src":"2011:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:16","type":""}],"src":"1798:246:16"},{"body":{"nodeType":"YulBlock","src":"2098:54:16","statements":[{"nodeType":"YulAssignment","src":"2108:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:16"},"nodeType":"YulFunctionCall","src":"2138:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:16","type":""}],"src":"2050:102:16"},{"body":{"nodeType":"YulBlock","src":"2250:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:16"},"nodeType":"YulFunctionCall","src":"2274:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:16"},"nodeType":"YulFunctionCall","src":"2329:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:16"},"nodeType":"YulFunctionCall","src":"2409:65:16"},"nodeType":"YulExpressionStatement","src":"2409:65:16"},{"nodeType":"YulAssignment","src":"2483:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:16"},"nodeType":"YulFunctionCall","src":"2499:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:16"},"nodeType":"YulFunctionCall","src":"2490:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:16","type":""}],"src":"2158:377:16"},{"body":{"nodeType":"YulBlock","src":"2659:195:16","statements":[{"nodeType":"YulAssignment","src":"2669:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:16"},"nodeType":"YulFunctionCall","src":"2677:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:16"},"nodeType":"YulFunctionCall","src":"2712:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:16"},"nodeType":"YulFunctionCall","src":"2731:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:47:16"},"nodeType":"YulExpressionStatement","src":"2705:47:16"},{"nodeType":"YulAssignment","src":"2761:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:16"},"nodeType":"YulFunctionCall","src":"2769:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:16","type":""}],"src":"2541:313:16"},{"body":{"nodeType":"YulBlock","src":"2905:32:16","statements":[{"nodeType":"YulAssignment","src":"2915:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:16","type":""}],"src":"2860:77:16"},{"body":{"nodeType":"YulBlock","src":"2986:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:12:16"},"nodeType":"YulExpressionStatement","src":"3045:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:16"},"nodeType":"YulFunctionCall","src":"3016:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:16"},"nodeType":"YulFunctionCall","src":"3006:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:16"},"nodeType":"YulFunctionCall","src":"2999:43:16"},"nodeType":"YulIf","src":"2996:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:16","type":""}],"src":"2943:122:16"},{"body":{"nodeType":"YulBlock","src":"3123:87:16","statements":[{"nodeType":"YulAssignment","src":"3133:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:16"},"nodeType":"YulFunctionCall","src":"3142:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:16"},"nodeType":"YulFunctionCall","src":"3171:33:16"},"nodeType":"YulExpressionStatement","src":"3171:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:16","type":""}],"src":"3071:139:16"},{"body":{"nodeType":"YulBlock","src":"3282:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:16"},"nodeType":"YulFunctionCall","src":"3330:79:16"},"nodeType":"YulExpressionStatement","src":"3330:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:16"},"nodeType":"YulFunctionCall","src":"3295:32:16"},"nodeType":"YulIf","src":"3292:119:16"},{"nodeType":"YulBlock","src":"3421:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:16"},"nodeType":"YulFunctionCall","src":"3496:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:16"},"nodeType":"YulFunctionCall","src":"3475:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:16","type":""}],"src":"3216:329:16"},{"body":{"nodeType":"YulBlock","src":"3596:81:16","statements":[{"nodeType":"YulAssignment","src":"3606:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:16"},"nodeType":"YulFunctionCall","src":"3617:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:16","type":""}],"src":"3551:126:16"},{"body":{"nodeType":"YulBlock","src":"3728:51:16","statements":[{"nodeType":"YulAssignment","src":"3738:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:16"},"nodeType":"YulFunctionCall","src":"3749:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:16","type":""}],"src":"3683:96:16"},{"body":{"nodeType":"YulBlock","src":"3850:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:16"},"nodeType":"YulFunctionCall","src":"3872:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:16"},"nodeType":"YulFunctionCall","src":"3860:37:16"},"nodeType":"YulExpressionStatement","src":"3860:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:16","type":""}],"src":"3785:118:16"},{"body":{"nodeType":"YulBlock","src":"4007:124:16","statements":[{"nodeType":"YulAssignment","src":"4017:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:16"},"nodeType":"YulFunctionCall","src":"4025:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:16"},"nodeType":"YulFunctionCall","src":"4106:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:16"},"nodeType":"YulFunctionCall","src":"4053:71:16"},"nodeType":"YulExpressionStatement","src":"4053:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:16","type":""}],"src":"3909:222:16"},{"body":{"nodeType":"YulBlock","src":"4180:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:16"},"nodeType":"YulFunctionCall","src":"4239:12:16"},"nodeType":"YulExpressionStatement","src":"4239:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:16"},"nodeType":"YulFunctionCall","src":"4210:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:16"},"nodeType":"YulFunctionCall","src":"4200:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:16"},"nodeType":"YulFunctionCall","src":"4193:43:16"},"nodeType":"YulIf","src":"4190:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:16","type":""}],"src":"4137:122:16"},{"body":{"nodeType":"YulBlock","src":"4317:87:16","statements":[{"nodeType":"YulAssignment","src":"4327:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:16"},"nodeType":"YulFunctionCall","src":"4336:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:16"},"nodeType":"YulFunctionCall","src":"4365:33:16"},"nodeType":"YulExpressionStatement","src":"4365:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:16","type":""}],"src":"4265:139:16"},{"body":{"nodeType":"YulBlock","src":"4493:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:16"},"nodeType":"YulFunctionCall","src":"4541:79:16"},"nodeType":"YulExpressionStatement","src":"4541:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:16"},"nodeType":"YulFunctionCall","src":"4510:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:16"},"nodeType":"YulFunctionCall","src":"4506:32:16"},"nodeType":"YulIf","src":"4503:119:16"},{"nodeType":"YulBlock","src":"4632:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:16"},"nodeType":"YulFunctionCall","src":"4707:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:16"},"nodeType":"YulFunctionCall","src":"4686:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:16"}]}]},{"nodeType":"YulBlock","src":"4759:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:16"},"nodeType":"YulFunctionCall","src":"4835:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:16"},"nodeType":"YulFunctionCall","src":"4814:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:16","type":""}],"src":"4410:474:16"},{"body":{"nodeType":"YulBlock","src":"4934:32:16","statements":[{"nodeType":"YulAssignment","src":"4944:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4955:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4944:7:16"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4916:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4926:7:16","type":""}],"src":"4890:76:16"},{"body":{"nodeType":"YulBlock","src":"5035:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5052:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5074:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5057:16:16"},"nodeType":"YulFunctionCall","src":"5057:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5045:6:16"},"nodeType":"YulFunctionCall","src":"5045:36:16"},"nodeType":"YulExpressionStatement","src":"5045:36:16"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5023:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5030:3:16","type":""}],"src":"4972:115:16"},{"body":{"nodeType":"YulBlock","src":"5189:122:16","statements":[{"nodeType":"YulAssignment","src":"5199:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5211:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5222:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5207:3:16"},"nodeType":"YulFunctionCall","src":"5207:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5199:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5277:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5301:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:16"},"nodeType":"YulFunctionCall","src":"5286:17:16"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"5235:41:16"},"nodeType":"YulFunctionCall","src":"5235:69:16"},"nodeType":"YulExpressionStatement","src":"5235:69:16"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5161:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5173:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5184:4:16","type":""}],"src":"5093:218:16"},{"body":{"nodeType":"YulBlock","src":"5417:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"5463:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5465:77:16"},"nodeType":"YulFunctionCall","src":"5465:79:16"},"nodeType":"YulExpressionStatement","src":"5465:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5438:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5447:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5434:3:16"},"nodeType":"YulFunctionCall","src":"5434:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5459:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5430:3:16"},"nodeType":"YulFunctionCall","src":"5430:32:16"},"nodeType":"YulIf","src":"5427:119:16"},{"nodeType":"YulBlock","src":"5556:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5571:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5585:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5575:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5600:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5635:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5646:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5631:3:16"},"nodeType":"YulFunctionCall","src":"5631:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5655:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5610:20:16"},"nodeType":"YulFunctionCall","src":"5610:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5600:6:16"}]}]},{"nodeType":"YulBlock","src":"5683:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5698:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5712:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5702:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5728:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5763:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5774:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:16"},"nodeType":"YulFunctionCall","src":"5759:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5783:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5738:20:16"},"nodeType":"YulFunctionCall","src":"5738:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5728:6:16"}]}]},{"nodeType":"YulBlock","src":"5811:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5826:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5840:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5830:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5856:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5902:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:16"},"nodeType":"YulFunctionCall","src":"5887:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5866:20:16"},"nodeType":"YulFunctionCall","src":"5866:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5856:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5371:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5382:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5394:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5402:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5410:6:16","type":""}],"src":"5317:619:16"},{"body":{"nodeType":"YulBlock","src":"6042:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"6088:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6090:77:16"},"nodeType":"YulFunctionCall","src":"6090:79:16"},"nodeType":"YulExpressionStatement","src":"6090:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6063:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6072:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:16"},"nodeType":"YulFunctionCall","src":"6059:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6084:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6055:3:16"},"nodeType":"YulFunctionCall","src":"6055:32:16"},"nodeType":"YulIf","src":"6052:119:16"},{"nodeType":"YulBlock","src":"6181:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6196:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6210:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6200:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6225:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6260:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6271:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6256:3:16"},"nodeType":"YulFunctionCall","src":"6256:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6280:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6235:20:16"},"nodeType":"YulFunctionCall","src":"6235:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6225:6:16"}]}]},{"nodeType":"YulBlock","src":"6308:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6323:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6337:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6327:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6353:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6388:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6399:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:16"},"nodeType":"YulFunctionCall","src":"6384:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6408:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6363:20:16"},"nodeType":"YulFunctionCall","src":"6363:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6353:6:16"}]}]},{"nodeType":"YulBlock","src":"6436:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6451:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6465:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6455:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6481:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6516:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6527:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:16"},"nodeType":"YulFunctionCall","src":"6512:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6536:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6491:20:16"},"nodeType":"YulFunctionCall","src":"6491:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6481:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5996:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6007:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6019:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6027:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6035:6:16","type":""}],"src":"5942:619:16"},{"body":{"nodeType":"YulBlock","src":"6633:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"6679:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6681:77:16"},"nodeType":"YulFunctionCall","src":"6681:79:16"},"nodeType":"YulExpressionStatement","src":"6681:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6654:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6663:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6650:3:16"},"nodeType":"YulFunctionCall","src":"6650:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6675:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6646:3:16"},"nodeType":"YulFunctionCall","src":"6646:32:16"},"nodeType":"YulIf","src":"6643:119:16"},{"nodeType":"YulBlock","src":"6772:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6787:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6801:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6791:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6816:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6851:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6862:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6847:3:16"},"nodeType":"YulFunctionCall","src":"6847:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6871:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6826:20:16"},"nodeType":"YulFunctionCall","src":"6826:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6816:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6603:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6614:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6626:6:16","type":""}],"src":"6567:329:16"},{"body":{"nodeType":"YulBlock","src":"6967:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6984:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6989:17:16"},"nodeType":"YulFunctionCall","src":"6989:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6977:6:16"},"nodeType":"YulFunctionCall","src":"6977:37:16"},"nodeType":"YulExpressionStatement","src":"6977:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6955:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6962:3:16","type":""}],"src":"6902:118:16"},{"body":{"nodeType":"YulBlock","src":"7124:124:16","statements":[{"nodeType":"YulAssignment","src":"7134:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7146:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7157:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7142:3:16"},"nodeType":"YulFunctionCall","src":"7142:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7134:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7214:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7227:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7238:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7223:3:16"},"nodeType":"YulFunctionCall","src":"7223:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7170:43:16"},"nodeType":"YulFunctionCall","src":"7170:71:16"},"nodeType":"YulExpressionStatement","src":"7170:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7096:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7108:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7119:4:16","type":""}],"src":"7026:222:16"},{"body":{"nodeType":"YulBlock","src":"7294:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"7348:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7357:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7360:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7350:6:16"},"nodeType":"YulFunctionCall","src":"7350:12:16"},"nodeType":"YulExpressionStatement","src":"7350:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7317:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7339:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7324:14:16"},"nodeType":"YulFunctionCall","src":"7324:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7314:2:16"},"nodeType":"YulFunctionCall","src":"7314:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7307:6:16"},"nodeType":"YulFunctionCall","src":"7307:40:16"},"nodeType":"YulIf","src":"7304:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7287:5:16","type":""}],"src":"7254:116:16"},{"body":{"nodeType":"YulBlock","src":"7425:84:16","statements":[{"nodeType":"YulAssignment","src":"7435:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7457:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7444:12:16"},"nodeType":"YulFunctionCall","src":"7444:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7435:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7497:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"7473:23:16"},"nodeType":"YulFunctionCall","src":"7473:30:16"},"nodeType":"YulExpressionStatement","src":"7473:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7403:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7411:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7419:5:16","type":""}],"src":"7376:133:16"},{"body":{"nodeType":"YulBlock","src":"7595:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"7641:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7643:77:16"},"nodeType":"YulFunctionCall","src":"7643:79:16"},"nodeType":"YulExpressionStatement","src":"7643:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7616:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7625:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7612:3:16"},"nodeType":"YulFunctionCall","src":"7612:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7637:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7608:3:16"},"nodeType":"YulFunctionCall","src":"7608:32:16"},"nodeType":"YulIf","src":"7605:119:16"},{"nodeType":"YulBlock","src":"7734:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7749:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7763:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7753:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7778:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7813:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7824:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7809:3:16"},"nodeType":"YulFunctionCall","src":"7809:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7833:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7788:20:16"},"nodeType":"YulFunctionCall","src":"7788:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7778:6:16"}]}]},{"nodeType":"YulBlock","src":"7861:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7876:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7890:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7880:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7906:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7938:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7949:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7934:3:16"},"nodeType":"YulFunctionCall","src":"7934:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7958:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"7916:17:16"},"nodeType":"YulFunctionCall","src":"7916:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7906:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7557:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7568:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7580:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7588:6:16","type":""}],"src":"7515:468:16"},{"body":{"nodeType":"YulBlock","src":"8078:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8095:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8098:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8088:6:16"},"nodeType":"YulFunctionCall","src":"8088:12:16"},"nodeType":"YulExpressionStatement","src":"8088:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7989:117:16"},{"body":{"nodeType":"YulBlock","src":"8201:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8218:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8221:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8211:6:16"},"nodeType":"YulFunctionCall","src":"8211:12:16"},"nodeType":"YulExpressionStatement","src":"8211:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8112:117:16"},{"body":{"nodeType":"YulBlock","src":"8263:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8280:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8283:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:16"},"nodeType":"YulFunctionCall","src":"8273:88:16"},"nodeType":"YulExpressionStatement","src":"8273:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8377:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8380:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8370:6:16"},"nodeType":"YulFunctionCall","src":"8370:15:16"},"nodeType":"YulExpressionStatement","src":"8370:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8401:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8404:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8394:6:16"},"nodeType":"YulFunctionCall","src":"8394:15:16"},"nodeType":"YulExpressionStatement","src":"8394:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8235:180:16"},{"body":{"nodeType":"YulBlock","src":"8464:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8474:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8496:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8526:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8504:21:16"},"nodeType":"YulFunctionCall","src":"8504:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8492:3:16"},"nodeType":"YulFunctionCall","src":"8492:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8478:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8643:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8645:16:16"},"nodeType":"YulFunctionCall","src":"8645:18:16"},"nodeType":"YulExpressionStatement","src":"8645:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8586:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"8598:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8583:2:16"},"nodeType":"YulFunctionCall","src":"8583:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8622:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8634:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8619:2:16"},"nodeType":"YulFunctionCall","src":"8619:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8580:2:16"},"nodeType":"YulFunctionCall","src":"8580:62:16"},"nodeType":"YulIf","src":"8577:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8681:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8685:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8674:6:16"},"nodeType":"YulFunctionCall","src":"8674:22:16"},"nodeType":"YulExpressionStatement","src":"8674:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8450:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"8458:4:16","type":""}],"src":"8421:281:16"},{"body":{"nodeType":"YulBlock","src":"8749:88:16","statements":[{"nodeType":"YulAssignment","src":"8759:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8769:18:16"},"nodeType":"YulFunctionCall","src":"8769:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8759:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8818:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"8826:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8798:19:16"},"nodeType":"YulFunctionCall","src":"8798:33:16"},"nodeType":"YulExpressionStatement","src":"8798:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8733:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8742:6:16","type":""}],"src":"8708:129:16"},{"body":{"nodeType":"YulBlock","src":"8909:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"9014:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9016:16:16"},"nodeType":"YulFunctionCall","src":"9016:18:16"},"nodeType":"YulExpressionStatement","src":"9016:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8986:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8994:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8983:2:16"},"nodeType":"YulFunctionCall","src":"8983:30:16"},"nodeType":"YulIf","src":"8980:56:16"},{"nodeType":"YulAssignment","src":"9046:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9076:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9054:21:16"},"nodeType":"YulFunctionCall","src":"9054:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9046:4:16"}]},{"nodeType":"YulAssignment","src":"9120:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9132:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"9138:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9128:3:16"},"nodeType":"YulFunctionCall","src":"9128:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9120:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8893:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8904:4:16","type":""}],"src":"8843:307:16"},{"body":{"nodeType":"YulBlock","src":"9220:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9243:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"9248:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9253:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9230:12:16"},"nodeType":"YulFunctionCall","src":"9230:30:16"},"nodeType":"YulExpressionStatement","src":"9230:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9280:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9285:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:16"},"nodeType":"YulFunctionCall","src":"9276:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"9294:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9269:6:16"},"nodeType":"YulFunctionCall","src":"9269:27:16"},"nodeType":"YulExpressionStatement","src":"9269:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9202:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9207:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"9212:6:16","type":""}],"src":"9156:146:16"},{"body":{"nodeType":"YulBlock","src":"9391:340:16","statements":[{"nodeType":"YulAssignment","src":"9401:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9467:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9426:40:16"},"nodeType":"YulFunctionCall","src":"9426:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9410:15:16"},"nodeType":"YulFunctionCall","src":"9410:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9401:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9491:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"9498:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9484:6:16"},"nodeType":"YulFunctionCall","src":"9484:21:16"},"nodeType":"YulExpressionStatement","src":"9484:21:16"},{"nodeType":"YulVariableDeclaration","src":"9514:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9529:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"9536:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9525:3:16"},"nodeType":"YulFunctionCall","src":"9525:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9518:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9579:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9581:77:16"},"nodeType":"YulFunctionCall","src":"9581:79:16"},"nodeType":"YulExpressionStatement","src":"9581:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9560:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9565:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9556:3:16"},"nodeType":"YulFunctionCall","src":"9556:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"9574:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9553:2:16"},"nodeType":"YulFunctionCall","src":"9553:25:16"},"nodeType":"YulIf","src":"9550:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9708:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"9713:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9718:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9671:36:16"},"nodeType":"YulFunctionCall","src":"9671:54:16"},"nodeType":"YulExpressionStatement","src":"9671:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9364:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"9369:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9377:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9385:5:16","type":""}],"src":"9308:423:16"},{"body":{"nodeType":"YulBlock","src":"9811:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"9860:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9862:77:16"},"nodeType":"YulFunctionCall","src":"9862:79:16"},"nodeType":"YulExpressionStatement","src":"9862:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9839:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9847:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9835:3:16"},"nodeType":"YulFunctionCall","src":"9835:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"9854:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9831:3:16"},"nodeType":"YulFunctionCall","src":"9831:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9824:6:16"},"nodeType":"YulFunctionCall","src":"9824:35:16"},"nodeType":"YulIf","src":"9821:122:16"},{"nodeType":"YulVariableDeclaration","src":"9952:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9979:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9966:12:16"},"nodeType":"YulFunctionCall","src":"9966:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9956:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9995:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10055:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10063:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:16"},"nodeType":"YulFunctionCall","src":"10051:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"10070:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"10078:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10004:46:16"},"nodeType":"YulFunctionCall","src":"10004:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9995:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9789:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9797:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9805:5:16","type":""}],"src":"9750:338:16"},{"body":{"nodeType":"YulBlock","src":"10220:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"10267:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10269:77:16"},"nodeType":"YulFunctionCall","src":"10269:79:16"},"nodeType":"YulExpressionStatement","src":"10269:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10241:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10250:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10237:3:16"},"nodeType":"YulFunctionCall","src":"10237:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10262:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10233:3:16"},"nodeType":"YulFunctionCall","src":"10233:33:16"},"nodeType":"YulIf","src":"10230:120:16"},{"nodeType":"YulBlock","src":"10360:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10375:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10389:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10379:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10404:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10439:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10450:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10435:3:16"},"nodeType":"YulFunctionCall","src":"10435:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10459:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10414:20:16"},"nodeType":"YulFunctionCall","src":"10414:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10404:6:16"}]}]},{"nodeType":"YulBlock","src":"10487:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10502:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10516:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10506:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10532:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10567:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10578:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10563:3:16"},"nodeType":"YulFunctionCall","src":"10563:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10587:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10542:20:16"},"nodeType":"YulFunctionCall","src":"10542:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10532:6:16"}]}]},{"nodeType":"YulBlock","src":"10615:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10630:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10644:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10634:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10660:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10695:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10706:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10691:3:16"},"nodeType":"YulFunctionCall","src":"10691:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10715:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10670:20:16"},"nodeType":"YulFunctionCall","src":"10670:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10660:6:16"}]}]},{"nodeType":"YulBlock","src":"10743:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10758:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10789:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10800:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10785:3:16"},"nodeType":"YulFunctionCall","src":"10785:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10772:12:16"},"nodeType":"YulFunctionCall","src":"10772:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10762:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10851:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10853:77:16"},"nodeType":"YulFunctionCall","src":"10853:79:16"},"nodeType":"YulExpressionStatement","src":"10853:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10823:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10831:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10820:2:16"},"nodeType":"YulFunctionCall","src":"10820:30:16"},"nodeType":"YulIf","src":"10817:117:16"},{"nodeType":"YulAssignment","src":"10948:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10992:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"11003:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10988:3:16"},"nodeType":"YulFunctionCall","src":"10988:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11012:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10958:29:16"},"nodeType":"YulFunctionCall","src":"10958:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10948:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10166:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10177:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10189:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10197:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10205:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10213:6:16","type":""}],"src":"10094:943:16"},{"body":{"nodeType":"YulBlock","src":"11075:28:16","statements":[{"nodeType":"YulAssignment","src":"11085:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"11092:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11085:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11061:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11071:3:16","type":""}],"src":"11043:60:16"},{"body":{"nodeType":"YulBlock","src":"11169:82:16","statements":[{"nodeType":"YulAssignment","src":"11179:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11237:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11219:17:16"},"nodeType":"YulFunctionCall","src":"11219:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"11210:8:16"},"nodeType":"YulFunctionCall","src":"11210:34:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11192:17:16"},"nodeType":"YulFunctionCall","src":"11192:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11179:9:16"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11149:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11159:9:16","type":""}],"src":"11109:142:16"},{"body":{"nodeType":"YulBlock","src":"11317:66:16","statements":[{"nodeType":"YulAssignment","src":"11327:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11371:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"11340:30:16"},"nodeType":"YulFunctionCall","src":"11340:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11327:9:16"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11297:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11307:9:16","type":""}],"src":"11257:126:16"},{"body":{"nodeType":"YulBlock","src":"11472:66:16","statements":[{"nodeType":"YulAssignment","src":"11482:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11526:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11495:30:16"},"nodeType":"YulFunctionCall","src":"11495:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11482:9:16"}]}]},"name":"convert_t_contract$_GameCollection_$3593_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11452:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11462:9:16","type":""}],"src":"11389:149:16"},{"body":{"nodeType":"YulBlock","src":"11632:89:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11649:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11708:5:16"}],"functionName":{"name":"convert_t_contract$_GameCollection_$3593_to_t_address","nodeType":"YulIdentifier","src":"11654:53:16"},"nodeType":"YulFunctionCall","src":"11654:60:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11642:6:16"},"nodeType":"YulFunctionCall","src":"11642:73:16"},"nodeType":"YulExpressionStatement","src":"11642:73:16"}]},"name":"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11620:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11627:3:16","type":""}],"src":"11544:177:16"},{"body":{"nodeType":"YulBlock","src":"11848:147:16","statements":[{"nodeType":"YulAssignment","src":"11858:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11870:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11881:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11866:3:16"},"nodeType":"YulFunctionCall","src":"11866:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11858:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11961:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11974:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11985:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11970:3:16"},"nodeType":"YulFunctionCall","src":"11970:17:16"}],"functionName":{"name":"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11894:66:16"},"nodeType":"YulFunctionCall","src":"11894:94:16"},"nodeType":"YulExpressionStatement","src":"11894:94:16"}]},"name":"abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11820:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11832:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11843:4:16","type":""}],"src":"11727:268:16"},{"body":{"nodeType":"YulBlock","src":"12084:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"12130:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12132:77:16"},"nodeType":"YulFunctionCall","src":"12132:79:16"},"nodeType":"YulExpressionStatement","src":"12132:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12105:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12114:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12101:3:16"},"nodeType":"YulFunctionCall","src":"12101:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12126:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12097:3:16"},"nodeType":"YulFunctionCall","src":"12097:32:16"},"nodeType":"YulIf","src":"12094:119:16"},{"nodeType":"YulBlock","src":"12223:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12238:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12252:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12242:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12267:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12302:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12313:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12298:3:16"},"nodeType":"YulFunctionCall","src":"12298:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12322:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12277:20:16"},"nodeType":"YulFunctionCall","src":"12277:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12267:6:16"}]}]},{"nodeType":"YulBlock","src":"12350:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12365:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12379:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12369:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12395:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12430:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12441:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12426:3:16"},"nodeType":"YulFunctionCall","src":"12426:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12450:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12405:20:16"},"nodeType":"YulFunctionCall","src":"12405:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12395:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12046:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12057:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12069:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12077:6:16","type":""}],"src":"12001:474:16"},{"body":{"nodeType":"YulBlock","src":"12509:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12529:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12519:6:16"},"nodeType":"YulFunctionCall","src":"12519:88:16"},"nodeType":"YulExpressionStatement","src":"12519:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12623:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12626:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12616:6:16"},"nodeType":"YulFunctionCall","src":"12616:15:16"},"nodeType":"YulExpressionStatement","src":"12616:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12647:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12650:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12640:6:16"},"nodeType":"YulFunctionCall","src":"12640:15:16"},"nodeType":"YulExpressionStatement","src":"12640:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12481:180:16"},{"body":{"nodeType":"YulBlock","src":"12718:269:16","statements":[{"nodeType":"YulAssignment","src":"12728:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12742:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"12748:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12738:3:16"},"nodeType":"YulFunctionCall","src":"12738:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12728:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"12759:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12789:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"12795:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12785:3:16"},"nodeType":"YulFunctionCall","src":"12785:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12763:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12836:51:16","statements":[{"nodeType":"YulAssignment","src":"12850:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12864:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12872:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12860:3:16"},"nodeType":"YulFunctionCall","src":"12860:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12850:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12816:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12809:6:16"},"nodeType":"YulFunctionCall","src":"12809:26:16"},"nodeType":"YulIf","src":"12806:81:16"},{"body":{"nodeType":"YulBlock","src":"12939:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12953:16:16"},"nodeType":"YulFunctionCall","src":"12953:18:16"},"nodeType":"YulExpressionStatement","src":"12953:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12903:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12926:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12934:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12923:2:16"},"nodeType":"YulFunctionCall","src":"12923:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12900:2:16"},"nodeType":"YulFunctionCall","src":"12900:38:16"},"nodeType":"YulIf","src":"12897:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12702:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12711:6:16","type":""}],"src":"12667:320:16"},{"body":{"nodeType":"YulBlock","src":"13053:77:16","statements":[{"nodeType":"YulAssignment","src":"13063:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13078:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13072:5:16"},"nodeType":"YulFunctionCall","src":"13072:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13063:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13118:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"13094:23:16"},"nodeType":"YulFunctionCall","src":"13094:30:16"},"nodeType":"YulExpressionStatement","src":"13094:30:16"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13031:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"13039:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13047:5:16","type":""}],"src":"12993:137:16"},{"body":{"nodeType":"YulBlock","src":"13210:271:16","statements":[{"body":{"nodeType":"YulBlock","src":"13256:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13258:77:16"},"nodeType":"YulFunctionCall","src":"13258:79:16"},"nodeType":"YulExpressionStatement","src":"13258:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13231:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13240:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13227:3:16"},"nodeType":"YulFunctionCall","src":"13227:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"13252:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13223:3:16"},"nodeType":"YulFunctionCall","src":"13223:32:16"},"nodeType":"YulIf","src":"13220:119:16"},{"nodeType":"YulBlock","src":"13349:125:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13364:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13378:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13368:6:16","type":""}]},{"nodeType":"YulAssignment","src":"13393:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13447:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13432:3:16"},"nodeType":"YulFunctionCall","src":"13432:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13456:7:16"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"13403:28:16"},"nodeType":"YulFunctionCall","src":"13403:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13393:6:16"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13180:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13191:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13203:6:16","type":""}],"src":"13136:345:16"},{"body":{"nodeType":"YulBlock","src":"13515:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13532:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13535:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13525:6:16"},"nodeType":"YulFunctionCall","src":"13525:88:16"},"nodeType":"YulExpressionStatement","src":"13525:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13629:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13632:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13622:6:16"},"nodeType":"YulFunctionCall","src":"13622:15:16"},"nodeType":"YulExpressionStatement","src":"13622:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13653:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13656:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13646:6:16"},"nodeType":"YulFunctionCall","src":"13646:15:16"},"nodeType":"YulExpressionStatement","src":"13646:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13487:180:16"},{"body":{"nodeType":"YulBlock","src":"13715:189:16","statements":[{"nodeType":"YulAssignment","src":"13725:32:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13751:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"13734:16:16"},"nodeType":"YulFunctionCall","src":"13734:23:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13725:5:16"}]},{"body":{"nodeType":"YulBlock","src":"13847:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13849:16:16"},"nodeType":"YulFunctionCall","src":"13849:18:16"},"nodeType":"YulExpressionStatement","src":"13849:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13772:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"13779:66:16","type":"","value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13769:2:16"},"nodeType":"YulFunctionCall","src":"13769:77:16"},"nodeType":"YulIf","src":"13766:103:16"},{"nodeType":"YulAssignment","src":"13878:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13889:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"13896:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13885:3:16"},"nodeType":"YulFunctionCall","src":"13885:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13878:3:16"}]}]},"name":"increment_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13701:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13711:3:16","type":""}],"src":"13673:231:16"},{"body":{"nodeType":"YulBlock","src":"14016:121:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14038:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14046:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14034:3:16"},"nodeType":"YulFunctionCall","src":"14034:14:16"},{"hexValue":"436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e","kind":"string","nodeType":"YulLiteral","src":"14050:34:16","type":"","value":"CardOwnership: collection does n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:16"},"nodeType":"YulFunctionCall","src":"14027:58:16"},"nodeType":"YulExpressionStatement","src":"14027:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14106:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14114:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:16"},"nodeType":"YulFunctionCall","src":"14102:15:16"},{"hexValue":"6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"14119:10:16","type":"","value":"ot exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14095:6:16"},"nodeType":"YulFunctionCall","src":"14095:35:16"},"nodeType":"YulExpressionStatement","src":"14095:35:16"}]},"name":"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14008:6:16","type":""}],"src":"13910:227:16"},{"body":{"nodeType":"YulBlock","src":"14289:220:16","statements":[{"nodeType":"YulAssignment","src":"14299:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14365:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14370:2:16","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14306:58:16"},"nodeType":"YulFunctionCall","src":"14306:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14299:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:16"}],"functionName":{"name":"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","nodeType":"YulIdentifier","src":"14382:88:16"},"nodeType":"YulFunctionCall","src":"14382:93:16"},"nodeType":"YulExpressionStatement","src":"14382:93:16"},{"nodeType":"YulAssignment","src":"14484:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14495:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14500:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:16"},"nodeType":"YulFunctionCall","src":"14491:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14484:3:16"}]}]},"name":"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14277:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14285:3:16","type":""}],"src":"14143:366:16"},{"body":{"nodeType":"YulBlock","src":"14686:248:16","statements":[{"nodeType":"YulAssignment","src":"14696:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14708:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14719:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14704:3:16"},"nodeType":"YulFunctionCall","src":"14704:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14696:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14743:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14754:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14739:3:16"},"nodeType":"YulFunctionCall","src":"14739:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14762:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14768:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14758:3:16"},"nodeType":"YulFunctionCall","src":"14758:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14732:6:16"},"nodeType":"YulFunctionCall","src":"14732:47:16"},"nodeType":"YulExpressionStatement","src":"14732:47:16"},{"nodeType":"YulAssignment","src":"14788:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14922:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14796:124:16"},"nodeType":"YulFunctionCall","src":"14796:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14788:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14666:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14681:4:16","type":""}],"src":"14515:419:16"},{"body":{"nodeType":"YulBlock","src":"15066:206:16","statements":[{"nodeType":"YulAssignment","src":"15076:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15099:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15084:3:16"},"nodeType":"YulFunctionCall","src":"15084:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15076:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15156:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15169:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15180:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15165:3:16"},"nodeType":"YulFunctionCall","src":"15165:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15112:43:16"},"nodeType":"YulFunctionCall","src":"15112:71:16"},"nodeType":"YulExpressionStatement","src":"15112:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15237:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15250:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15261:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15246:3:16"},"nodeType":"YulFunctionCall","src":"15246:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15193:43:16"},"nodeType":"YulFunctionCall","src":"15193:72:16"},"nodeType":"YulExpressionStatement","src":"15193:72:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15030:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15042:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15050:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15061:4:16","type":""}],"src":"14940:332:16"},{"body":{"nodeType":"YulBlock","src":"15384:129:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15406:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15414:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15402:3:16"},"nodeType":"YulFunctionCall","src":"15402:14:16"},{"hexValue":"436172644f776e6572736869703a207472616e73666572206f6620746f6b656e","kind":"string","nodeType":"YulLiteral","src":"15418:34:16","type":"","value":"CardOwnership: transfer of token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15395:6:16"},"nodeType":"YulFunctionCall","src":"15395:58:16"},"nodeType":"YulExpressionStatement","src":"15395:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15474:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15482:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15470:3:16"},"nodeType":"YulFunctionCall","src":"15470:15:16"},{"hexValue":"2074686174206973206e6f74206f776e","kind":"string","nodeType":"YulLiteral","src":"15487:18:16","type":"","value":" that is not own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15463:6:16"},"nodeType":"YulFunctionCall","src":"15463:43:16"},"nodeType":"YulExpressionStatement","src":"15463:43:16"}]},"name":"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15376:6:16","type":""}],"src":"15278:235:16"},{"body":{"nodeType":"YulBlock","src":"15665:220:16","statements":[{"nodeType":"YulAssignment","src":"15675:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15741:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15746:2:16","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15682:58:16"},"nodeType":"YulFunctionCall","src":"15682:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15675:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15847:3:16"}],"functionName":{"name":"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","nodeType":"YulIdentifier","src":"15758:88:16"},"nodeType":"YulFunctionCall","src":"15758:93:16"},"nodeType":"YulExpressionStatement","src":"15758:93:16"},{"nodeType":"YulAssignment","src":"15860:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15871:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15876:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15867:3:16"},"nodeType":"YulFunctionCall","src":"15867:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15860:3:16"}]}]},"name":"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15653:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15661:3:16","type":""}],"src":"15519:366:16"},{"body":{"nodeType":"YulBlock","src":"16062:248:16","statements":[{"nodeType":"YulAssignment","src":"16072:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16084:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16095:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16080:3:16"},"nodeType":"YulFunctionCall","src":"16080:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16072:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16119:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16130:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16115:3:16"},"nodeType":"YulFunctionCall","src":"16115:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16138:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16144:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16134:3:16"},"nodeType":"YulFunctionCall","src":"16134:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16108:6:16"},"nodeType":"YulFunctionCall","src":"16108:47:16"},"nodeType":"YulExpressionStatement","src":"16108:47:16"},{"nodeType":"YulAssignment","src":"16164:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16298:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16172:124:16"},"nodeType":"YulFunctionCall","src":"16172:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16164:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16042:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16057:4:16","type":""}],"src":"15891:419:16"},{"body":{"nodeType":"YulBlock","src":"16422:124:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16444:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16452:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16440:3:16"},"nodeType":"YulFunctionCall","src":"16440:14:16"},{"hexValue":"436172644f776e6572736869703a207472616e7366657220746f20746865207a","kind":"string","nodeType":"YulLiteral","src":"16456:34:16","type":"","value":"CardOwnership: transfer to the z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16433:6:16"},"nodeType":"YulFunctionCall","src":"16433:58:16"},"nodeType":"YulExpressionStatement","src":"16433:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16512:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16520:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16508:3:16"},"nodeType":"YulFunctionCall","src":"16508:15:16"},{"hexValue":"65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16525:13:16","type":"","value":"ero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16501:6:16"},"nodeType":"YulFunctionCall","src":"16501:38:16"},"nodeType":"YulExpressionStatement","src":"16501:38:16"}]},"name":"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16414:6:16","type":""}],"src":"16316:230:16"},{"body":{"nodeType":"YulBlock","src":"16698:220:16","statements":[{"nodeType":"YulAssignment","src":"16708:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16774:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16779:2:16","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16715:58:16"},"nodeType":"YulFunctionCall","src":"16715:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16708:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16880:3:16"}],"functionName":{"name":"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","nodeType":"YulIdentifier","src":"16791:88:16"},"nodeType":"YulFunctionCall","src":"16791:93:16"},"nodeType":"YulExpressionStatement","src":"16791:93:16"},{"nodeType":"YulAssignment","src":"16893:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16904:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16909:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16900:3:16"},"nodeType":"YulFunctionCall","src":"16900:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16893:3:16"}]}]},"name":"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16686:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16694:3:16","type":""}],"src":"16552:366:16"},{"body":{"nodeType":"YulBlock","src":"17095:248:16","statements":[{"nodeType":"YulAssignment","src":"17105:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17117:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17128:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17113:3:16"},"nodeType":"YulFunctionCall","src":"17113:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17105:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17152:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17163:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17148:3:16"},"nodeType":"YulFunctionCall","src":"17148:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17171:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17177:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17167:3:16"},"nodeType":"YulFunctionCall","src":"17167:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17141:6:16"},"nodeType":"YulFunctionCall","src":"17141:47:16"},"nodeType":"YulExpressionStatement","src":"17141:47:16"},{"nodeType":"YulAssignment","src":"17197:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17331:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17205:124:16"},"nodeType":"YulFunctionCall","src":"17205:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17197:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17075:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17090:4:16","type":""}],"src":"16924:419:16"},{"body":{"nodeType":"YulBlock","src":"17455:115:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17477:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17485:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17473:3:16"},"nodeType":"YulFunctionCall","src":"17473:14:16"},{"hexValue":"436172644f776e6572736869703a206361726420646f6573206e6f7420657869","kind":"string","nodeType":"YulLiteral","src":"17489:34:16","type":"","value":"CardOwnership: card does not exi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17466:6:16"},"nodeType":"YulFunctionCall","src":"17466:58:16"},"nodeType":"YulExpressionStatement","src":"17466:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17553:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17541:3:16"},"nodeType":"YulFunctionCall","src":"17541:15:16"},{"hexValue":"7374","kind":"string","nodeType":"YulLiteral","src":"17558:4:16","type":"","value":"st"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17534:6:16"},"nodeType":"YulFunctionCall","src":"17534:29:16"},"nodeType":"YulExpressionStatement","src":"17534:29:16"}]},"name":"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17447:6:16","type":""}],"src":"17349:221:16"},{"body":{"nodeType":"YulBlock","src":"17722:220:16","statements":[{"nodeType":"YulAssignment","src":"17732:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17798:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17803:2:16","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17739:58:16"},"nodeType":"YulFunctionCall","src":"17739:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17732:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17904:3:16"}],"functionName":{"name":"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","nodeType":"YulIdentifier","src":"17815:88:16"},"nodeType":"YulFunctionCall","src":"17815:93:16"},"nodeType":"YulExpressionStatement","src":"17815:93:16"},{"nodeType":"YulAssignment","src":"17917:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17928:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17933:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17924:3:16"},"nodeType":"YulFunctionCall","src":"17924:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17917:3:16"}]}]},"name":"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17710:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17718:3:16","type":""}],"src":"17576:366:16"},{"body":{"nodeType":"YulBlock","src":"18119:248:16","statements":[{"nodeType":"YulAssignment","src":"18129:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18141:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18152:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18137:3:16"},"nodeType":"YulFunctionCall","src":"18137:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18129:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18176:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18187:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18172:3:16"},"nodeType":"YulFunctionCall","src":"18172:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18195:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18201:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18191:3:16"},"nodeType":"YulFunctionCall","src":"18191:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18165:6:16"},"nodeType":"YulFunctionCall","src":"18165:47:16"},"nodeType":"YulExpressionStatement","src":"18165:47:16"},{"nodeType":"YulAssignment","src":"18221:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18355:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18229:124:16"},"nodeType":"YulFunctionCall","src":"18229:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18221:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18099:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18114:4:16","type":""}],"src":"17948:419:16"},{"body":{"nodeType":"YulBlock","src":"18431:51:16","statements":[{"nodeType":"YulAssignment","src":"18441:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18470:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18452:17:16"},"nodeType":"YulFunctionCall","src":"18452:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18441:7:16"}]}]},"name":"cleanup_t_contract$_Card_$2987","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18413:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18423:7:16","type":""}],"src":"18373:109:16"},{"body":{"nodeType":"YulBlock","src":"18544:92:16","statements":[{"body":{"nodeType":"YulBlock","src":"18614:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18623:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18626:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18616:6:16"},"nodeType":"YulFunctionCall","src":"18616:12:16"},"nodeType":"YulExpressionStatement","src":"18616:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18567:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18605:5:16"}],"functionName":{"name":"cleanup_t_contract$_Card_$2987","nodeType":"YulIdentifier","src":"18574:30:16"},"nodeType":"YulFunctionCall","src":"18574:37:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18564:2:16"},"nodeType":"YulFunctionCall","src":"18564:48:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18557:6:16"},"nodeType":"YulFunctionCall","src":"18557:56:16"},"nodeType":"YulIf","src":"18554:76:16"}]},"name":"validator_revert_t_contract$_Card_$2987","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18537:5:16","type":""}],"src":"18488:148:16"},{"body":{"nodeType":"YulBlock","src":"18718:93:16","statements":[{"nodeType":"YulAssignment","src":"18728:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18743:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18737:5:16"},"nodeType":"YulFunctionCall","src":"18737:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18728:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18799:5:16"}],"functionName":{"name":"validator_revert_t_contract$_Card_$2987","nodeType":"YulIdentifier","src":"18759:39:16"},"nodeType":"YulFunctionCall","src":"18759:46:16"},"nodeType":"YulExpressionStatement","src":"18759:46:16"}]},"name":"abi_decode_t_contract$_Card_$2987_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18696:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"18704:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18712:5:16","type":""}],"src":"18642:169:16"},{"body":{"nodeType":"YulBlock","src":"18907:287:16","statements":[{"body":{"nodeType":"YulBlock","src":"18953:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18955:77:16"},"nodeType":"YulFunctionCall","src":"18955:79:16"},"nodeType":"YulExpressionStatement","src":"18955:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18928:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18937:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18924:3:16"},"nodeType":"YulFunctionCall","src":"18924:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"18949:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18920:3:16"},"nodeType":"YulFunctionCall","src":"18920:32:16"},"nodeType":"YulIf","src":"18917:119:16"},{"nodeType":"YulBlock","src":"19046:141:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19061:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"19075:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19065:6:16","type":""}]},{"nodeType":"YulAssignment","src":"19090:87:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19149:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19160:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19145:3:16"},"nodeType":"YulFunctionCall","src":"19145:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19169:7:16"}],"functionName":{"name":"abi_decode_t_contract$_Card_$2987_fromMemory","nodeType":"YulIdentifier","src":"19100:44:16"},"nodeType":"YulFunctionCall","src":"19100:77:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19090:6:16"}]}]}]},"name":"abi_decode_tuple_t_contract$_Card_$2987_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18877:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18888:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18900:6:16","type":""}],"src":"18817:377:16"},{"body":{"nodeType":"YulBlock","src":"19263:80:16","statements":[{"nodeType":"YulAssignment","src":"19273:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19288:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19282:5:16"},"nodeType":"YulFunctionCall","src":"19282:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19273:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19331:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"19304:26:16"},"nodeType":"YulFunctionCall","src":"19304:33:16"},"nodeType":"YulExpressionStatement","src":"19304:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19241:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"19249:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19257:5:16","type":""}],"src":"19200:143:16"},{"body":{"nodeType":"YulBlock","src":"19426:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"19472:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19474:77:16"},"nodeType":"YulFunctionCall","src":"19474:79:16"},"nodeType":"YulExpressionStatement","src":"19474:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19447:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19456:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19443:3:16"},"nodeType":"YulFunctionCall","src":"19443:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"19468:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19439:3:16"},"nodeType":"YulFunctionCall","src":"19439:32:16"},"nodeType":"YulIf","src":"19436:119:16"},{"nodeType":"YulBlock","src":"19565:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19580:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"19594:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19584:6:16","type":""}]},{"nodeType":"YulAssignment","src":"19609:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19655:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19666:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19651:3:16"},"nodeType":"YulFunctionCall","src":"19651:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19675:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"19619:31:16"},"nodeType":"YulFunctionCall","src":"19619:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19609:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19396:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19407:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19419:6:16","type":""}],"src":"19349:351:16"},{"body":{"nodeType":"YulBlock","src":"19749:190:16","statements":[{"nodeType":"YulAssignment","src":"19759:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19786:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19768:17:16"},"nodeType":"YulFunctionCall","src":"19768:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19759:5:16"}]},{"body":{"nodeType":"YulBlock","src":"19882:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19884:16:16"},"nodeType":"YulFunctionCall","src":"19884:18:16"},"nodeType":"YulExpressionStatement","src":"19884:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19807:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"19814:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19804:2:16"},"nodeType":"YulFunctionCall","src":"19804:77:16"},"nodeType":"YulIf","src":"19801:103:16"},{"nodeType":"YulAssignment","src":"19913:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19924:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"19931:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19920:3:16"},"nodeType":"YulFunctionCall","src":"19920:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19913:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19735:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19745:3:16","type":""}],"src":"19706:233:16"},{"body":{"nodeType":"YulBlock","src":"20008:80:16","statements":[{"nodeType":"YulAssignment","src":"20018:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20033:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20027:5:16"},"nodeType":"YulFunctionCall","src":"20027:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20018:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20076:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"20049:26:16"},"nodeType":"YulFunctionCall","src":"20049:33:16"},"nodeType":"YulExpressionStatement","src":"20049:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19986:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"19994:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20002:5:16","type":""}],"src":"19945:143:16"},{"body":{"nodeType":"YulBlock","src":"20171:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"20217:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20219:77:16"},"nodeType":"YulFunctionCall","src":"20219:79:16"},"nodeType":"YulExpressionStatement","src":"20219:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20192:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20201:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20188:3:16"},"nodeType":"YulFunctionCall","src":"20188:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"20213:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20184:3:16"},"nodeType":"YulFunctionCall","src":"20184:32:16"},"nodeType":"YulIf","src":"20181:119:16"},{"nodeType":"YulBlock","src":"20310:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20325:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20339:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20329:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20354:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20400:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20411:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20396:3:16"},"nodeType":"YulFunctionCall","src":"20396:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20420:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"20364:31:16"},"nodeType":"YulFunctionCall","src":"20364:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20354:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20141:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20152:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20164:6:16","type":""}],"src":"20094:351:16"},{"body":{"nodeType":"YulBlock","src":"20495:147:16","statements":[{"nodeType":"YulAssignment","src":"20505:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20528:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20510:17:16"},"nodeType":"YulFunctionCall","src":"20510:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20505:1:16"}]},{"nodeType":"YulAssignment","src":"20539:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20562:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20544:17:16"},"nodeType":"YulFunctionCall","src":"20544:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20539:1:16"}]},{"nodeType":"YulAssignment","src":"20573:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20584:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"20587:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20580:3:16"},"nodeType":"YulFunctionCall","src":"20580:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20573:3:16"}]},{"body":{"nodeType":"YulBlock","src":"20613:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20615:16:16"},"nodeType":"YulFunctionCall","src":"20615:18:16"},"nodeType":"YulExpressionStatement","src":"20615:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20605:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"20608:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20602:2:16"},"nodeType":"YulFunctionCall","src":"20602:10:16"},"nodeType":"YulIf","src":"20599:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20482:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"20485:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20491:3:16","type":""}],"src":"20451:191:16"},{"body":{"nodeType":"YulBlock","src":"20754:50:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20776:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20784:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20772:3:16"},"nodeType":"YulFunctionCall","src":"20772:14:16"},{"hexValue":"57697a617264","kind":"string","nodeType":"YulLiteral","src":"20788:8:16","type":"","value":"Wizard"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20765:6:16"},"nodeType":"YulFunctionCall","src":"20765:32:16"},"nodeType":"YulExpressionStatement","src":"20765:32:16"}]},"name":"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20746:6:16","type":""}],"src":"20648:156:16"},{"body":{"nodeType":"YulBlock","src":"20956:219:16","statements":[{"nodeType":"YulAssignment","src":"20966:73:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21032:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21037:1:16","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20973:58:16"},"nodeType":"YulFunctionCall","src":"20973:66:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20966:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21137:3:16"}],"functionName":{"name":"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","nodeType":"YulIdentifier","src":"21048:88:16"},"nodeType":"YulFunctionCall","src":"21048:93:16"},"nodeType":"YulExpressionStatement","src":"21048:93:16"},{"nodeType":"YulAssignment","src":"21150:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21161:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21166:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21157:3:16"},"nodeType":"YulFunctionCall","src":"21157:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21150:3:16"}]}]},"name":"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20944:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20952:3:16","type":""}],"src":"20810:365:16"},{"body":{"nodeType":"YulBlock","src":"21234:32:16","statements":[{"nodeType":"YulAssignment","src":"21244:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"21255:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21244:7:16"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21216:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21226:7:16","type":""}],"src":"21181:85:16"},{"body":{"nodeType":"YulBlock","src":"21340:90:16","statements":[{"nodeType":"YulAssignment","src":"21350:74:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21416:5:16"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"21390:25:16"},"nodeType":"YulFunctionCall","src":"21390:32:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"21381:8:16"},"nodeType":"YulFunctionCall","src":"21381:42:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21363:17:16"},"nodeType":"YulFunctionCall","src":"21363:61:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21350:9:16"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21320:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21330:9:16","type":""}],"src":"21272:158:16"},{"body":{"nodeType":"YulBlock","src":"21509:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21526:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21570:5:16"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"21531:38:16"},"nodeType":"YulFunctionCall","src":"21531:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21519:6:16"},"nodeType":"YulFunctionCall","src":"21519:58:16"},"nodeType":"YulExpressionStatement","src":"21519:58:16"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21497:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21504:3:16","type":""}],"src":"21436:147:16"},{"body":{"nodeType":"YulBlock","src":"21796:338:16","statements":[{"nodeType":"YulAssignment","src":"21806:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21818:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21829:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21814:3:16"},"nodeType":"YulFunctionCall","src":"21814:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21806:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21853:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21864:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21849:3:16"},"nodeType":"YulFunctionCall","src":"21849:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21872:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"21878:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21868:3:16"},"nodeType":"YulFunctionCall","src":"21868:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21842:6:16"},"nodeType":"YulFunctionCall","src":"21842:47:16"},"nodeType":"YulExpressionStatement","src":"21842:47:16"},{"nodeType":"YulAssignment","src":"21898:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22032:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21906:124:16"},"nodeType":"YulFunctionCall","src":"21906:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21898:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22099:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22112:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22123:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22108:3:16"},"nodeType":"YulFunctionCall","src":"22108:18:16"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22047:51:16"},"nodeType":"YulFunctionCall","src":"22047:80:16"},"nodeType":"YulExpressionStatement","src":"22047:80:16"}]},"name":"abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21768:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21780:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21791:4:16","type":""}],"src":"21589:545:16"},{"body":{"nodeType":"YulBlock","src":"22246:127:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22268:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22276:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22264:3:16"},"nodeType":"YulFunctionCall","src":"22264:14:16"},{"hexValue":"68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f787931","kind":"string","nodeType":"YulLiteral","src":"22280:34:16","type":"","value":"https://images.pokemontcg.io/xy1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22257:6:16"},"nodeType":"YulFunctionCall","src":"22257:58:16"},"nodeType":"YulExpressionStatement","src":"22257:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22340:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22348:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22336:3:16"},"nodeType":"YulFunctionCall","src":"22336:15:16"},{"hexValue":"2f312e706e67","kind":"string","nodeType":"YulLiteral","src":"22353:8:16","type":"","value":"/1.png"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22329:6:16"},"nodeType":"YulFunctionCall","src":"22329:33:16"},"nodeType":"YulExpressionStatement","src":"22329:33:16"}]},"name":"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22238:6:16","type":""}],"src":"22140:233:16"},{"body":{"nodeType":"YulBlock","src":"22529:236:16","statements":[{"nodeType":"YulAssignment","src":"22543:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22609:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22614:2:16","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22550:58:16"},"nodeType":"YulFunctionCall","src":"22550:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22543:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22719:3:16"}],"functionName":{"name":"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","nodeType":"YulIdentifier","src":"22630:88:16"},"nodeType":"YulFunctionCall","src":"22630:93:16"},"nodeType":"YulExpressionStatement","src":"22630:93:16"},{"nodeType":"YulAssignment","src":"22736:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22747:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22752:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22743:3:16"},"nodeType":"YulFunctionCall","src":"22743:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22736:3:16"}]}]},"name":"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22517:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22525:3:16","type":""}],"src":"22383:382:16"},{"body":{"nodeType":"YulBlock","src":"22974:350:16","statements":[{"nodeType":"YulAssignment","src":"22988:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23000:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23011:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22996:3:16"},"nodeType":"YulFunctionCall","src":"22996:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22988:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23072:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23085:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23096:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23081:3:16"},"nodeType":"YulFunctionCall","src":"23081:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23028:43:16"},"nodeType":"YulFunctionCall","src":"23028:71:16"},"nodeType":"YulExpressionStatement","src":"23028:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23124:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23135:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23120:3:16"},"nodeType":"YulFunctionCall","src":"23120:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23144:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23150:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23140:3:16"},"nodeType":"YulFunctionCall","src":"23140:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23113:6:16"},"nodeType":"YulFunctionCall","src":"23113:48:16"},"nodeType":"YulExpressionStatement","src":"23113:48:16"},{"nodeType":"YulAssignment","src":"23174:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23308:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23182:124:16"},"nodeType":"YulFunctionCall","src":"23182:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23174:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22946:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22958:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22969:4:16","type":""}],"src":"22775:549:16"},{"body":{"nodeType":"YulBlock","src":"23448:42:16","statements":[{"nodeType":"YulAssignment","src":"23462:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"23477:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23462:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23420:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"23425:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23436:11:16","type":""}],"src":"23334:156:16"},{"body":{"nodeType":"YulBlock","src":"23610:300:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23624:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23671:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23638:32:16"},"nodeType":"YulFunctionCall","src":"23638:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23628:6:16","type":""}]},{"nodeType":"YulAssignment","src":"23690:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23774:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23779:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23697:76:16"},"nodeType":"YulFunctionCall","src":"23697:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23690:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23838:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"23845:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23834:3:16"},"nodeType":"YulFunctionCall","src":"23834:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"23852:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23857:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23799:34:16"},"nodeType":"YulFunctionCall","src":"23799:65:16"},"nodeType":"YulExpressionStatement","src":"23799:65:16"},{"nodeType":"YulAssignment","src":"23877:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23888:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23893:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23884:3:16"},"nodeType":"YulFunctionCall","src":"23884:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23877:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23591:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23598:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23606:3:16","type":""}],"src":"23500:410:16"},{"body":{"nodeType":"YulBlock","src":"24104:267:16","statements":[{"nodeType":"YulAssignment","src":"24119:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24208:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"24217:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24126:81:16"},"nodeType":"YulFunctionCall","src":"24126:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24119:3:16"}]},{"nodeType":"YulAssignment","src":"24235:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24324:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"24333:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24242:81:16"},"nodeType":"YulFunctionCall","src":"24242:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24235:3:16"}]},{"nodeType":"YulAssignment","src":"24351:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"24358:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24351:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24075:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24081:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24089:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24100:3:16","type":""}],"src":"23920:451:16"},{"body":{"nodeType":"YulBlock","src":"24439:48:16","statements":[{"nodeType":"YulAssignment","src":"24454:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24470:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24464:5:16"},"nodeType":"YulFunctionCall","src":"24464:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24454:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24422:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24432:6:16","type":""}],"src":"24381:106:16"},{"body":{"nodeType":"YulBlock","src":"24592:85:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24613:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"24618:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24606:6:16"},"nodeType":"YulFunctionCall","src":"24606:19:16"},"nodeType":"YulExpressionStatement","src":"24606:19:16"},{"nodeType":"YulAssignment","src":"24638:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24657:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24662:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24653:3:16"},"nodeType":"YulFunctionCall","src":"24653:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24638:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24564:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"24569:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24580:11:16","type":""}],"src":"24497:180:16"},{"body":{"nodeType":"YulBlock","src":"24777:303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"24791:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24837:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"24805:31:16"},"nodeType":"YulFunctionCall","src":"24805:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24795:6:16","type":""}]},{"nodeType":"YulAssignment","src":"24856:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24921:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"24926:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24863:57:16"},"nodeType":"YulFunctionCall","src":"24863:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24856:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24985:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"24992:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24981:3:16"},"nodeType":"YulFunctionCall","src":"24981:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"24999:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"25004:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24946:34:16"},"nodeType":"YulFunctionCall","src":"24946:65:16"},"nodeType":"YulExpressionStatement","src":"24946:65:16"},{"nodeType":"YulAssignment","src":"25024:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25035:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25062:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"25040:21:16"},"nodeType":"YulFunctionCall","src":"25040:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25031:3:16"},"nodeType":"YulFunctionCall","src":"25031:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25024:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24758:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24765:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24773:3:16","type":""}],"src":"24687:393:16"},{"body":{"nodeType":"YulBlock","src":"25290:468:16","statements":[{"nodeType":"YulAssignment","src":"25304:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25316:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25327:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25312:3:16"},"nodeType":"YulFunctionCall","src":"25312:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25304:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25389:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25402:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25413:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25398:3:16"},"nodeType":"YulFunctionCall","src":"25398:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25345:43:16"},"nodeType":"YulFunctionCall","src":"25345:71:16"},"nodeType":"YulExpressionStatement","src":"25345:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25474:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25487:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25498:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25483:3:16"},"nodeType":"YulFunctionCall","src":"25483:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25430:43:16"},"nodeType":"YulFunctionCall","src":"25430:72:16"},"nodeType":"YulExpressionStatement","src":"25430:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25560:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25573:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25584:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25569:3:16"},"nodeType":"YulFunctionCall","src":"25569:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25516:43:16"},"nodeType":"YulFunctionCall","src":"25516:72:16"},"nodeType":"YulExpressionStatement","src":"25516:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25613:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25624:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25609:3:16"},"nodeType":"YulFunctionCall","src":"25609:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25633:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"25639:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25629:3:16"},"nodeType":"YulFunctionCall","src":"25629:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25602:6:16"},"nodeType":"YulFunctionCall","src":"25602:48:16"},"nodeType":"YulExpressionStatement","src":"25602:48:16"},{"nodeType":"YulAssignment","src":"25663:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25733:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"25742:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25671:61:16"},"nodeType":"YulFunctionCall","src":"25671:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25663:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25238:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25250:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25258:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25266:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25274:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25285:4:16","type":""}],"src":"25090:668:16"},{"body":{"nodeType":"YulBlock","src":"25830:91:16","statements":[{"nodeType":"YulAssignment","src":"25844:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25859:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25853:5:16"},"nodeType":"YulFunctionCall","src":"25853:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25844:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25905:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"25879:25:16"},"nodeType":"YulFunctionCall","src":"25879:32:16"},"nodeType":"YulExpressionStatement","src":"25879:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25808:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"25816:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25824:5:16","type":""}],"src":"25768:153:16"},{"body":{"nodeType":"YulBlock","src":"26007:297:16","statements":[{"body":{"nodeType":"YulBlock","src":"26057:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26059:77:16"},"nodeType":"YulFunctionCall","src":"26059:79:16"},"nodeType":"YulExpressionStatement","src":"26059:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26032:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"26041:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26028:3:16"},"nodeType":"YulFunctionCall","src":"26028:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"26053:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26024:3:16"},"nodeType":"YulFunctionCall","src":"26024:32:16"},"nodeType":"YulIf","src":"26021:119:16"},{"nodeType":"YulBlock","src":"26154:139:16","statements":[{"nodeType":"YulVariableDeclaration","src":"26173:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"26187:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26177:6:16","type":""}]},{"nodeType":"YulAssignment","src":"26206:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26251:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"26262:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26247:3:16"},"nodeType":"YulFunctionCall","src":"26247:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26271:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"26216:30:16"},"nodeType":"YulFunctionCall","src":"26216:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26206:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25977:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25988:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26000:6:16","type":""}],"src":"25931:373:16"},{"body":{"nodeType":"YulBlock","src":"26342:168:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26363:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26366:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26356:6:16"},"nodeType":"YulFunctionCall","src":"26356:88:16"},"nodeType":"YulExpressionStatement","src":"26356:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26464:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26467:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26457:6:16"},"nodeType":"YulFunctionCall","src":"26457:15:16"},"nodeType":"YulExpressionStatement","src":"26457:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26492:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26495:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26485:6:16"},"nodeType":"YulFunctionCall","src":"26485:15:16"},"nodeType":"YulExpressionStatement","src":"26485:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26314:196:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GameCollection_$3593_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GameCollection_$3593_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: collection does n\")\n\n        mstore(add(memPtr, 32), \"ot exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: transfer of token\")\n\n        mstore(add(memPtr, 32), \" that is not own\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: transfer to the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: card does not exi\")\n\n        mstore(add(memPtr, 32), \"st\")\n\n    }\n\n    function abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_contract$_Card_$2987(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Card_$2987(value) {\n        if iszero(eq(value, cleanup_t_contract$_Card_$2987(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Card_$2987_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Card_$2987(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Card_$2987_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Card_$2987_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wizard\")\n\n    }\n\n    function abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5(pos)\n        end := add(pos, 32)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92(memPtr) {\n\n        mstore(add(memPtr, 0), \"https://images.pokemontcg.io/xy1\")\n\n            mstore(add(memPtr, 32), \"/1.png\")\n\n        }\n\n        function abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n            store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92(pos)\n            end := add(pos, 64)\n        }\n\n        function abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n            mstore(add(headStart, 32), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n            updated_pos := pos\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, length)\n        }\n\n        function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n            end := pos\n        }\n\n        function array_length_t_bytes_memory_ptr(value) -> length {\n\n            length := mload(value)\n\n        }\n\n        function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n            mstore(pos, length)\n            updated_pos := add(pos, 0x20)\n        }\n\n        function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n            let length := array_length_t_bytes_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, round_up_to_mul_of_32(length))\n        }\n\n        function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n            tail := add(headStart, 128)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n            mstore(add(headStart, 96), sub(tail, headStart))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n        }\n\n        function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_bytes4(value)\n        }\n\n        function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function panic_error_0x12() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n\n    }\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060043610620001605760003560e01c80638da5cb5b11620000c9578063bf8741031162000087578063bf87410314620003db578063c87b56dd1462000411578063d57f966b1462000447578063e985e9c51462000469578063f2fde38b146200049f578063f7374d1114620004bf5762000160565b80638da5cb5b146200032157806395d89b411462000343578063a22cb4651462000365578063b88d4fde1462000385578063bc4f6def14620003a55762000160565b8063156e29f61162000123578063156e29f6146200024957806323b872dd146200026957806342842e0e14620002895780636352211e14620002a957806370a0823114620002df578063715018a614620003155762000160565b806301ffc9a7146200016557806306fdde03146200019b578063081812fc14620001bd578063095ea7b314620001f35780630abc4a781462000213575b600080fd5b6200018360048036038101906200017d919062001e70565b620004df565b60405162000192919062001ebf565b60405180910390f35b620001a5620005c5565b604051620001b4919062001f76565b60405180910390f35b620001db6004803603810190620001d5919062001fd5565b6200065f565b604051620001ea91906200204c565b60405180910390f35b6200021160048036038101906200020b91906200209a565b6200067f565b005b6200023160048036038101906200022b919062001fd5565b62000699565b604051620002409190620020fc565b60405180910390f35b62000267600480360381019062000261919062002119565b620007ae565b005b62000287600480360381019062000281919062002175565b6200089e565b005b620002a76004803603810190620002a1919062002175565b62000b80565b005b620002c76004803603810190620002c1919062001fd5565b62000ba2565b604051620002d691906200204c565b60405180910390f35b620002fd6004803603810190620002f79190620021d1565b62000ccd565b6040516200030c919062002214565b60405180910390f35b6200031f62000dc3565b005b6200032b62000ddb565b6040516200033a91906200204c565b60405180910390f35b6200034d62000e04565b6040516200035c919062001f76565b60405180910390f35b6200038360048036038101906200037d919062002262565b62000e9e565b005b620003a360048036038101906200039d9190620023fa565b62000eb8565b005b620003c36004803603810190620003bd919062001fd5565b62000ed9565b604051620003d29190620024f6565b60405180910390f35b620003f96004803603810190620003f3919062001fd5565b62000f0c565b6040516200040891906200204c565b60405180910390f35b6200042f600480360381019062000429919062001fd5565b6200111d565b6040516200043e919062001f76565b60405180910390f35b6200045162001190565b60405162000460919062002214565b60405180910390f35b62000487600480360381019062000481919062002513565b62001196565b60405162000496919062001ebf565b60405180910390f35b620004bd6004803603810190620004b79190620021d1565b6200122a565b005b620004dd6004803603810190620004d7919062002119565b620012b7565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480620005ab57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80620005be5750620005bd82620013a7565b5b9050919050565b606060018054620005d69062002589565b80601f0160208091040260200160405190810160405280929190818152602001828054620006049062002589565b8015620006555780601f10620006295761010080835404028352916020019162000655565b820191906000526020600020905b8154815290600101906020018083116200063757829003601f168201915b5050505050905090565b60006200066c8262001411565b5062000678826200149e565b9050919050565b6200069582826200068f620014db565b620014e3565b5050565b600080600090505b60085481121562000784576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9aa75ef846040518263ffffffff1660e01b81526004016200071a919062002214565b602060405180830381865afa15801562000738573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200075e9190620025d5565b156200076e5780915050620007a9565b80806200077b9062002636565b915050620006a1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b6008548110620007f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007ec90620026f9565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401620008659291906200271b565b600060405180830381600087803b1580156200088057600080fd5b505af115801562000895573d6000803e3d6000fd5b50505050505050565b620008a98162000ba2565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462000919576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091090620027be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200098b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009829062002856565b60405180910390fd5b6000620009988262000699565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103620009ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009f690620028ee565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312836040518263ffffffff1660e01b815260040162000a6d919062002214565b602060405180830381865afa15801562000a8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ab1919062002955565b73ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000aeb91906200204c565b600060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b50505050818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b62000b9d8383836040518060200160405280600081525062000eb8565b505050565b600080600090505b60085481101562000cc25760006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040162000c25919062002214565b602060405180830381865afa15801562000c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6991906200299e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000cab57809250505062000cc8565b50808062000cb990620029d0565b91505062000baa565b50600090505b919050565b6000806000905060005b60085481101562000db9576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040162000d5091906200204c565b602060405180830381865afa15801562000d6e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d94919062002a34565b8262000da1919062002a66565b9150808062000db090620029d0565b91505062000cd7565b5080915050919050565b62000dcd620014f7565b62000dd9600062001587565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805462000e159062002589565b80601f016020809104026020016040519081016040528092919081815260200182805462000e439062002589565b801562000e945780601f1062000e685761010080835404028352916020019162000e94565b820191906000526020600020905b81548152906001019060200180831162000e7657829003601f168201915b5050505050905090565b62000eb462000eac620014db565b83836200164b565b5050565b62000ec58484846200089e565b62000ed384848484620017bf565b50505050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060405162000f1f9062001df1565b62000f2b919062002b34565b604051809103906000f08015801562000f48573d6000803e3d6000fd5b5090508060076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600081548092919062000fb490620029d0565b91905055506007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa93d702846040518263ffffffff1660e01b815260040162001027919062002bdc565b600060405180830381600087803b1580156200104257600080fd5b505af115801562001057573d6000803e3d6000fd5b5050505060006007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312856040518263ffffffff1660e01b8152600401620010cb919062002214565b602060405180830381865afa158015620010e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200110f919062002955565b905061029a92505050919050565b60606200112a8262001411565b5060006200113762001987565b9050600081511162001159576040518060200160405280600081525062001188565b8062001165846200199e565b6040516020016200117892919062002c50565b6040516020818303038152906040525b915050919050565b60085481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001234620014f7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620012a95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620012a091906200204c565b60405180910390fd5b620012b48162001587565b50565b6008548110620012fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620012f590620026f9565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f92906ff84846040518363ffffffff1660e01b81526004016200136e9291906200271b565b600060405180830381600087803b1580156200138957600080fd5b505af11580156200139e573d6000803e3d6000fd5b50505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806200141f8362001a77565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200149557826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016200148c919062002214565b60405180910390fd5b80915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b620014f2838383600162001ab4565b505050565b62001501620014db565b73ffffffffffffffffffffffffffffffffffffffff166200152162000ddb565b73ffffffffffffffffffffffffffffffffffffffff1614620015855762001547620014db565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016200157c91906200204c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620016bf57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401620016b691906200204c565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051620017b2919062001ebf565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111562001981578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0262001806620014db565b8685856040518563ffffffff1660e01b81526004016200182a949392919062002cd5565b6020604051808303816000875af19250505080156200186957506040513d601f19601f8201168201806040525081019062001866919062002d40565b60015b620018f3573d80600081146200189c576040519150601f19603f3d011682016040523d82523d6000602084013e620018a1565b606091505b506000815103620018eb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401620018e291906200204c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200197f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016200197691906200204c565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001620019af8462001c85565b01905060008167ffffffffffffffff811115620019d157620019d0620022b3565b5b6040519080825280601f01601f19166020018201604052801562001a045781602001600182028036833780820191505090505b509050600082602001820190505b60011562001a6c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858162001a5f5762001a5e62002d72565b5b0494506000850362001a12575b819350505050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808062001aee5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1562001c2d57600062001b018462001411565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801562001b6d57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801562001b83575062001b81818462001196565b155b1562001bc857826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040162001bbf91906200204c565b60405180910390fd5b811562001c2b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831062001ce7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838162001cdd5762001cdc62002d72565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062001d28576d04ee2d6d415b85acef8100000000838162001d1e5762001d1d62002d72565b5b0492506020810190505b662386f26fc10000831062001d5b57662386f26fc10000838162001d515762001d5062002d72565b5b0492506010810190505b6305f5e100831062001d88576305f5e100838162001d7e5762001d7d62002d72565b5b0492506008810190505b612710831062001db157612710838162001da75762001da662002d72565b5b0492506004810190505b6064831062001dd8576064838162001dce5762001dcd62002d72565b5b0492506002810190505b600a831062001de8576001810190505b80915050919050565b6126828062002da283390190565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62001e4a8162001e13565b811462001e5657600080fd5b50565b60008135905062001e6a8162001e3f565b92915050565b60006020828403121562001e895762001e8862001e09565b5b600062001e998482850162001e59565b91505092915050565b60008115159050919050565b62001eb98162001ea2565b82525050565b600060208201905062001ed6600083018462001eae565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001f1857808201518184015260208101905062001efb565b60008484015250505050565b6000601f19601f8301169050919050565b600062001f428262001edc565b62001f4e818562001ee7565b935062001f6081856020860162001ef8565b62001f6b8162001f24565b840191505092915050565b6000602082019050818103600083015262001f92818462001f35565b905092915050565b6000819050919050565b62001faf8162001f9a565b811462001fbb57600080fd5b50565b60008135905062001fcf8162001fa4565b92915050565b60006020828403121562001fee5762001fed62001e09565b5b600062001ffe8482850162001fbe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620020348262002007565b9050919050565b620020468162002027565b82525050565b60006020820190506200206360008301846200203b565b92915050565b620020748162002027565b81146200208057600080fd5b50565b600081359050620020948162002069565b92915050565b60008060408385031215620020b457620020b362001e09565b5b6000620020c48582860162002083565b9250506020620020d78582860162001fbe565b9150509250929050565b6000819050919050565b620020f681620020e1565b82525050565b6000602082019050620021136000830184620020eb565b92915050565b60008060006060848603121562002135576200213462001e09565b5b6000620021458682870162002083565b9350506020620021588682870162001fbe565b92505060406200216b8682870162001fbe565b9150509250925092565b60008060006060848603121562002191576200219062001e09565b5b6000620021a18682870162002083565b9350506020620021b48682870162002083565b9250506040620021c78682870162001fbe565b9150509250925092565b600060208284031215620021ea57620021e962001e09565b5b6000620021fa8482850162002083565b91505092915050565b6200220e8162001f9a565b82525050565b60006020820190506200222b600083018462002203565b92915050565b6200223c8162001ea2565b81146200224857600080fd5b50565b6000813590506200225c8162002231565b92915050565b600080604083850312156200227c576200227b62001e09565b5b60006200228c8582860162002083565b92505060206200229f858286016200224b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620022ed8262001f24565b810181811067ffffffffffffffff821117156200230f576200230e620022b3565b5b80604052505050565b60006200232462001dff565b9050620023328282620022e2565b919050565b600067ffffffffffffffff821115620023555762002354620022b3565b5b620023608262001f24565b9050602081019050919050565b82818337600083830152505050565b6000620023936200238d8462002337565b62002318565b905082815260208101848484011115620023b257620023b1620022ae565b5b620023bf8482856200236d565b509392505050565b600082601f830112620023df57620023de620022a9565b5b8135620023f18482602086016200237c565b91505092915050565b6000806000806080858703121562002417576200241662001e09565b5b6000620024278782880162002083565b94505060206200243a8782880162002083565b93505060406200244d8782880162001fbe565b925050606085013567ffffffffffffffff81111562002471576200247062001e0e565b5b6200247f87828801620023c7565b91505092959194509250565b6000819050919050565b6000620024b6620024b0620024aa8462002007565b6200248b565b62002007565b9050919050565b6000620024ca8262002495565b9050919050565b6000620024de82620024bd565b9050919050565b620024f081620024d1565b82525050565b60006020820190506200250d6000830184620024e5565b92915050565b600080604083850312156200252d576200252c62001e09565b5b60006200253d8582860162002083565b9250506020620025508582860162002083565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620025a257607f821691505b602082108103620025b857620025b76200255a565b5b50919050565b600081519050620025cf8162002231565b92915050565b600060208284031215620025ee57620025ed62001e09565b5b6000620025fe84828501620025be565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200264382620020e1565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362002678576200267762002607565b5b600182019050919050565b7f436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e60008201527f6f74206578697374000000000000000000000000000000000000000000000000602082015250565b6000620026e160288362001ee7565b9150620026ee8262002683565b604082019050919050565b600060208201905081810360008301526200271481620026d2565b9050919050565b60006040820190506200273260008301856200203b565b62002741602083018462002203565b9392505050565b7f436172644f776e6572736869703a207472616e73666572206f6620746f6b656e60008201527f2074686174206973206e6f74206f776e00000000000000000000000000000000602082015250565b6000620027a660308362001ee7565b9150620027b38262002748565b604082019050919050565b60006020820190508181036000830152620027d98162002797565b9050919050565b7f436172644f776e6572736869703a207472616e7366657220746f20746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b60006200283e602b8362001ee7565b91506200284b82620027e0565b604082019050919050565b6000602082019050818103600083015262002871816200282f565b9050919050565b7f436172644f776e6572736869703a206361726420646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b6000620028d660228362001ee7565b9150620028e38262002878565b604082019050919050565b600060208201905081810360008301526200290981620028c7565b9050919050565b60006200291d8262002027565b9050919050565b6200292f8162002910565b81146200293b57600080fd5b50565b6000815190506200294f8162002924565b92915050565b6000602082840312156200296e576200296d62001e09565b5b60006200297e848285016200293e565b91505092915050565b600081519050620029988162002069565b92915050565b600060208284031215620029b757620029b662001e09565b5b6000620029c78482850162002987565b91505092915050565b6000620029dd8262001f9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362002a125762002a1162002607565b5b600182019050919050565b60008151905062002a2e8162001fa4565b92915050565b60006020828403121562002a4d5762002a4c62001e09565b5b600062002a5d8482850162002a1d565b91505092915050565b600062002a738262001f9a565b915062002a808362001f9a565b925082820190508082111562002a9b5762002a9a62002607565b5b92915050565b7f57697a6172640000000000000000000000000000000000000000000000000000600082015250565b600062002ad960068362001ee7565b915062002ae68262002aa1565b602082019050919050565b6000819050919050565b600062002b1c62002b1662002b108462002af1565b6200248b565b62001f9a565b9050919050565b62002b2e8162002afb565b82525050565b6000604082019050818103600083015262002b4f8162002aca565b905062002b60602083018462002b23565b92915050565b7f68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f78793160008201527f2f312e706e670000000000000000000000000000000000000000000000000000602082015250565b600062002bc460268362001ee7565b915062002bd18262002b66565b604082019050919050565b600060408201905062002bf3600083018462002203565b818103602083015262002c068162002bb5565b905092915050565b600081905092915050565b600062002c268262001edc565b62002c32818562002c0e565b935062002c4481856020860162001ef8565b80840191505092915050565b600062002c5e828562002c19565b915062002c6c828462002c19565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600062002ca18262002c78565b62002cad818562002c83565b935062002cbf81856020860162001ef8565b62002cca8162001f24565b840191505092915050565b600060808201905062002cec60008301876200203b565b62002cfb60208301866200203b565b62002d0a604083018562002203565b818103606083015262002d1e818462002c94565b905095945050505050565b60008151905062002d3a8162001e3f565b92915050565b60006020828403121562002d595762002d5862001e09565b5b600062002d698482850162002d29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfe60806040523480156200001157600080fd5b506040516200268238038062002682833981810160405281019062000037919062000226565b8160009081620000489190620004cd565b50806001819055505050620005b4565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000c18262000076565b810181811067ffffffffffffffff82111715620000e357620000e262000087565b5b80604052505050565b6000620000f862000058565b9050620001068282620000b6565b919050565b600067ffffffffffffffff82111562000129576200012862000087565b5b620001348262000076565b9050602081019050919050565b60005b838110156200016157808201518184015260208101905062000144565b60008484015250505050565b6000620001846200017e846200010b565b620000ec565b905082815260208101848484011115620001a357620001a262000071565b5b620001b084828562000141565b509392505050565b600082601f830112620001d057620001cf6200006c565b5b8151620001e28482602086016200016d565b91505092915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000806040838503121562000240576200023f62000062565b5b600083015167ffffffffffffffff81111562000261576200026062000067565b5b6200026f85828601620001b8565b925050602062000282858286016200020f565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002df57607f821691505b602082108103620002f557620002f462000297565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000320565b6200036b868362000320565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003ae620003a8620003a284620001eb565b62000383565b620001eb565b9050919050565b6000819050919050565b620003ca836200038d565b620003e2620003d982620003b5565b8484546200032d565b825550505050565b600090565b620003f9620003ea565b62000406818484620003bf565b505050565b5b818110156200042e5762000422600082620003ef565b6001810190506200040c565b5050565b601f8211156200047d576200044781620002fb565b620004528462000310565b8101602085101562000462578190505b6200047a620004718562000310565b8301826200040b565b50505b505050565b600082821c905092915050565b6000620004a26000198460080262000482565b1980831691505092915050565b6000620004bd83836200048f565b9150826002028217905092915050565b620004d8826200028c565b67ffffffffffffffff811115620004f457620004f362000087565b5b620005008254620002c6565b6200050d82828562000432565b600060209050601f83116001811462000545576000841562000530578287015190505b6200053c8582620004af565b865550620005ac565b601f1984166200055586620002fb565b60005b828110156200057f5784890151825560018201915060208501945060208101905062000558565b868310156200059f57848901516200059b601f8916826200048f565b8355505b6001600288020188555050505b505050505050565b6120be80620005c46000396000f3fe60806040523480156200001157600080fd5b5060043610620000e25760003560e01c806370a0823111620000995780639188d312116200006f5780639188d3121462000251578063a9aa75ef1462000287578063aa93d70214620002bd578063f92906ff14620002dd57620000e2565b806370a0823114620001c35780637d62013014620001f95780638dc10768146200021b57620000e2565b806306fdde0314620000e757806317d7de7c14620001095780631b6cde10146200012b57806340c10f19146200014d5780636352211e146200016d5780636a62784214620001a3575b600080fd5b620000f1620002fd565b60405162000100919062000dc6565b60405180910390f35b6200011362000393565b60405162000122919062000dc6565b60405180910390f35b620001356200042d565b60405162000144919062000e05565b60405180910390f35b6200016b600480360381019062000165919062000ecc565b62000433565b005b6200018b600480360381019062000185919062000f13565b6200068e565b6040516200019a919062000f56565b60405180910390f35b620001c16004803603810190620001bb919062000f73565b62000818565b005b620001e16004803603810190620001db919062000f73565b620009c1565b604051620001f0919062000e05565b60405180910390f35b6200020362000adf565b60405162000212919062000e05565b60405180910390f35b62000239600480360381019062000233919062000f13565b62000ae9565b60405162000248919062001010565b60405180910390f35b6200026f600480360381019062000269919062000f13565b62000b1c565b6040516200027e919062001010565b60405180910390f35b620002a560048036038101906200029f919062000f13565b62000b59565b604051620002b491906200104a565b60405180910390f35b620002db6004803603810190620002d59190620011b8565b62000c44565b005b620002fb6004803603810190620002f5919062000ecc565b62000cec565b005b600080546200030c906200124d565b80601f01602080910402602001604051908101604052809291908181526020018280546200033a906200124d565b80156200038b5780601f106200035f576101008083540402835291602001916200038b565b820191906000526020600020905b8154815290600101906020018083116200036d57829003601f168201915b505050505081565b606060008054620003a4906200124d565b80601f0160208091040260200160405190810160405280929190818152602001828054620003d2906200124d565b8015620004235780601f10620003f75761010080835404028352916020019162000423565b820191906000526020600020905b8154815290600101906020018083116200040557829003601f168201915b5050505050905090565b60015481565b60005b6001548110156200068957600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fe919062001299565b73ffffffffffffffffffffffffffffffffffffffff16148015620005c55750816002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200059d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005c39190620012e2565b145b1562000673576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000639919062000f56565b600060405180830381600087803b1580156200065457600080fd5b505af115801562000669573d6000803e3d6000fd5b5050505062000689565b8080620006809062001343565b91505062000436565b505050565b600080600090505b6001548110156200081157826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007479190620012e2565b03620007fb576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f2919062001299565b91505062000813565b8080620008089062001343565b91505062000696565b505b919050565b60005b600154811015620009bd57600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e3919062001299565b73ffffffffffffffffffffffffffffffffffffffff1603620009a7576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b81526004016200096d919062000f56565b600060405180830381600087803b1580156200098857600080fd5b505af11580156200099d573d6000803e3d6000fd5b50505050620009bd565b8080620009b49062001343565b9150506200081b565b5050565b6000806000905060005b60015481101562000ad5578373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a92919062001299565b73ffffffffffffffffffffffffffffffffffffffff160362000abf57818062000abb9062001343565b9250505b808062000acc9062001343565b915050620009cb565b5080915050919050565b6000600154905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600090505b60015481101562000c3957826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000bec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c129190620012e2565b0362000c2357600191505062000c3f565b808062000c309062001343565b91505062000b61565b50600090505b919050565b818160405162000c549062000d1e565b62000c6192919062001390565b604051809103906000f08015801562000c7e573d6000803e3d6000fd5b50600260006001600081548092919062000c989062001343565b91905055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60005b8181101562000d195762000d038362000818565b808062000d109062001343565b91505062000cef565b505050565b610cc480620013c583390190565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000d6857808201518184015260208101905062000d4b565b60008484015250505050565b6000601f19601f8301169050919050565b600062000d928262000d2c565b62000d9e818562000d37565b935062000db081856020860162000d48565b62000dbb8162000d74565b840191505092915050565b6000602082019050818103600083015262000de2818462000d85565b905092915050565b6000819050919050565b62000dff8162000dea565b82525050565b600060208201905062000e1c600083018462000df4565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e638262000e36565b9050919050565b62000e758162000e56565b811462000e8157600080fd5b50565b60008135905062000e958162000e6a565b92915050565b62000ea68162000dea565b811462000eb257600080fd5b50565b60008135905062000ec68162000e9b565b92915050565b6000806040838503121562000ee65762000ee562000e2c565b5b600062000ef68582860162000e84565b925050602062000f098582860162000eb5565b9150509250929050565b60006020828403121562000f2c5762000f2b62000e2c565b5b600062000f3c8482850162000eb5565b91505092915050565b62000f508162000e56565b82525050565b600060208201905062000f6d600083018462000f45565b92915050565b60006020828403121562000f8c5762000f8b62000e2c565b5b600062000f9c8482850162000e84565b91505092915050565b6000819050919050565b600062000fd062000fca62000fc48462000e36565b62000fa5565b62000e36565b9050919050565b600062000fe48262000faf565b9050919050565b600062000ff88262000fd7565b9050919050565b6200100a8162000feb565b82525050565b600060208201905062001027600083018462000fff565b92915050565b60008115159050919050565b62001044816200102d565b82525050565b600060208201905062001061600083018462001039565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620010ab8262000d74565b810181811067ffffffffffffffff82111715620010cd57620010cc62001071565b5b80604052505050565b6000620010e262000e22565b9050620010f08282620010a0565b919050565b600067ffffffffffffffff82111562001113576200111262001071565b5b6200111e8262000d74565b9050602081019050919050565b82818337600083830152505050565b6000620011516200114b84620010f5565b620010d6565b90508281526020810184848401111562001170576200116f6200106c565b5b6200117d8482856200112b565b509392505050565b600082601f8301126200119d576200119c62001067565b5b8135620011af8482602086016200113a565b91505092915050565b60008060408385031215620011d257620011d162000e2c565b5b6000620011e28582860162000eb5565b925050602083013567ffffffffffffffff81111562001206576200120562000e31565b5b620012148582860162001185565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200126657607f821691505b6020821081036200127c576200127b6200121e565b5b50919050565b600081519050620012938162000e6a565b92915050565b600060208284031215620012b257620012b162000e2c565b5b6000620012c28482850162001282565b91505092915050565b600081519050620012dc8162000e9b565b92915050565b600060208284031215620012fb57620012fa62000e2c565b5b60006200130b84828501620012cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620013508262000dea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001385576200138462001314565b5b600182019050919050565b6000604082019050620013a7600083018562000df4565b8181036020830152620013bb818462000d85565b9050939250505056fe60806040523480156200001157600080fd5b5060405162000cc438038062000cc4833981810160405281019062000037919062000372565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200041d565b60405180910390fd5b620000be81620000e060201b60201c565b50816001819055508060029081620000d791906200067b565b50505062000762565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001cd81620001b8565b8114620001d957600080fd5b50565b600081519050620001ed81620001c2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024882620001fd565b810181811067ffffffffffffffff821117156200026a57620002696200020e565b5b80604052505050565b60006200027f620001a4565b90506200028d82826200023d565b919050565b600067ffffffffffffffff821115620002b057620002af6200020e565b5b620002bb82620001fd565b9050602081019050919050565b60005b83811015620002e8578082015181840152602081019050620002cb565b60008484015250505050565b60006200030b620003058462000292565b62000273565b9050828152602081018484840111156200032a5762000329620001f8565b5b62000337848285620002c8565b509392505050565b600082601f830112620003575762000356620001f3565b5b815162000369848260208601620002f4565b91505092915050565b600080604083850312156200038c576200038b620001ae565b5b60006200039c85828601620001dc565b925050602083015167ffffffffffffffff811115620003c057620003bf620001b3565b5b620003ce858286016200033f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040582620003d8565b9050919050565b6200041781620003f8565b82525050565b60006020820190506200043460008301846200040c565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048d57607f821691505b602082108103620004a357620004a262000445565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200050d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004ce565b620005198683620004ce565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200055c620005566200055084620001b8565b62000531565b620001b8565b9050919050565b6000819050919050565b62000578836200053b565b62000590620005878262000563565b848454620004db565b825550505050565b600090565b620005a762000598565b620005b48184846200056d565b505050565b5b81811015620005dc57620005d06000826200059d565b600181019050620005ba565b5050565b601f8211156200062b57620005f581620004a9565b6200060084620004be565b8101602085101562000610578190505b620006286200061f85620004be565b830182620005b9565b50505b505050565b600082821c905092915050565b6000620006506000198460080262000630565b1980831691505092915050565b60006200066b83836200063d565b9150826002028217905092915050565b62000686826200043a565b67ffffffffffffffff811115620006a257620006a16200020e565b5b620006ae825462000474565b620006bb828285620005e0565b600060209050601f831160018114620006f35760008415620006de578287015190505b620006ea85826200065d565b8655506200075a565b601f1984166200070386620004a9565b60005b828110156200072d5784890151825560018201915060208501945060208101905062000706565b868310156200074d578489015162000749601f8916826200063d565b8355505b6001600288020188555050505b505050505050565b61055280620007726000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635d1ca6311461005c578063715018a61461007a5780637802dff5146100845780638da5cb5b146100a2578063f2fde38b146100c0575b600080fd5b6100646100dc565b6040516100719190610335565b60405180910390f35b6100826100e6565b005b61008c6100fa565b60405161009991906103e0565b60405180910390f35b6100aa61018c565b6040516100b79190610443565b60405180910390f35b6100da60048036038101906100d5919061048f565b6101b5565b005b6000600154905090565b6100ee6101c9565b6100f86000610250565b565b606060028054610109906104eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906104eb565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bd6101c9565b6101c6816101b5565b50565b6101d1610314565b73ffffffffffffffffffffffffffffffffffffffff166101ef61018c565b73ffffffffffffffffffffffffffffffffffffffff161461024e57610212610314565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102459190610443565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61032f8161031c565b82525050565b600060208201905061034a6000830184610326565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561038a57808201518184015260208101905061036f565b60008484015250505050565b6000601f19601f8301169050919050565b60006103b282610350565b6103bc818561035b565b93506103cc81856020860161036c565b6103d581610396565b840191505092915050565b600060208201905081810360008301526103fa81846103a7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042d82610402565b9050919050565b61043d81610422565b82525050565b60006020820190506104586000830184610434565b92915050565b600080fd5b61046c81610422565b811461047757600080fd5b50565b60008135905061048981610463565b92915050565b6000602082840312156104a5576104a461045e565b5b60006104b38482850161047a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050357607f821691505b602082108103610516576105156104bc565b5b5091905056fea2646970667358221220c9055a330222893d1592b6ba51a425feae93b76700fc1cf31e7c593035fd370d64736f6c63430008140033a26469706673582212205d2eff3a6afb4b31ee29993c53541514f33fc14b38083eaf5bce9a1d25c8f49864736f6c63430008140033a2646970667358221220974c1b1e283699d1092638977022efdd9a344c631bba1f504bea576eab8d648164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x160 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xC9 JUMPI DUP1 PUSH4 0xBF874103 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xBF874103 EQ PUSH3 0x3DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH3 0x411 JUMPI DUP1 PUSH4 0xD57F966B EQ PUSH3 0x447 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x49F JUMPI DUP1 PUSH4 0xF7374D11 EQ PUSH3 0x4BF JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x321 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x343 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x365 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH3 0x385 JUMPI DUP1 PUSH4 0xBC4F6DEF EQ PUSH3 0x3A5 JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH3 0x123 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH3 0x249 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x269 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH3 0x289 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x2A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x315 JUMPI PUSH3 0x160 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x165 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x19B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH3 0x1BD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x1F3 JUMPI DUP1 PUSH4 0xABC4A78 EQ PUSH3 0x213 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x1E70 JUMP JUMPDEST PUSH3 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x192 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1A5 PUSH3 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B4 SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1D5 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1EA SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x20B SWAP2 SWAP1 PUSH3 0x209A JUMP JUMPDEST PUSH3 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH3 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x22B SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x240 SWAP2 SWAP1 PUSH3 0x20FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x261 SWAP2 SWAP1 PUSH3 0x2119 JUMP JUMPDEST PUSH3 0x7AE JUMP JUMPDEST STOP JUMPDEST PUSH3 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x281 SWAP2 SWAP1 PUSH3 0x2175 JUMP JUMPDEST PUSH3 0x89E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2A1 SWAP2 SWAP1 PUSH3 0x2175 JUMP JUMPDEST PUSH3 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2C1 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D6 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F7 SWAP2 SWAP1 PUSH3 0x21D1 JUMP JUMPDEST PUSH3 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x30C SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x31F PUSH3 0xDC3 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x32B PUSH3 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x33A SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34D PUSH3 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x35C SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x37D SWAP2 SWAP1 PUSH3 0x2262 JUMP JUMPDEST PUSH3 0xE9E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x39D SWAP2 SWAP1 PUSH3 0x23FA JUMP JUMPDEST PUSH3 0xEB8 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3BD SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3D2 SWAP2 SWAP1 PUSH3 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3F3 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x408 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x429 SWAP2 SWAP1 PUSH3 0x1FD5 JUMP JUMPDEST PUSH3 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x43E SWAP2 SWAP1 PUSH3 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x451 PUSH3 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x460 SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x481 SWAP2 SWAP1 PUSH3 0x2513 JUMP JUMPDEST PUSH3 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x496 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4B7 SWAP2 SWAP1 PUSH3 0x21D1 JUMP JUMPDEST PUSH3 0x122A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4D7 SWAP2 SWAP1 PUSH3 0x2119 JUMP JUMPDEST PUSH3 0x12B7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH3 0x5AB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH3 0x5BE JUMPI POP PUSH3 0x5BD DUP3 PUSH3 0x13A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH3 0x5D6 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x604 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x629 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x637 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66C DUP3 PUSH3 0x1411 JUMP JUMPDEST POP PUSH3 0x678 DUP3 PUSH3 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x695 DUP3 DUP3 PUSH3 0x68F PUSH3 0x14DB JUMP JUMPDEST PUSH3 0x14E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 SLT ISZERO PUSH3 0x784 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9AA75EF DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x71A SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x75E SWAP2 SWAP1 PUSH3 0x25D5 JUMP JUMPDEST ISZERO PUSH3 0x76E JUMPI DUP1 SWAP2 POP POP PUSH3 0x7A9 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x77B SWAP1 PUSH3 0x2636 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6A1 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7EC SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x865 SWAP3 SWAP2 SWAP1 PUSH3 0x271B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x895 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x8A9 DUP2 PUSH3 0xBA2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x910 SWAP1 PUSH3 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x98B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x982 SWAP1 PUSH3 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x998 DUP3 PUSH3 0x699 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH3 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F6 SWAP1 PUSH3 0x28EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA6D SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xAB1 SWAP2 SWAP1 PUSH3 0x2955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAEB SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xB1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH3 0xB9D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xEB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xCC2 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC25 SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC69 SWAP2 SWAP1 PUSH3 0x299E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCAB JUMPI DUP1 SWAP3 POP POP POP PUSH3 0xCC8 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xCB9 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xBAA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xDB9 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD50 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD94 SWAP2 SWAP1 PUSH3 0x2A34 JUMP JUMPDEST DUP3 PUSH3 0xDA1 SWAP2 SWAP1 PUSH3 0x2A66 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH3 0xDB0 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCD7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDCD PUSH3 0x14F7 JUMP JUMPDEST PUSH3 0xDD9 PUSH1 0x0 PUSH3 0x1587 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0xE15 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xE43 SWAP1 PUSH3 0x2589 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xE68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xE76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xEB4 PUSH3 0xEAC PUSH3 0x14DB JUMP JUMPDEST DUP4 DUP4 PUSH3 0x164B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xEC5 DUP5 DUP5 DUP5 PUSH3 0x89E JUMP JUMPDEST PUSH3 0xED3 DUP5 DUP5 DUP5 DUP5 PUSH3 0x17BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0xF1F SWAP1 PUSH3 0x1DF1 JUMP JUMPDEST PUSH3 0xF2B SWAP2 SWAP1 PUSH3 0x2B34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xF48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xFB4 SWAP1 PUSH3 0x29D0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA93D702 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1027 SWAP2 SWAP1 PUSH3 0x2BDC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1057 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10CB SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x10E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x110F SWAP2 SWAP1 PUSH3 0x2955 JUMP JUMPDEST SWAP1 POP PUSH2 0x29A SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x112A DUP3 PUSH3 0x1411 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1137 PUSH3 0x1987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x1159 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x1188 JUMP JUMPDEST DUP1 PUSH3 0x1165 DUP5 PUSH3 0x199E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1178 SWAP3 SWAP2 SWAP1 PUSH3 0x2C50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1234 PUSH3 0x14F7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12A9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12A0 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B4 DUP2 PUSH3 0x1587 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12F5 SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92906FF DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136E SWAP3 SWAP2 SWAP1 PUSH3 0x271B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x139E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x141F DUP4 PUSH3 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1495 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x148C SWAP2 SWAP1 PUSH3 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x14F2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x1AB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x1501 PUSH3 0x14DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1521 PUSH3 0xDDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1585 JUMPI PUSH3 0x1547 PUSH3 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x157C SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x16BF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16B6 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH3 0x17B2 SWAP2 SWAP1 PUSH3 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x1981 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH3 0x1806 PUSH3 0x14DB JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x182A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2CD5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x1869 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1866 SWAP2 SWAP1 PUSH3 0x2D40 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x18F3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x189C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x18A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x18EB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x18E2 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x197F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1976 SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x19AF DUP5 PUSH3 0x1C85 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x19D1 JUMPI PUSH3 0x19D0 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x1A04 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1A6C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1A5F JUMPI PUSH3 0x1A5E PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1A12 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x1AEE JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x1C2D JUMPI PUSH1 0x0 PUSH3 0x1B01 DUP5 PUSH3 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x1B6D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1B83 JUMPI POP PUSH3 0x1B81 DUP2 DUP5 PUSH3 0x1196 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x1BC8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BBF SWAP2 SWAP1 PUSH3 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x1C2B JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x1CE7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x1CDD JUMPI PUSH3 0x1CDC PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x1D28 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x1D1E JUMPI PUSH3 0x1D1D PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x1D5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x1D51 JUMPI PUSH3 0x1D50 PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x1D88 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x1D7E JUMPI PUSH3 0x1D7D PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x1DB1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x1DA7 JUMPI PUSH3 0x1DA6 PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x1DD8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x1DCE JUMPI PUSH3 0x1DCD PUSH3 0x2D72 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x1DE8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 DUP1 PUSH3 0x2DA2 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E4A DUP2 PUSH3 0x1E13 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1E6A DUP2 PUSH3 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1E89 JUMPI PUSH3 0x1E88 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1E99 DUP5 DUP3 DUP6 ADD PUSH3 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1EB9 DUP2 PUSH3 0x1EA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1ED6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1F18 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1EFB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F42 DUP3 PUSH3 0x1EDC JUMP JUMPDEST PUSH3 0x1F4E DUP2 DUP6 PUSH3 0x1EE7 JUMP JUMPDEST SWAP4 POP PUSH3 0x1F60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST PUSH3 0x1F6B DUP2 PUSH3 0x1F24 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1F92 DUP2 DUP5 PUSH3 0x1F35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FAF DUP2 PUSH3 0x1F9A JUMP JUMPDEST DUP2 EQ PUSH3 0x1FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1FCF DUP2 PUSH3 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1FEE JUMPI PUSH3 0x1FED PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FFE DUP5 DUP3 DUP6 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2034 DUP3 PUSH3 0x2007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2046 DUP2 PUSH3 0x2027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2063 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x203B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2074 DUP2 PUSH3 0x2027 JUMP JUMPDEST DUP2 EQ PUSH3 0x2080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2094 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x20B4 JUMPI PUSH3 0x20B3 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x20C4 DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x20D7 DUP6 DUP3 DUP7 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F6 DUP2 PUSH3 0x20E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2113 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2135 JUMPI PUSH3 0x2134 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2145 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2158 DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x216B DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2191 JUMPI PUSH3 0x2190 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21A1 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x21B4 DUP7 DUP3 DUP8 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x21C7 DUP7 DUP3 DUP8 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x21EA JUMPI PUSH3 0x21E9 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21FA DUP5 DUP3 DUP6 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x220E DUP2 PUSH3 0x1F9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x222B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x223C DUP2 PUSH3 0x1EA2 JUMP JUMPDEST DUP2 EQ PUSH3 0x2248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x225C DUP2 PUSH3 0x2231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x227C JUMPI PUSH3 0x227B PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x228C DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x229F DUP6 DUP3 DUP7 ADD PUSH3 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x22ED DUP3 PUSH3 0x1F24 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x230F JUMPI PUSH3 0x230E PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2324 PUSH3 0x1DFF JUMP JUMPDEST SWAP1 POP PUSH3 0x2332 DUP3 DUP3 PUSH3 0x22E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2355 JUMPI PUSH3 0x2354 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST PUSH3 0x2360 DUP3 PUSH3 0x1F24 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2393 PUSH3 0x238D DUP5 PUSH3 0x2337 JUMP JUMPDEST PUSH3 0x2318 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x23B2 JUMPI PUSH3 0x23B1 PUSH3 0x22AE JUMP JUMPDEST JUMPDEST PUSH3 0x23BF DUP5 DUP3 DUP6 PUSH3 0x236D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x23DF JUMPI PUSH3 0x23DE PUSH3 0x22A9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x23F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x237C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2417 JUMPI PUSH3 0x2416 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2427 DUP8 DUP3 DUP9 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x243A DUP8 DUP3 DUP9 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x244D DUP8 DUP3 DUP9 ADD PUSH3 0x1FBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2471 JUMPI PUSH3 0x2470 PUSH3 0x1E0E JUMP JUMPDEST JUMPDEST PUSH3 0x247F DUP8 DUP3 DUP9 ADD PUSH3 0x23C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B6 PUSH3 0x24B0 PUSH3 0x24AA DUP5 PUSH3 0x2007 JUMP JUMPDEST PUSH3 0x248B JUMP JUMPDEST PUSH3 0x2007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24CA DUP3 PUSH3 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24DE DUP3 PUSH3 0x24BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24F0 DUP2 PUSH3 0x24D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x250D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x24E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x252D JUMPI PUSH3 0x252C PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x253D DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2550 DUP6 DUP3 DUP7 ADD PUSH3 0x2083 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x25A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x25B8 JUMPI PUSH3 0x25B7 PUSH3 0x255A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25CF DUP2 PUSH3 0x2231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25EE JUMPI PUSH3 0x25ED PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x25FE DUP5 DUP3 DUP6 ADD PUSH3 0x25BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2643 DUP3 PUSH3 0x20E1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2678 JUMPI PUSH3 0x2677 PUSH3 0x2607 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A20636F6C6C656374696F6E20646F6573206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206578697374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26E1 PUSH1 0x28 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x26EE DUP3 PUSH3 0x2683 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2714 DUP2 PUSH3 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2732 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2741 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E73666572206F6620746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2074686174206973206E6F74206F776E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27A6 PUSH1 0x30 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x27B3 DUP3 PUSH3 0x2748 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x27D9 DUP2 PUSH3 0x2797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E7366657220746F20746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x283E PUSH1 0x2B DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x284B DUP3 PUSH3 0x27E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2871 DUP2 PUSH3 0x282F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A206361726420646F6573206E6F7420657869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28D6 PUSH1 0x22 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x28E3 DUP3 PUSH3 0x2878 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2909 DUP2 PUSH3 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x291D DUP3 PUSH3 0x2027 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x292F DUP2 PUSH3 0x2910 JUMP JUMPDEST DUP2 EQ PUSH3 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x294F DUP2 PUSH3 0x2924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x296E JUMPI PUSH3 0x296D PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x297E DUP5 DUP3 DUP6 ADD PUSH3 0x293E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2998 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x29B7 JUMPI PUSH3 0x29B6 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x29C7 DUP5 DUP3 DUP6 ADD PUSH3 0x2987 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29DD DUP3 PUSH3 0x1F9A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2A12 JUMPI PUSH3 0x2A11 PUSH3 0x2607 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A2E DUP2 PUSH3 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A4D JUMPI PUSH3 0x2A4C PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A5D DUP5 DUP3 DUP6 ADD PUSH3 0x2A1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A73 DUP3 PUSH3 0x1F9A JUMP JUMPDEST SWAP2 POP PUSH3 0x2A80 DUP4 PUSH3 0x1F9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x2A9B JUMPI PUSH3 0x2A9A PUSH3 0x2607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57697A6172640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD9 PUSH1 0x6 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x2AE6 DUP3 PUSH3 0x2AA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B1C PUSH3 0x2B16 PUSH3 0x2B10 DUP5 PUSH3 0x2AF1 JUMP JUMPDEST PUSH3 0x248B JUMP JUMPDEST PUSH3 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B2E DUP2 PUSH3 0x2AFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2B4F DUP2 PUSH3 0x2ACA JUMP JUMPDEST SWAP1 POP PUSH3 0x2B60 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2B23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x68747470733A2F2F696D616765732E706F6B656D6F6E7463672E696F2F787931 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2F312E706E670000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BC4 PUSH1 0x26 DUP4 PUSH3 0x1EE7 JUMP JUMPDEST SWAP2 POP PUSH3 0x2BD1 DUP3 PUSH3 0x2B66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2BF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2203 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2C06 DUP2 PUSH3 0x2BB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C26 DUP3 PUSH3 0x1EDC JUMP JUMPDEST PUSH3 0x2C32 DUP2 DUP6 PUSH3 0x2C0E JUMP JUMPDEST SWAP4 POP PUSH3 0x2C44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C5E DUP3 DUP6 PUSH3 0x2C19 JUMP JUMPDEST SWAP2 POP PUSH3 0x2C6C DUP3 DUP5 PUSH3 0x2C19 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CA1 DUP3 PUSH3 0x2C78 JUMP JUMPDEST PUSH3 0x2CAD DUP2 DUP6 PUSH3 0x2C83 JUMP JUMPDEST SWAP4 POP PUSH3 0x2CBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1EF8 JUMP JUMPDEST PUSH3 0x2CCA DUP2 PUSH3 0x1F24 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2CEC PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2CFB PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x203B JUMP JUMPDEST PUSH3 0x2D0A PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2203 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x2D1E DUP2 DUP5 PUSH3 0x2C94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D3A DUP2 PUSH3 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D59 JUMPI PUSH3 0x2D58 PUSH3 0x1E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D69 DUP5 DUP3 DUP6 ADD PUSH3 0x2D29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2682 CODESIZE SUB DUP1 PUSH3 0x2682 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xC1 DUP3 PUSH3 0x76 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8 PUSH3 0x58 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x76 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1EB JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH3 0x23F PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x260 PUSH3 0x67 JUMP JUMPDEST JUMPDEST PUSH3 0x26F DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x282 DUP6 DUP3 DUP7 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x297 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x320 JUMP JUMPDEST PUSH3 0x36B DUP7 DUP4 PUSH3 0x320 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AE PUSH3 0x3A8 PUSH3 0x3A2 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x383 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP4 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D9 DUP3 PUSH3 0x3B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x406 DUP2 DUP5 DUP5 PUSH3 0x3BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42E JUMPI PUSH3 0x422 PUSH1 0x0 DUP3 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x40C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x447 DUP2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x452 DUP5 PUSH3 0x310 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x462 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47A PUSH3 0x471 DUP6 PUSH3 0x310 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x482 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BD DUP4 DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D8 DUP3 PUSH3 0x28C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 SLOAD PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x50D DUP3 DUP3 DUP6 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x545 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x530 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x53C DUP6 DUP3 PUSH3 0x4AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x555 DUP7 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x558 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x59B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20BE DUP1 PUSH3 0x5C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x4C SHL 0x1E 0x28 CALLDATASIZE SWAP10 0xD1 MULMOD 0x26 CODESIZE SWAP8 PUSH17 0x22EFDD9A344C631BBA1F504BEA576EAB8D PUSH5 0x8164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"188:3998:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1725:277:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2926:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2065:536;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1417:302:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1134:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;236:54:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3761:423;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2677:255:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:27:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2636:256:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:2;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1725:277:13:-;1792:3;1812:5;1820:1;1812:9;;1807:170;1831:15;;1823:1;:24;1807:170;;;1872:15;:24;1893:1;1872:24;;;;;;;;;;;;;;;;;;;;;:43;;;1916:7;1872:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1868:99;;;1951:1;1944:8;;;;;1868:99;1849:3;;;;;:::i;:::-;;;;1807:170;;;;1993:2;1986:9;;1725:277;;;;:::o;2926:236::-;3033:15;;3014:16;:34;3006:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3104:15;:33;3120:16;3104:33;;;;;;;;;;;;;;;;;;;;;:38;;;3143:2;3147:7;3104:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:236;;;:::o;2065:536::-;2169:16;2177:7;2169;:16::i;:::-;2161:24;;:4;:24;;;2153:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:1;2256:16;;:2;:16;;;2248:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2330:20;2353:31;2376:7;2353:22;:31::i;:::-;2330:54;;2422:2;2402:16;:22;2394:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2474:15;:39;2495:16;2474:39;;;;;;;;;;;;;;;;;;;;;:47;;;2522:7;2474:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:74;;;2549:2;2474:78;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2586:7;2582:2;2567:27;;2576:4;2567:27;;;;;;;;;;;;2143:458;2065:536;;;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1417:302:13:-;1478:7;1502:9;1514:1;1502:13;;1497:189;1521:15;;1517:1;:19;1497:189;;;1557:13;1573:15;:18;1589:1;1573:18;;;;;;;;;;;;;;;;;;;;;:26;;;1600:7;1573:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1557:51;;1643:1;1626:19;;:5;:19;;;1622:53;;1670:5;1663:12;;;;;;1622:53;1543:143;1538:3;;;;;:::i;:::-;;;;1497:189;;;;1710:1;1695:17;;1417:302;;;;:::o;1134:235::-;1198:4;1214:7;1224:1;1214:11;;1240:6;1235:109;1256:15;;1252:1;:19;1235:109;;;1298:15;:18;1314:1;1298:18;;;;;;;;;;;;;;;;;;;;;:28;;;1327:5;1298:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:41;;;;;:::i;:::-;;;1273:3;;;;;:::i;:::-;;;;1235:109;;;;1360:2;1353:9;;;1134:235;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;236:54:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;3761:423::-;3814:7;3833:30;3895:1;3866:31;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3833:64;;3936:15;3901;:32;3917:15;;3901:32;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;3955:15;;:17;;;;;;;;;:::i;:::-;;;;;;3976:15;:18;3992:1;3976:18;;;;;;;;;;;;;;;;;;;;;:26;;;4003:10;3976:80;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4066:6;4075:15;:18;4091:1;4075:18;;;;;;;;;;;;;;;;;;;;;:26;;;4102:10;4075:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4066:47;;4176:3;4161:19;;;;3761:423;;;:::o;2677:255:2:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;296:27:13:-;;;;:::o;3928:153:2:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2636:256:13:-;2753:15;;2734:16;:34;2726:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2824:15;:33;2840:16;2824:33;;;;;;;;;;;;;;;;;;;;;:47;;;2872:2;2876:8;2824:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:256;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:2:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:7:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:2:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;12214:916:10:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:76::-;4926:7;4955:5;4944:16;;4890:76;;;:::o;4972:115::-;5057:23;5074:5;5057:23;:::i;:::-;5052:3;5045:36;4972:115;;:::o;5093:218::-;5184:4;5222:2;5211:9;5207:18;5199:26;;5235:69;5301:1;5290:9;5286:17;5277:6;5235:69;:::i;:::-;5093:218;;;;:::o;5317:619::-;5394:6;5402;5410;5459:2;5447:9;5438:7;5434:23;5430:32;5427:119;;;5465:79;;:::i;:::-;5427:119;5585:1;5610:53;5655:7;5646:6;5635:9;5631:22;5610:53;:::i;:::-;5600:63;;5556:117;5712:2;5738:53;5783:7;5774:6;5763:9;5759:22;5738:53;:::i;:::-;5728:63;;5683:118;5840:2;5866:53;5911:7;5902:6;5891:9;5887:22;5866:53;:::i;:::-;5856:63;;5811:118;5317:619;;;;;:::o;5942:::-;6019:6;6027;6035;6084:2;6072:9;6063:7;6059:23;6055:32;6052:119;;;6090:79;;:::i;:::-;6052:119;6210:1;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6181:117;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;5942:619;;;;;:::o;6567:329::-;6626:6;6675:2;6663:9;6654:7;6650:23;6646:32;6643:119;;;6681:79;;:::i;:::-;6643:119;6801:1;6826:53;6871:7;6862:6;6851:9;6847:22;6826:53;:::i;:::-;6816:63;;6772:117;6567:329;;;;:::o;6902:118::-;6989:24;7007:5;6989:24;:::i;:::-;6984:3;6977:37;6902:118;;:::o;7026:222::-;7119:4;7157:2;7146:9;7142:18;7134:26;;7170:71;7238:1;7227:9;7223:17;7214:6;7170:71;:::i;:::-;7026:222;;;;:::o;7254:116::-;7324:21;7339:5;7324:21;:::i;:::-;7317:5;7314:32;7304:60;;7360:1;7357;7350:12;7304:60;7254:116;:::o;7376:133::-;7419:5;7457:6;7444:20;7435:29;;7473:30;7497:5;7473:30;:::i;:::-;7376:133;;;;:::o;7515:468::-;7580:6;7588;7637:2;7625:9;7616:7;7612:23;7608:32;7605:119;;;7643:79;;:::i;:::-;7605:119;7763:1;7788:53;7833:7;7824:6;7813:9;7809:22;7788:53;:::i;:::-;7778:63;;7734:117;7890:2;7916:50;7958:7;7949:6;7938:9;7934:22;7916:50;:::i;:::-;7906:60;;7861:115;7515:468;;;;;:::o;7989:117::-;8098:1;8095;8088:12;8112:117;8221:1;8218;8211:12;8235:180;8283:77;8280:1;8273:88;8380:4;8377:1;8370:15;8404:4;8401:1;8394:15;8421:281;8504:27;8526:4;8504:27;:::i;:::-;8496:6;8492:40;8634:6;8622:10;8619:22;8598:18;8586:10;8583:34;8580:62;8577:88;;;8645:18;;:::i;:::-;8577:88;8685:10;8681:2;8674:22;8464:238;8421:281;;:::o;8708:129::-;8742:6;8769:20;;:::i;:::-;8759:30;;8798:33;8826:4;8818:6;8798:33;:::i;:::-;8708:129;;;:::o;8843:307::-;8904:4;8994:18;8986:6;8983:30;8980:56;;;9016:18;;:::i;:::-;8980:56;9054:29;9076:6;9054:29;:::i;:::-;9046:37;;9138:4;9132;9128:15;9120:23;;8843:307;;;:::o;9156:146::-;9253:6;9248:3;9243;9230:30;9294:1;9285:6;9280:3;9276:16;9269:27;9156:146;;;:::o;9308:423::-;9385:5;9410:65;9426:48;9467:6;9426:48;:::i;:::-;9410:65;:::i;:::-;9401:74;;9498:6;9491:5;9484:21;9536:4;9529:5;9525:16;9574:3;9565:6;9560:3;9556:16;9553:25;9550:112;;;9581:79;;:::i;:::-;9550:112;9671:54;9718:6;9713:3;9708;9671:54;:::i;:::-;9391:340;9308:423;;;;;:::o;9750:338::-;9805:5;9854:3;9847:4;9839:6;9835:17;9831:27;9821:122;;9862:79;;:::i;:::-;9821:122;9979:6;9966:20;10004:78;10078:3;10070:6;10063:4;10055:6;10051:17;10004:78;:::i;:::-;9995:87;;9811:277;9750:338;;;;:::o;10094:943::-;10189:6;10197;10205;10213;10262:3;10250:9;10241:7;10237:23;10233:33;10230:120;;;10269:79;;:::i;:::-;10230:120;10389:1;10414:53;10459:7;10450:6;10439:9;10435:22;10414:53;:::i;:::-;10404:63;;10360:117;10516:2;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;:::i;:::-;10532:63;;10487:118;10644:2;10670:53;10715:7;10706:6;10695:9;10691:22;10670:53;:::i;:::-;10660:63;;10615:118;10800:2;10789:9;10785:18;10772:32;10831:18;10823:6;10820:30;10817:117;;;10853:79;;:::i;:::-;10817:117;10958:62;11012:7;11003:6;10992:9;10988:22;10958:62;:::i;:::-;10948:72;;10743:287;10094:943;;;;;;;:::o;11043:60::-;11071:3;11092:5;11085:12;;11043:60;;;:::o;11109:142::-;11159:9;11192:53;11210:34;11219:24;11237:5;11219:24;:::i;:::-;11210:34;:::i;:::-;11192:53;:::i;:::-;11179:66;;11109:142;;;:::o;11257:126::-;11307:9;11340:37;11371:5;11340:37;:::i;:::-;11327:50;;11257:126;;;:::o;11389:149::-;11462:9;11495:37;11526:5;11495:37;:::i;:::-;11482:50;;11389:149;;;:::o;11544:177::-;11654:60;11708:5;11654:60;:::i;:::-;11649:3;11642:73;11544:177;;:::o;11727:268::-;11843:4;11881:2;11870:9;11866:18;11858:26;;11894:94;11985:1;11974:9;11970:17;11961:6;11894:94;:::i;:::-;11727:268;;;;:::o;12001:474::-;12069:6;12077;12126:2;12114:9;12105:7;12101:23;12097:32;12094:119;;;12132:79;;:::i;:::-;12094:119;12252:1;12277:53;12322:7;12313:6;12302:9;12298:22;12277:53;:::i;:::-;12267:63;;12223:117;12379:2;12405:53;12450:7;12441:6;12430:9;12426:22;12405:53;:::i;:::-;12395:63;;12350:118;12001:474;;;;;:::o;12481:180::-;12529:77;12526:1;12519:88;12626:4;12623:1;12616:15;12650:4;12647:1;12640:15;12667:320;12711:6;12748:1;12742:4;12738:12;12728:22;;12795:1;12789:4;12785:12;12816:18;12806:81;;12872:4;12864:6;12860:17;12850:27;;12806:81;12934:2;12926:6;12923:14;12903:18;12900:38;12897:84;;12953:18;;:::i;:::-;12897:84;12718:269;12667:320;;;:::o;12993:137::-;13047:5;13078:6;13072:13;13063:22;;13094:30;13118:5;13094:30;:::i;:::-;12993:137;;;;:::o;13136:345::-;13203:6;13252:2;13240:9;13231:7;13227:23;13223:32;13220:119;;;13258:79;;:::i;:::-;13220:119;13378:1;13403:61;13456:7;13447:6;13436:9;13432:22;13403:61;:::i;:::-;13393:71;;13349:125;13136:345;;;;:::o;13487:180::-;13535:77;13532:1;13525:88;13632:4;13629:1;13622:15;13656:4;13653:1;13646:15;13673:231;13711:3;13734:23;13751:5;13734:23;:::i;:::-;13725:32;;13779:66;13772:5;13769:77;13766:103;;13849:18;;:::i;:::-;13766:103;13896:1;13889:5;13885:13;13878:20;;13673:231;;;:::o;13910:227::-;14050:34;14046:1;14038:6;14034:14;14027:58;14119:10;14114:2;14106:6;14102:15;14095:35;13910:227;:::o;14143:366::-;14285:3;14306:67;14370:2;14365:3;14306:67;:::i;:::-;14299:74;;14382:93;14471:3;14382:93;:::i;:::-;14500:2;14495:3;14491:12;14484:19;;14143:366;;;:::o;14515:419::-;14681:4;14719:2;14708:9;14704:18;14696:26;;14768:9;14762:4;14758:20;14754:1;14743:9;14739:17;14732:47;14796:131;14922:4;14796:131;:::i;:::-;14788:139;;14515:419;;;:::o;14940:332::-;15061:4;15099:2;15088:9;15084:18;15076:26;;15112:71;15180:1;15169:9;15165:17;15156:6;15112:71;:::i;:::-;15193:72;15261:2;15250:9;15246:18;15237:6;15193:72;:::i;:::-;14940:332;;;;;:::o;15278:235::-;15418:34;15414:1;15406:6;15402:14;15395:58;15487:18;15482:2;15474:6;15470:15;15463:43;15278:235;:::o;15519:366::-;15661:3;15682:67;15746:2;15741:3;15682:67;:::i;:::-;15675:74;;15758:93;15847:3;15758:93;:::i;:::-;15876:2;15871:3;15867:12;15860:19;;15519:366;;;:::o;15891:419::-;16057:4;16095:2;16084:9;16080:18;16072:26;;16144:9;16138:4;16134:20;16130:1;16119:9;16115:17;16108:47;16172:131;16298:4;16172:131;:::i;:::-;16164:139;;15891:419;;;:::o;16316:230::-;16456:34;16452:1;16444:6;16440:14;16433:58;16525:13;16520:2;16512:6;16508:15;16501:38;16316:230;:::o;16552:366::-;16694:3;16715:67;16779:2;16774:3;16715:67;:::i;:::-;16708:74;;16791:93;16880:3;16791:93;:::i;:::-;16909:2;16904:3;16900:12;16893:19;;16552:366;;;:::o;16924:419::-;17090:4;17128:2;17117:9;17113:18;17105:26;;17177:9;17171:4;17167:20;17163:1;17152:9;17148:17;17141:47;17205:131;17331:4;17205:131;:::i;:::-;17197:139;;16924:419;;;:::o;17349:221::-;17489:34;17485:1;17477:6;17473:14;17466:58;17558:4;17553:2;17545:6;17541:15;17534:29;17349:221;:::o;17576:366::-;17718:3;17739:67;17803:2;17798:3;17739:67;:::i;:::-;17732:74;;17815:93;17904:3;17815:93;:::i;:::-;17933:2;17928:3;17924:12;17917:19;;17576:366;;;:::o;17948:419::-;18114:4;18152:2;18141:9;18137:18;18129:26;;18201:9;18195:4;18191:20;18187:1;18176:9;18172:17;18165:47;18229:131;18355:4;18229:131;:::i;:::-;18221:139;;17948:419;;;:::o;18373:109::-;18423:7;18452:24;18470:5;18452:24;:::i;:::-;18441:35;;18373:109;;;:::o;18488:148::-;18574:37;18605:5;18574:37;:::i;:::-;18567:5;18564:48;18554:76;;18626:1;18623;18616:12;18554:76;18488:148;:::o;18642:169::-;18712:5;18743:6;18737:13;18728:22;;18759:46;18799:5;18759:46;:::i;:::-;18642:169;;;;:::o;18817:377::-;18900:6;18949:2;18937:9;18928:7;18924:23;18920:32;18917:119;;;18955:79;;:::i;:::-;18917:119;19075:1;19100:77;19169:7;19160:6;19149:9;19145:22;19100:77;:::i;:::-;19090:87;;19046:141;18817:377;;;;:::o;19200:143::-;19257:5;19288:6;19282:13;19273:22;;19304:33;19331:5;19304:33;:::i;:::-;19200:143;;;;:::o;19349:351::-;19419:6;19468:2;19456:9;19447:7;19443:23;19439:32;19436:119;;;19474:79;;:::i;:::-;19436:119;19594:1;19619:64;19675:7;19666:6;19655:9;19651:22;19619:64;:::i;:::-;19609:74;;19565:128;19349:351;;;;:::o;19706:233::-;19745:3;19768:24;19786:5;19768:24;:::i;:::-;19759:33;;19814:66;19807:5;19804:77;19801:103;;19884:18;;:::i;:::-;19801:103;19931:1;19924:5;19920:13;19913:20;;19706:233;;;:::o;19945:143::-;20002:5;20033:6;20027:13;20018:22;;20049:33;20076:5;20049:33;:::i;:::-;19945:143;;;;:::o;20094:351::-;20164:6;20213:2;20201:9;20192:7;20188:23;20184:32;20181:119;;;20219:79;;:::i;:::-;20181:119;20339:1;20364:64;20420:7;20411:6;20400:9;20396:22;20364:64;:::i;:::-;20354:74;;20310:128;20094:351;;;;:::o;20451:191::-;20491:3;20510:20;20528:1;20510:20;:::i;:::-;20505:25;;20544:20;20562:1;20544:20;:::i;:::-;20539:25;;20587:1;20584;20580:9;20573:16;;20608:3;20605:1;20602:10;20599:36;;;20615:18;;:::i;:::-;20599:36;20451:191;;;;:::o;20648:156::-;20788:8;20784:1;20776:6;20772:14;20765:32;20648:156;:::o;20810:365::-;20952:3;20973:66;21037:1;21032:3;20973:66;:::i;:::-;20966:73;;21048:93;21137:3;21048:93;:::i;:::-;21166:2;21161:3;21157:12;21150:19;;20810:365;;;:::o;21181:85::-;21226:7;21255:5;21244:16;;21181:85;;;:::o;21272:158::-;21330:9;21363:61;21381:42;21390:32;21416:5;21390:32;:::i;:::-;21381:42;:::i;:::-;21363:61;:::i;:::-;21350:74;;21272:158;;;:::o;21436:147::-;21531:45;21570:5;21531:45;:::i;:::-;21526:3;21519:58;21436:147;;:::o;21589:545::-;21791:4;21829:2;21818:9;21814:18;21806:26;;21878:9;21872:4;21868:20;21864:1;21853:9;21849:17;21842:47;21906:131;22032:4;21906:131;:::i;:::-;21898:139;;22047:80;22123:2;22112:9;22108:18;22099:6;22047:80;:::i;:::-;21589:545;;;;:::o;22140:233::-;22280:34;22276:1;22268:6;22264:14;22257:58;22353:8;22348:2;22340:6;22336:15;22329:33;22140:233;:::o;22383:382::-;22525:3;22550:67;22614:2;22609:3;22550:67;:::i;:::-;22543:74;;22630:93;22719:3;22630:93;:::i;:::-;22752:2;22747:3;22743:12;22736:19;;22383:382;;;:::o;22775:549::-;22969:4;23011:2;23000:9;22996:18;22988:26;;23028:71;23096:1;23085:9;23081:17;23072:6;23028:71;:::i;:::-;23150:9;23144:4;23140:20;23135:2;23124:9;23120:18;23113:48;23182:131;23308:4;23182:131;:::i;:::-;23174:139;;22775:549;;;;:::o;23334:156::-;23436:11;23477:3;23462:18;;23334:156;;;;:::o;23500:410::-;23606:3;23638:39;23671:5;23638:39;:::i;:::-;23697:89;23779:6;23774:3;23697:89;:::i;:::-;23690:96;;23799:65;23857:6;23852:3;23845:4;23838:5;23834:16;23799:65;:::i;:::-;23893:6;23888:3;23884:16;23877:23;;23610:300;23500:410;;;;:::o;23920:451::-;24100:3;24126:95;24217:3;24208:6;24126:95;:::i;:::-;24119:102;;24242:95;24333:3;24324:6;24242:95;:::i;:::-;24235:102;;24358:3;24351:10;;23920:451;;;;;:::o;24381:106::-;24432:6;24470:5;24464:12;24454:22;;24381:106;;;:::o;24497:180::-;24580:11;24618:6;24613:3;24606:19;24662:4;24657:3;24653:14;24638:29;;24497:180;;;;:::o;24687:393::-;24773:3;24805:38;24837:5;24805:38;:::i;:::-;24863:70;24926:6;24921:3;24863:70;:::i;:::-;24856:77;;24946:65;25004:6;24999:3;24992:4;24985:5;24981:16;24946:65;:::i;:::-;25040:29;25062:6;25040:29;:::i;:::-;25035:3;25031:39;25024:46;;24777:303;24687:393;;;;:::o;25090:668::-;25285:4;25327:3;25316:9;25312:19;25304:27;;25345:71;25413:1;25402:9;25398:17;25389:6;25345:71;:::i;:::-;25430:72;25498:2;25487:9;25483:18;25474:6;25430:72;:::i;:::-;25516;25584:2;25573:9;25569:18;25560:6;25516:72;:::i;:::-;25639:9;25633:4;25629:20;25624:2;25613:9;25609:18;25602:48;25671:76;25742:4;25733:6;25671:76;:::i;:::-;25663:84;;25090:668;;;;;;;:::o;25768:153::-;25824:5;25859:6;25853:13;25844:22;;25879:32;25905:5;25879:32;:::i;:::-;25768:153;;;;:::o;25931:373::-;26000:6;26053:2;26041:9;26032:7;26028:23;26024:32;26021:119;;;26059:79;;:::i;:::-;26021:119;26187:1;26216:63;26271:7;26262:6;26251:9;26247:22;26216:63;:::i;:::-;26206:73;;26154:139;25931:373;;;;:::o;26314:196::-;26366:77;26363:1;26356:88;26467:4;26464:1;26457:15;26495:4;26492:1;26485:15"},"gasEstimates":{"creation":{"codeDepositCost":"4318600","executionCost":"infinite","totalCost":"infinite"},"external":{"addACard(uint256)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"infinite","cardCollections(uint256)":"infinite","collectionCount()":"2495","getApproved(uint256)":"infinite","getCollectionNbForCard(uint256)":"infinite","isApprovedForAll(address,address)":"infinite","mint(address,uint256,uint256)":"infinite","mintSomeCards(address,uint256,uint256)":"infinite","name()":"infinite","owner()":"2545","ownerOf(uint256)":"infinite","renounceOwnership()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"addACard(uint256)":"bf874103","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cardCollections(uint256)":"bc4f6def","collectionCount()":"d57f966b","getApproved(uint256)":"081812fc","getCollectionNbForCard(uint256)":"0abc4a78","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256)":"156e29f6","mintSomeCards(address,uint256,uint256)":"f7374d11","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cardNumber\",\"type\":\"uint256\"}],\"name\":\"addACard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardCollections\",\"outputs\":[{\"internalType\":\"contract GameCollection\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCollectionNbForCard\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionNumber\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionNumber\",\"type\":\"uint256\"}],\"name\":\"mintSomeCards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CardOwnership.sol\":\"CardOwnership\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"src/Card.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Card is Ownable {\\n    // string public name;\\n    uint private id;\\n    string private imgLink;\\n\\n    constructor(uint _id, string memory _imgLink) Ownable(msg.sender) {\\n        id = _id;\\n        imgLink = _imgLink;\\n    }\\n\\n    function getId() public view returns (uint) {\\n        return id;\\n    }\\n\\n    function getImgLink() public view returns (string memory) {\\n        return imgLink;\\n    }\\n\\n    function transferOwnership(address to) public override onlyOwner {\\n        transferOwnership(to); // TODO : v\\u00e9rifier si \\u00e7a fonctionne\\n    }\\n}\",\"keccak256\":\"0xb150de000f85ce66be92e5b34cec2986a9546d33857f1d593bd202370fc47b6f\"},\"src/CardOwnership.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./Card.sol\\\";\\nimport \\\"./GameCollection.sol\\\";\\n\\ncontract CardOwnership is Ownable, ERC721 {\\n    mapping(uint => GameCollection) public cardCollections;\\n    uint public collectionCount;\\n    // mapping (uint => address) cardsApprovals;\\n\\n    constructor() Ownable(msg.sender) ERC721(\\\"Card\\\", \\\"CARD\\\") {\\n    }\\n\\n    // // R\\u00e9cup\\u00e8re une carte\\n    // function mint(address to, uint tokenId, uint collectionNumber) public {\\n    //     require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n    //     uint numberOfCards = cardCollections[collectionNumber].getCardCount();\\n\\n    //     for (uint i = 0; i < numberOfCards; i++) {\\n    //         if (cardCollections[collectionNumber].cards[i].owner() == address(0)) {\\n    //             // _safeMint(to, tokenId);\\n    //             cardCollections[collectionNumber].cards[i].transferOwnership(to);\\n    //             break;\\n    //         }\\n    //     }\\n    // }\\n    \\n    // Donne le nombre de cartes d'un utilisateur\\n    function balanceOf(address owner) public view override returns (uint) {\\n        uint nb = 0;\\n        for (uint i = 0; i < collectionCount; i++) {\\n            nb += cardCollections[i].balanceOf(owner);\\n        }\\n        return nb;\\n    }\\n\\n    // Donne le propri\\u00e9taire d'une carte\\n    function ownerOf(uint tokenId) public view override returns (address) {\\n        for (uint256 i = 0; i < collectionCount; i++) {\\n            address owner = cardCollections[i].ownerOf(tokenId);\\n            if (owner != address(0))\\n                return owner;\\n        }\\n        return address(0);\\n    }\\n\\n    function getCollectionNbForCard(uint tokenId) public view returns (int) {\\n        for (int i = 0; i < int(collectionCount); i++) {\\n            if (cardCollections[uint(i)].isCardInCollection(tokenId)) {\\n                return i;\\n            }\\n        }\\n        return -1;\\n    }\\n\\n    // Transf\\u00e8re une carte d'un utilisateur \\u00e0 un autre\\n    function transferFrom(address from, address to, uint tokenId) public override {\\n        require(from == ownerOf(tokenId), \\\"CardOwnership: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"CardOwnership: transfer to the zero address\\\");\\n        int collectionNumber = getCollectionNbForCard(tokenId);\\n        require(collectionNumber != -1, \\\"CardOwnership: card does not exist\\\");\\n\\n        cardCollections[uint(collectionNumber)].getCard(tokenId).transferOwnership(to);\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    // R\\u00e9cup\\u00e8re des cartes\\n    function mintSomeCards(address to, uint quantity, uint collectionNumber) public {\\n        require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n\\n        cardCollections[collectionNumber].mintSomeCards(to, quantity);\\n    }\\n\\n    // R\\u00e9cup\\u00e8re une carte\\n    function mint(address to, uint tokenId, uint collectionNumber) public {\\n        require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n\\n        cardCollections[collectionNumber].mint(to, tokenId);\\n    }\\n\\n    /*function safeTransferFrom(address from, address to, uint tokenId, bytes data){\\n\\n    }\\n\\n    function safeTransferFrom(address from, address to, uint tokenId){\\n\\n    }\\n\\n    function approve(address to, uint tokenId) public view onlyOwner() {\\n        cardsApprovals[tokenId] = to;\\n        Approval(msg.sender, to, tokenId);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public view {\\n        ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function getApproved(uint tokenId){\\n\\n    }\\n\\n    function isApprovedForAll(address owner, bool operator){\\n\\n    }*/\\n\\n    function addACard(uint cardNumber) external returns (address) {\\n        GameCollection gameCollections = new GameCollection(\\\"Wizard\\\", 0);\\n\\t\\tcardCollections[collectionCount] = gameCollections;\\n\\t\\tcollectionCount++;\\n\\t\\tcardCollections[0].addCard(cardNumber, \\\"https://images.pokemontcg.io/xy1/1.png\\\");\\n        Card c = cardCollections[0].getCard(cardNumber);\\n        \\n        // return c.owner();\\n        return address(666);\\n\\t}\\n}\",\"keccak256\":\"0xd01c709435f079c9edd03b9526e9518407199bcd64f95135a19ae2235e4206df\"},\"src/GameCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"./Card.sol\\\";\\n\\ncontract GameCollection {\\n\\tstring public name;\\n\\tuint public cardCount;\\n\\tmapping(uint => Card) public cards;\\n\\n\\tconstructor(string memory _name, uint _cardCount) {\\n\\t\\tname = _name;\\n\\t\\tcardCount = _cardCount;\\n\\t}\\n\\n\\t// Donne le nombre de carte de la collection\\n\\tfunction getCardCount() public view returns (uint) {\\n\\t\\treturn cardCount;\\n\\t}\\n\\n\\t// Donne le nom de la collection\\n\\tfunction getName() public view returns (string memory) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\tfunction isCardInCollection(uint tokenId) public view returns (bool) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\n\\tfunction getCard(uint tokenId) public view returns (Card) {\\n\\t\\treturn cards[tokenId];\\n\\t}\\n\\n\\t// Donne le nombre de carte d'un utilisateur\\n\\tfunction balanceOf(address owner) public view returns (uint) {\\n\\t\\tuint nb = 0;\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == owner) {\\n\\t\\t\\t\\tnb++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn nb;\\n\\t}\\n\\n\\t// Donne l'adresse du propri\\u00e9taire d'une carte\\n\\tfunction ownerOf(uint tokenId) public view returns (address) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn cards[i].owner();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Ajoute une carte \\u00e0 la collection\\n\\tfunction addCard(uint id, string memory imgLink) public {\\n\\t\\tcards[cardCount++] = new Card(id, imgLink);\\n\\t}\\n\\n\\t// Mint une carte de la collection\\n\\tfunction mint(address to) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0)) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Mint une carte pr\\u00e9cise de la collection\\n\\tfunction mint(address to, uint tokenId) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0) && cards[i].getId() == tokenId) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Donne un nombre de carte d\\u00e9finit \\u00e0 un utilisateur\\n\\tfunction mintSomeCards(address to, uint quantity) public {\\n\\t\\tfor (uint i = 0; i < quantity; i++) { //TODO : ajouter des s\\u00e9curit\\u00e9s il ne faut pas ajouter une carte s'il n'y en a plus assez \\u00e0 mint\\n\\t\\t\\tmint(to);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x2aff66616a9ebee2c12151acb035cd42b69c05a27c0108624de356220166ae45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"src/CardOwnership.sol:CardOwnership","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":317,"contract":"src/CardOwnership.sol:CardOwnership","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":319,"contract":"src/CardOwnership.sol:CardOwnership","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":323,"contract":"src/CardOwnership.sol:CardOwnership","label":"_owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"src/CardOwnership.sol:CardOwnership","label":"_balances","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"src/CardOwnership.sol:CardOwnership","label":"_tokenApprovals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"src/CardOwnership.sol:CardOwnership","label":"_operatorApprovals","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3002,"contract":"src/CardOwnership.sol:CardOwnership","label":"cardCollections","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_contract(GameCollection)3593)"},{"astId":3004,"contract":"src/CardOwnership.sol:CardOwnership","label":"collectionCount","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(GameCollection)3593":{"encoding":"inplace","label":"contract GameCollection","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_contract(GameCollection)3593)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => contract GameCollection)","numberOfBytes":"32","value":"t_contract(GameCollection)3593"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/GameCollection.sol":{"GameCollection":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"_cardCount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"imgLink","type":"string"}],"name":"addCard","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cardCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"cards","outputs":[{"internalType":"contract Card","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCard","outputs":[{"internalType":"contract Card","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCardCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isCardInCollection","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"mintSomeCards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3327":{"entryPoint":null,"id":3327,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":365,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory":{"entryPoint":550,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":236,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":88,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":267,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":763,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":652,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1074,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":491,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1035,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":909,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1229,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":321,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":784,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":710,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1199,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":182,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":899,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1167,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":663,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":135,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":949,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":108,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":113,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":103,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":98,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":118,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":800,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1154,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":813,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":959,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":501,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1002,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8678:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1672:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:16"},"nodeType":"YulFunctionCall","src":"1791:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:16"},"nodeType":"YulFunctionCall","src":"1785:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:39:16"},"nodeType":"YulExpressionStatement","src":"1765:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:16"},"nodeType":"YulFunctionCall","src":"1709:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:16","statements":[{"nodeType":"YulAssignment","src":"1725:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:16","statements":[]},"src":"1701:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:16"},"nodeType":"YulFunctionCall","src":"1830:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:16"},"nodeType":"YulFunctionCall","src":"1823:27:16"},"nodeType":"YulExpressionStatement","src":"1823:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:16","type":""}],"src":"1610:246:16"},{"body":{"nodeType":"YulBlock","src":"1957:339:16","statements":[{"nodeType":"YulAssignment","src":"1967:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:16"},"nodeType":"YulFunctionCall","src":"1992:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:16"},"nodeType":"YulFunctionCall","src":"1976:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:16"},"nodeType":"YulFunctionCall","src":"2051:21:16"},"nodeType":"YulExpressionStatement","src":"2051:21:16"},{"nodeType":"YulVariableDeclaration","src":"2081:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:16"},"nodeType":"YulFunctionCall","src":"2092:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:16"},"nodeType":"YulFunctionCall","src":"2148:79:16"},"nodeType":"YulExpressionStatement","src":"2148:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:16"},"nodeType":"YulFunctionCall","src":"2123:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:16"},"nodeType":"YulFunctionCall","src":"2120:25:16"},"nodeType":"YulIf","src":"2117:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:16"},"nodeType":"YulFunctionCall","src":"2238:52:16"},"nodeType":"YulExpressionStatement","src":"2238:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:16","type":""}],"src":"1862:434:16"},{"body":{"nodeType":"YulBlock","src":"2389:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:16"},"nodeType":"YulFunctionCall","src":"2440:79:16"},"nodeType":"YulExpressionStatement","src":"2440:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:16"},"nodeType":"YulFunctionCall","src":"2413:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:35:16"},"nodeType":"YulIf","src":"2399:122:16"},{"nodeType":"YulVariableDeclaration","src":"2530:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:16"},"nodeType":"YulFunctionCall","src":"2544:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:16"},"nodeType":"YulFunctionCall","src":"2575:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:16","type":""}],"src":"2316:355:16"},{"body":{"nodeType":"YulBlock","src":"2722:32:16","statements":[{"nodeType":"YulAssignment","src":"2732:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2743:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:16","type":""}],"src":"2677:77:16"},{"body":{"nodeType":"YulBlock","src":"2803:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2860:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:16"},"nodeType":"YulFunctionCall","src":"2862:12:16"},"nodeType":"YulExpressionStatement","src":"2862:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2833:17:16"},"nodeType":"YulFunctionCall","src":"2833:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:16"},"nodeType":"YulFunctionCall","src":"2823:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:16"},"nodeType":"YulFunctionCall","src":"2816:43:16"},"nodeType":"YulIf","src":"2813:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:16","type":""}],"src":"2760:122:16"},{"body":{"nodeType":"YulBlock","src":"2951:80:16","statements":[{"nodeType":"YulAssignment","src":"2961:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:16"},"nodeType":"YulFunctionCall","src":"2970:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3019:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2992:26:16"},"nodeType":"YulFunctionCall","src":"2992:33:16"},"nodeType":"YulExpressionStatement","src":"2992:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2937:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2945:5:16","type":""}],"src":"2888:143:16"},{"body":{"nodeType":"YulBlock","src":"3141:576:16","statements":[{"body":{"nodeType":"YulBlock","src":"3187:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3189:77:16"},"nodeType":"YulFunctionCall","src":"3189:79:16"},"nodeType":"YulExpressionStatement","src":"3189:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3162:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3158:3:16"},"nodeType":"YulFunctionCall","src":"3158:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3183:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3154:3:16"},"nodeType":"YulFunctionCall","src":"3154:32:16"},"nodeType":"YulIf","src":"3151:119:16"},{"nodeType":"YulBlock","src":"3280:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3295:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3330:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:16"},"nodeType":"YulFunctionCall","src":"3315:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3309:5:16"},"nodeType":"YulFunctionCall","src":"3309:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3299:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:16"},"nodeType":"YulFunctionCall","src":"3382:79:16"},"nodeType":"YulExpressionStatement","src":"3382:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:16"},"nodeType":"YulFunctionCall","src":"3349:30:16"},"nodeType":"YulIf","src":"3346:117:16"},{"nodeType":"YulAssignment","src":"3477:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:16"},"nodeType":"YulFunctionCall","src":"3529:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:16"},"nodeType":"YulFunctionCall","src":"3487:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3477:6:16"}]}]},{"nodeType":"YulBlock","src":"3581:129:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3596:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3610:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3600:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3626:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3683:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:16"},"nodeType":"YulFunctionCall","src":"3668:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3692:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3636:31:16"},"nodeType":"YulFunctionCall","src":"3636:64:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3626:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3103:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3114:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3126:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3134:6:16","type":""}],"src":"3037:680:16"},{"body":{"nodeType":"YulBlock","src":"3782:40:16","statements":[{"nodeType":"YulAssignment","src":"3793:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3809:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3803:5:16"},"nodeType":"YulFunctionCall","src":"3803:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3793:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3765:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3775:6:16","type":""}],"src":"3723:99:16"},{"body":{"nodeType":"YulBlock","src":"3856:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3873:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3876:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3866:6:16"},"nodeType":"YulFunctionCall","src":"3866:88:16"},"nodeType":"YulExpressionStatement","src":"3866:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3970:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3973:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:16"},"nodeType":"YulFunctionCall","src":"3963:15:16"},"nodeType":"YulExpressionStatement","src":"3963:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3994:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3997:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3987:6:16"},"nodeType":"YulFunctionCall","src":"3987:15:16"},"nodeType":"YulExpressionStatement","src":"3987:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3828:180:16"},{"body":{"nodeType":"YulBlock","src":"4065:269:16","statements":[{"nodeType":"YulAssignment","src":"4075:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4089:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4095:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4085:3:16"},"nodeType":"YulFunctionCall","src":"4085:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4075:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"4106:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4136:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"4142:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4132:3:16"},"nodeType":"YulFunctionCall","src":"4132:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4110:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4183:51:16","statements":[{"nodeType":"YulAssignment","src":"4197:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4211:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4219:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4207:3:16"},"nodeType":"YulFunctionCall","src":"4207:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4197:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4163:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4156:6:16"},"nodeType":"YulFunctionCall","src":"4156:26:16"},"nodeType":"YulIf","src":"4153:81:16"},{"body":{"nodeType":"YulBlock","src":"4286:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4300:16:16"},"nodeType":"YulFunctionCall","src":"4300:18:16"},"nodeType":"YulExpressionStatement","src":"4300:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4250:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4273:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4281:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4270:2:16"},"nodeType":"YulFunctionCall","src":"4270:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4247:2:16"},"nodeType":"YulFunctionCall","src":"4247:38:16"},"nodeType":"YulIf","src":"4244:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4049:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4058:6:16","type":""}],"src":"4014:320:16"},{"body":{"nodeType":"YulBlock","src":"4394:87:16","statements":[{"nodeType":"YulAssignment","src":"4404:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4412:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4404:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4432:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4435:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4425:6:16"},"nodeType":"YulFunctionCall","src":"4425:14:16"},"nodeType":"YulExpressionStatement","src":"4425:14:16"},{"nodeType":"YulAssignment","src":"4448:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4466:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4469:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4456:9:16"},"nodeType":"YulFunctionCall","src":"4456:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4448:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4381:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4389:4:16","type":""}],"src":"4340:141:16"},{"body":{"nodeType":"YulBlock","src":"4531:49:16","statements":[{"nodeType":"YulAssignment","src":"4541:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4559:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4555:3:16"},"nodeType":"YulFunctionCall","src":"4555:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4571:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4551:3:16"},"nodeType":"YulFunctionCall","src":"4551:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4541:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4514:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4524:6:16","type":""}],"src":"4487:93:16"},{"body":{"nodeType":"YulBlock","src":"4639:54:16","statements":[{"nodeType":"YulAssignment","src":"4649:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4674:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"4680:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4670:3:16"},"nodeType":"YulFunctionCall","src":"4670:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4649:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4614:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"4620:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4630:8:16","type":""}],"src":"4586:107:16"},{"body":{"nodeType":"YulBlock","src":"4775:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4785:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4806:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4818:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4802:3:16"},"nodeType":"YulFunctionCall","src":"4802:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4789:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4829:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4860:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4871:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4841:18:16"},"nodeType":"YulFunctionCall","src":"4841:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4833:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4947:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4978:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4989:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4959:18:16"},"nodeType":"YulFunctionCall","src":"4959:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4947:8:16"}]},{"nodeType":"YulAssignment","src":"5007:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5020:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5031:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5027:3:16"},"nodeType":"YulFunctionCall","src":"5027:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5016:3:16"},"nodeType":"YulFunctionCall","src":"5016:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5007:5:16"}]},{"nodeType":"YulAssignment","src":"5046:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5059:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5070:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"5080:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5066:3:16"},"nodeType":"YulFunctionCall","src":"5066:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5056:2:16"},"nodeType":"YulFunctionCall","src":"5056:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5046:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4736:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4743:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4755:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4768:6:16","type":""}],"src":"4699:393:16"},{"body":{"nodeType":"YulBlock","src":"5130:28:16","statements":[{"nodeType":"YulAssignment","src":"5140:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5147:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5140:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5116:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5126:3:16","type":""}],"src":"5098:60:16"},{"body":{"nodeType":"YulBlock","src":"5224:82:16","statements":[{"nodeType":"YulAssignment","src":"5234:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5292:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5274:17:16"},"nodeType":"YulFunctionCall","src":"5274:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5265:8:16"},"nodeType":"YulFunctionCall","src":"5265:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5247:17:16"},"nodeType":"YulFunctionCall","src":"5247:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5234:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5204:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5214:9:16","type":""}],"src":"5164:142:16"},{"body":{"nodeType":"YulBlock","src":"5359:28:16","statements":[{"nodeType":"YulAssignment","src":"5369:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5376:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5369:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5345:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5355:3:16","type":""}],"src":"5312:75:16"},{"body":{"nodeType":"YulBlock","src":"5469:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5479:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5534:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5503:30:16"},"nodeType":"YulFunctionCall","src":"5503:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5483:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5558:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5598:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5592:5:16"},"nodeType":"YulFunctionCall","src":"5592:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5605:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5637:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5613:23:16"},"nodeType":"YulFunctionCall","src":"5613:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5564:27:16"},"nodeType":"YulFunctionCall","src":"5564:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5551:6:16"},"nodeType":"YulFunctionCall","src":"5551:105:16"},"nodeType":"YulExpressionStatement","src":"5551:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5446:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5452:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5460:7:16","type":""}],"src":"5393:269:16"},{"body":{"nodeType":"YulBlock","src":"5717:24:16","statements":[{"nodeType":"YulAssignment","src":"5727:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5734:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5727:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5713:3:16","type":""}],"src":"5668:73:16"},{"body":{"nodeType":"YulBlock","src":"5800:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5810:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5824:30:16"},"nodeType":"YulFunctionCall","src":"5824:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5814:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5909:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5915:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5923:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5865:43:16"},"nodeType":"YulFunctionCall","src":"5865:65:16"},"nodeType":"YulExpressionStatement","src":"5865:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5786:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5792:6:16","type":""}],"src":"5747:189:16"},{"body":{"nodeType":"YulBlock","src":"5992:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"6059:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6103:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6110:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6073:29:16"},"nodeType":"YulFunctionCall","src":"6073:39:16"},"nodeType":"YulExpressionStatement","src":"6073:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6012:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"6019:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6009:2:16"},"nodeType":"YulFunctionCall","src":"6009:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6024:26:16","statements":[{"nodeType":"YulAssignment","src":"6026:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6039:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6046:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6035:3:16"},"nodeType":"YulFunctionCall","src":"6035:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6026:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6006:2:16","statements":[]},"src":"6002:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5980:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5987:3:16","type":""}],"src":"5942:186:16"},{"body":{"nodeType":"YulBlock","src":"6213:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"6239:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6253:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6301:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6269:31:16"},"nodeType":"YulFunctionCall","src":"6269:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6257:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6320:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6343:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6371:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6353:17:16"},"nodeType":"YulFunctionCall","src":"6353:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6339:3:16"},"nodeType":"YulFunctionCall","src":"6339:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6324:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6540:27:16","statements":[{"nodeType":"YulAssignment","src":"6542:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6557:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6542:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6524:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6536:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6521:2:16"},"nodeType":"YulFunctionCall","src":"6521:18:16"},"nodeType":"YulIf","src":"6518:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6609:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6626:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6654:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6636:17:16"},"nodeType":"YulFunctionCall","src":"6636:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6622:3:16"},"nodeType":"YulFunctionCall","src":"6622:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6580:28:16"},"nodeType":"YulFunctionCall","src":"6580:80:16"},"nodeType":"YulExpressionStatement","src":"6580:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6230:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6235:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6227:2:16"},"nodeType":"YulFunctionCall","src":"6227:11:16"},"nodeType":"YulIf","src":"6224:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6189:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6196:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6201:10:16","type":""}],"src":"6134:543:16"},{"body":{"nodeType":"YulBlock","src":"6746:54:16","statements":[{"nodeType":"YulAssignment","src":"6756:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6781:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"6787:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6777:3:16"},"nodeType":"YulFunctionCall","src":"6777:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6756:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6721:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"6727:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6737:8:16","type":""}],"src":"6683:117:16"},{"body":{"nodeType":"YulBlock","src":"6857:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6867:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6916:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6919:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6912:3:16"},"nodeType":"YulFunctionCall","src":"6912:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6931:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6927:3:16"},"nodeType":"YulFunctionCall","src":"6927:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6883:28:16"},"nodeType":"YulFunctionCall","src":"6883:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6879:3:16"},"nodeType":"YulFunctionCall","src":"6879:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6871:4:16","type":""}]},{"nodeType":"YulAssignment","src":"6944:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6958:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"6964:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6954:3:16"},"nodeType":"YulFunctionCall","src":"6954:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6944:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6834:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6840:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6850:6:16","type":""}],"src":"6806:169:16"},{"body":{"nodeType":"YulBlock","src":"7061:214:16","statements":[{"nodeType":"YulAssignment","src":"7194:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7221:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"7227:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7202:18:16"},"nodeType":"YulFunctionCall","src":"7202:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7194:4:16"}]},{"nodeType":"YulAssignment","src":"7240:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7251:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7261:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7264:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7257:3:16"},"nodeType":"YulFunctionCall","src":"7257:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7248:2:16"},"nodeType":"YulFunctionCall","src":"7248:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7240:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7042:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"7048:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7056:4:16","type":""}],"src":"6980:295:16"},{"body":{"nodeType":"YulBlock","src":"7372:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7383:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7430:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7397:32:16"},"nodeType":"YulFunctionCall","src":"7397:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7387:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7519:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7521:16:16"},"nodeType":"YulFunctionCall","src":"7521:18:16"},"nodeType":"YulExpressionStatement","src":"7521:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7491:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7499:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7488:2:16"},"nodeType":"YulFunctionCall","src":"7488:30:16"},"nodeType":"YulIf","src":"7485:56:16"},{"nodeType":"YulVariableDeclaration","src":"7551:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7597:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7591:5:16"},"nodeType":"YulFunctionCall","src":"7591:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7565:25:16"},"nodeType":"YulFunctionCall","src":"7565:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7555:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7696:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7702:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7710:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7650:45:16"},"nodeType":"YulFunctionCall","src":"7650:67:16"},"nodeType":"YulExpressionStatement","src":"7650:67:16"},{"nodeType":"YulVariableDeclaration","src":"7727:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7744:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7731:9:16","type":""}]},{"nodeType":"YulAssignment","src":"7755:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7768:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7755:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7819:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7833:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7852:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7864:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7860:3:16"},"nodeType":"YulFunctionCall","src":"7860:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7848:3:16"},"nodeType":"YulFunctionCall","src":"7848:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7837:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7884:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7930:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7898:31:16"},"nodeType":"YulFunctionCall","src":"7898:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7888:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7948:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7957:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7952:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8016:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8041:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8059:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8064:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8055:3:16"},"nodeType":"YulFunctionCall","src":"8055:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8049:5:16"},"nodeType":"YulFunctionCall","src":"8049:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8034:6:16"},"nodeType":"YulFunctionCall","src":"8034:42:16"},"nodeType":"YulExpressionStatement","src":"8034:42:16"},{"nodeType":"YulAssignment","src":"8093:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8107:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8115:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8103:3:16"},"nodeType":"YulFunctionCall","src":"8103:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8093:6:16"}]},{"nodeType":"YulAssignment","src":"8134:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8151:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8162:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8147:3:16"},"nodeType":"YulFunctionCall","src":"8147:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8134:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7982:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7985:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7979:2:16"},"nodeType":"YulFunctionCall","src":"7979:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7994:21:16","statements":[{"nodeType":"YulAssignment","src":"7996:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8005:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"8008:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8001:3:16"},"nodeType":"YulFunctionCall","src":"8001:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7996:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7975:3:16","statements":[]},"src":"7971:208:16"},{"body":{"nodeType":"YulBlock","src":"8215:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8233:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8260:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8265:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8256:3:16"},"nodeType":"YulFunctionCall","src":"8256:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8250:5:16"},"nodeType":"YulFunctionCall","src":"8250:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8237:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8300:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8327:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8342:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8350:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8338:3:16"},"nodeType":"YulFunctionCall","src":"8338:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8308:18:16"},"nodeType":"YulFunctionCall","src":"8308:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8293:6:16"},"nodeType":"YulFunctionCall","src":"8293:64:16"},"nodeType":"YulExpressionStatement","src":"8293:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8198:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8207:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8195:2:16"},"nodeType":"YulFunctionCall","src":"8195:19:16"},"nodeType":"YulIf","src":"8192:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8391:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8405:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8413:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8401:3:16"},"nodeType":"YulFunctionCall","src":"8401:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"8417:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:16"},"nodeType":"YulFunctionCall","src":"8397:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8384:6:16"},"nodeType":"YulFunctionCall","src":"8384:36:16"},"nodeType":"YulExpressionStatement","src":"8384:36:16"}]},"nodeType":"YulCase","src":"7812:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7817:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8447:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8461:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8474:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8465:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8498:67:16","statements":[{"nodeType":"YulAssignment","src":"8516:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8535:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8540:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8531:3:16"},"nodeType":"YulFunctionCall","src":"8531:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8525:5:16"},"nodeType":"YulFunctionCall","src":"8525:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8516:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8491:6:16"},"nodeType":"YulIf","src":"8488:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8585:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8644:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8651:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8591:52:16"},"nodeType":"YulFunctionCall","src":"8591:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8578:6:16"},"nodeType":"YulFunctionCall","src":"8578:81:16"},"nodeType":"YulExpressionStatement","src":"8578:81:16"}]},"nodeType":"YulCase","src":"8439:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7792:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7800:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7789:2:16"},"nodeType":"YulFunctionCall","src":"7789:14:16"},"nodeType":"YulSwitch","src":"7782:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7361:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"7367:3:16","type":""}],"src":"7280:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2682 CODESIZE SUB DUP1 PUSH3 0x2682 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xC1 DUP3 PUSH3 0x76 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8 PUSH3 0x58 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x76 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1EB JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH3 0x23F PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x260 PUSH3 0x67 JUMP JUMPDEST JUMPDEST PUSH3 0x26F DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x282 DUP6 DUP3 DUP7 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x297 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x320 JUMP JUMPDEST PUSH3 0x36B DUP7 DUP4 PUSH3 0x320 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AE PUSH3 0x3A8 PUSH3 0x3A2 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x383 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP4 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D9 DUP3 PUSH3 0x3B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x406 DUP2 DUP5 DUP5 PUSH3 0x3BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42E JUMPI PUSH3 0x422 PUSH1 0x0 DUP3 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x40C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x447 DUP2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x452 DUP5 PUSH3 0x310 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x462 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47A PUSH3 0x471 DUP6 PUSH3 0x310 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x482 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BD DUP4 DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D8 DUP3 PUSH3 0x28C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 SLOAD PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x50D DUP3 DUP3 DUP6 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x545 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x530 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x53C DUP6 DUP3 PUSH3 0x4AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x555 DUP7 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x558 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x59B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20BE DUP1 PUSH3 0x5C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"77:2107:14:-:0;;;187:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;248:5;241:4;:12;;;;;;:::i;:::-;;269:10;257:9;:22;;;;187:96;;77:2107;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:680::-;3126:6;3134;3183:2;3171:9;3162:7;3158:23;3154:32;3151:119;;;3189:79;;:::i;:::-;3151:119;3330:1;3319:9;3315:17;3309:24;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3280:291;3610:2;3636:64;3692:7;3683:6;3672:9;3668:22;3636:64;:::i;:::-;3626:74;;3581:129;3037:680;;;;;:::o;3723:99::-;3775:6;3809:5;3803:12;3793:22;;3723:99;;;:::o;3828:180::-;3876:77;3873:1;3866:88;3973:4;3970:1;3963:15;3997:4;3994:1;3987:15;4014:320;4058:6;4095:1;4089:4;4085:12;4075:22;;4142:1;4136:4;4132:12;4163:18;4153:81;;4219:4;4211:6;4207:17;4197:27;;4153:81;4281:2;4273:6;4270:14;4250:18;4247:38;4244:84;;4300:18;;:::i;:::-;4244:84;4065:269;4014:320;;;:::o;4340:141::-;4389:4;4412:3;4404:11;;4435:3;4432:1;4425:14;4469:4;4466:1;4456:18;4448:26;;4340:141;;;:::o;4487:93::-;4524:6;4571:2;4566;4559:5;4555:14;4551:23;4541:33;;4487:93;;;:::o;4586:107::-;4630:8;4680:5;4674:4;4670:16;4649:37;;4586:107;;;;:::o;4699:393::-;4768:6;4818:1;4806:10;4802:18;4841:97;4871:66;4860:9;4841:97;:::i;:::-;4959:39;4989:8;4978:9;4959:39;:::i;:::-;4947:51;;5031:4;5027:9;5020:5;5016:21;5007:30;;5080:4;5070:8;5066:19;5059:5;5056:30;5046:40;;4775:317;;4699:393;;;;;:::o;5098:60::-;5126:3;5147:5;5140:12;;5098:60;;;:::o;5164:142::-;5214:9;5247:53;5265:34;5274:24;5292:5;5274:24;:::i;:::-;5265:34;:::i;:::-;5247:53;:::i;:::-;5234:66;;5164:142;;;:::o;5312:75::-;5355:3;5376:5;5369:12;;5312:75;;;:::o;5393:269::-;5503:39;5534:7;5503:39;:::i;:::-;5564:91;5613:41;5637:16;5613:41;:::i;:::-;5605:6;5598:4;5592:11;5564:91;:::i;:::-;5558:4;5551:105;5469:193;5393:269;;;:::o;5668:73::-;5713:3;5668:73;:::o;5747:189::-;5824:32;;:::i;:::-;5865:65;5923:6;5915;5909:4;5865:65;:::i;:::-;5800:136;5747:189;;:::o;5942:186::-;6002:120;6019:3;6012:5;6009:14;6002:120;;;6073:39;6110:1;6103:5;6073:39;:::i;:::-;6046:1;6039:5;6035:13;6026:22;;6002:120;;;5942:186;;:::o;6134:543::-;6235:2;6230:3;6227:11;6224:446;;;6269:38;6301:5;6269:38;:::i;:::-;6353:29;6371:10;6353:29;:::i;:::-;6343:8;6339:44;6536:2;6524:10;6521:18;6518:49;;;6557:8;6542:23;;6518:49;6580:80;6636:22;6654:3;6636:22;:::i;:::-;6626:8;6622:37;6609:11;6580:80;:::i;:::-;6239:431;;6224:446;6134:543;;;:::o;6683:117::-;6737:8;6787:5;6781:4;6777:16;6756:37;;6683:117;;;;:::o;6806:169::-;6850:6;6883:51;6931:1;6927:6;6919:5;6916:1;6912:13;6883:51;:::i;:::-;6879:56;6964:4;6958;6954:15;6944:25;;6857:118;6806:169;;;;:::o;6980:295::-;7056:4;7202:29;7227:3;7221:4;7202:29;:::i;:::-;7194:37;;7264:3;7261:1;7257:11;7251:4;7248:21;7240:29;;6980:295;;;;:::o;7280:1395::-;7397:37;7430:3;7397:37;:::i;:::-;7499:18;7491:6;7488:30;7485:56;;;7521:18;;:::i;:::-;7485:56;7565:38;7597:4;7591:11;7565:38;:::i;:::-;7650:67;7710:6;7702;7696:4;7650:67;:::i;:::-;7744:1;7768:4;7755:17;;7800:2;7792:6;7789:14;7817:1;7812:618;;;;8474:1;8491:6;8488:77;;;8540:9;8535:3;8531:19;8525:26;8516:35;;8488:77;8591:67;8651:6;8644:5;8591:67;:::i;:::-;8585:4;8578:81;8447:222;7782:887;;7812:618;7864:4;7860:9;7852:6;7848:22;7898:37;7930:4;7898:37;:::i;:::-;7957:1;7971:208;7985:7;7982:1;7979:14;7971:208;;;8064:9;8059:3;8055:19;8049:26;8041:6;8034:42;8115:1;8107:6;8103:14;8093:24;;8162:2;8151:9;8147:18;8134:31;;8008:4;8005:1;8001:12;7996:17;;7971:208;;;8207:6;8198:7;8195:19;8192:179;;;8265:9;8260:3;8256:19;8250:26;8308:48;8350:4;8342:6;8338:17;8327:9;8308:48;:::i;:::-;8300:6;8293:64;8215:156;8192:179;8417:1;8413;8405:6;8401:14;8397:22;8391:4;8384:36;7819:611;;;7782:887;;7372:1303;;;7280:1395;;:::o;77:2107:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@addCard_3482":{"entryPoint":3140,"id":3482,"parameterSlots":2,"returnSlots":0},"@balanceOf_3427":{"entryPoint":2497,"id":3427,"parameterSlots":1,"returnSlots":1},"@cardCount_3306":{"entryPoint":1069,"id":3306,"parameterSlots":0,"returnSlots":0},"@cards_3311":{"entryPoint":2793,"id":3311,"parameterSlots":0,"returnSlots":0},"@getCardCount_3335":{"entryPoint":2783,"id":3335,"parameterSlots":0,"returnSlots":1},"@getCard_3389":{"entryPoint":2844,"id":3389,"parameterSlots":1,"returnSlots":1},"@getName_3343":{"entryPoint":915,"id":3343,"parameterSlots":0,"returnSlots":1},"@isCardInCollection_3376":{"entryPoint":2905,"id":3376,"parameterSlots":1,"returnSlots":1},"@mintSomeCards_3592":{"entryPoint":3308,"id":3592,"parameterSlots":2,"returnSlots":0},"@mint_3520":{"entryPoint":2072,"id":3520,"parameterSlots":1,"returnSlots":0},"@mint_3568":{"entryPoint":1075,"id":3568,"parameterSlots":2,"returnSlots":0},"@name_3304":{"entryPoint":765,"id":3304,"parameterSlots":0,"returnSlots":0},"@ownerOf_3462":{"entryPoint":1678,"id":3462,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":4410,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4738,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":4485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":4761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3788,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":4536,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4153,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_Card_$2987_to_t_address_fromStack":{"entryPoint":4095,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3926,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_Card_$2987__to_t_address__fromStack_reversed":{"entryPoint":4112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5008,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":4310,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3618,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4341,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3372,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3383,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3670,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4141,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3562,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Card_$2987_to_t_address":{"entryPoint":4075,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4015,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4395,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3400,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4685,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4256,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4005,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4931,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4884,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4638,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4209,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4199,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4204,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3633,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3628,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3444,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3690,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3739,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10874:16","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:16","statements":[{"nodeType":"YulAssignment","src":"77:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:16"},"nodeType":"YulFunctionCall","src":"87:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:16","type":""}],"src":"7:99:16"},{"body":{"nodeType":"YulBlock","src":"208:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:16"},"nodeType":"YulFunctionCall","src":"218:19:16"},"nodeType":"YulExpressionStatement","src":"218:19:16"},{"nodeType":"YulAssignment","src":"246:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:16"},"nodeType":"YulFunctionCall","src":"261:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:16","type":""}],"src":"112:169:16"},{"body":{"nodeType":"YulBlock","src":"349:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:16"},"nodeType":"YulFunctionCall","src":"449:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:16"},"nodeType":"YulFunctionCall","src":"468:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:16"},"nodeType":"YulFunctionCall","src":"462:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:16"},"nodeType":"YulFunctionCall","src":"442:39:16"},"nodeType":"YulExpressionStatement","src":"442:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:16"},"nodeType":"YulFunctionCall","src":"386:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:16","statements":[{"nodeType":"YulAssignment","src":"402:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:16"},"nodeType":"YulFunctionCall","src":"407:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:16","statements":[]},"src":"378:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:16"},"nodeType":"YulFunctionCall","src":"507:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:16"},"nodeType":"YulFunctionCall","src":"500:27:16"},"nodeType":"YulExpressionStatement","src":"500:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:16","type":""}],"src":"287:246:16"},{"body":{"nodeType":"YulBlock","src":"587:54:16","statements":[{"nodeType":"YulAssignment","src":"597:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:16"},"nodeType":"YulFunctionCall","src":"611:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:16"},"nodeType":"YulFunctionCall","src":"627:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:16"},"nodeType":"YulFunctionCall","src":"607:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:16","type":""}],"src":"539:102:16"},{"body":{"nodeType":"YulBlock","src":"739:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:16"},"nodeType":"YulFunctionCall","src":"763:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:16","type":""}]},{"nodeType":"YulAssignment","src":"811:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:16"},"nodeType":"YulFunctionCall","src":"818:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:16"},"nodeType":"YulFunctionCall","src":"933:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:16"},"nodeType":"YulFunctionCall","src":"898:65:16"},"nodeType":"YulExpressionStatement","src":"898:65:16"},{"nodeType":"YulAssignment","src":"972:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:16"},"nodeType":"YulFunctionCall","src":"988:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:16"},"nodeType":"YulFunctionCall","src":"979:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:16","type":""}],"src":"647:377:16"},{"body":{"nodeType":"YulBlock","src":"1148:195:16","statements":[{"nodeType":"YulAssignment","src":"1158:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:16"},"nodeType":"YulFunctionCall","src":"1166:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:16"},"nodeType":"YulFunctionCall","src":"1201:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:16"},"nodeType":"YulFunctionCall","src":"1220:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:16"},"nodeType":"YulFunctionCall","src":"1194:47:16"},"nodeType":"YulExpressionStatement","src":"1194:47:16"},{"nodeType":"YulAssignment","src":"1250:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:16"},"nodeType":"YulFunctionCall","src":"1258:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:16","type":""}],"src":"1030:313:16"},{"body":{"nodeType":"YulBlock","src":"1394:32:16","statements":[{"nodeType":"YulAssignment","src":"1404:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1415:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1404:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1386:7:16","type":""}],"src":"1349:77:16"},{"body":{"nodeType":"YulBlock","src":"1497:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1514:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1537:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1519:17:16"},"nodeType":"YulFunctionCall","src":"1519:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1507:6:16"},"nodeType":"YulFunctionCall","src":"1507:37:16"},"nodeType":"YulExpressionStatement","src":"1507:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1492:3:16","type":""}],"src":"1432:118:16"},{"body":{"nodeType":"YulBlock","src":"1654:124:16","statements":[{"nodeType":"YulAssignment","src":"1664:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1676:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1687:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:16"},"nodeType":"YulFunctionCall","src":"1672:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1768:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:16"},"nodeType":"YulFunctionCall","src":"1753:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1700:43:16"},"nodeType":"YulFunctionCall","src":"1700:71:16"},"nodeType":"YulExpressionStatement","src":"1700:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1626:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1638:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1649:4:16","type":""}],"src":"1556:222:16"},{"body":{"nodeType":"YulBlock","src":"1824:35:16","statements":[{"nodeType":"YulAssignment","src":"1834:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:16"},"nodeType":"YulFunctionCall","src":"1844:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:16","type":""}],"src":"1784:75:16"},{"body":{"nodeType":"YulBlock","src":"1954:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:16"},"nodeType":"YulFunctionCall","src":"1964:12:16"},"nodeType":"YulExpressionStatement","src":"1964:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:16"},{"body":{"nodeType":"YulBlock","src":"2077:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:16"},"nodeType":"YulFunctionCall","src":"2087:12:16"},"nodeType":"YulExpressionStatement","src":"2087:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:16"},{"body":{"nodeType":"YulBlock","src":"2156:81:16","statements":[{"nodeType":"YulAssignment","src":"2166:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2181:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2188:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2177:3:16"},"nodeType":"YulFunctionCall","src":"2177:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2166:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2138:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2148:7:16","type":""}],"src":"2111:126:16"},{"body":{"nodeType":"YulBlock","src":"2288:51:16","statements":[{"nodeType":"YulAssignment","src":"2298:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2327:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2309:17:16"},"nodeType":"YulFunctionCall","src":"2309:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2298:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2270:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2280:7:16","type":""}],"src":"2243:96:16"},{"body":{"nodeType":"YulBlock","src":"2388:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2445:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2454:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2457:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2447:6:16"},"nodeType":"YulFunctionCall","src":"2447:12:16"},"nodeType":"YulExpressionStatement","src":"2447:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2411:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2436:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2418:17:16"},"nodeType":"YulFunctionCall","src":"2418:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2408:2:16"},"nodeType":"YulFunctionCall","src":"2408:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2401:6:16"},"nodeType":"YulFunctionCall","src":"2401:43:16"},"nodeType":"YulIf","src":"2398:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2381:5:16","type":""}],"src":"2345:122:16"},{"body":{"nodeType":"YulBlock","src":"2525:87:16","statements":[{"nodeType":"YulAssignment","src":"2535:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2557:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2544:12:16"},"nodeType":"YulFunctionCall","src":"2544:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2600:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2573:26:16"},"nodeType":"YulFunctionCall","src":"2573:33:16"},"nodeType":"YulExpressionStatement","src":"2573:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2511:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2519:5:16","type":""}],"src":"2473:139:16"},{"body":{"nodeType":"YulBlock","src":"2661:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2720:6:16"},"nodeType":"YulFunctionCall","src":"2720:12:16"},"nodeType":"YulExpressionStatement","src":"2720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2684:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2691:17:16"},"nodeType":"YulFunctionCall","src":"2691:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2681:2:16"},"nodeType":"YulFunctionCall","src":"2681:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2674:6:16"},"nodeType":"YulFunctionCall","src":"2674:43:16"},"nodeType":"YulIf","src":"2671:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2654:5:16","type":""}],"src":"2618:122:16"},{"body":{"nodeType":"YulBlock","src":"2798:87:16","statements":[{"nodeType":"YulAssignment","src":"2808:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:16"},"nodeType":"YulFunctionCall","src":"2817:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2873:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2846:26:16"},"nodeType":"YulFunctionCall","src":"2846:33:16"},"nodeType":"YulExpressionStatement","src":"2846:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2784:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2792:5:16","type":""}],"src":"2746:139:16"},{"body":{"nodeType":"YulBlock","src":"2974:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"3020:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3022:77:16"},"nodeType":"YulFunctionCall","src":"3022:79:16"},"nodeType":"YulExpressionStatement","src":"3022:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2995:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2991:3:16"},"nodeType":"YulFunctionCall","src":"2991:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2987:3:16"},"nodeType":"YulFunctionCall","src":"2987:32:16"},"nodeType":"YulIf","src":"2984:119:16"},{"nodeType":"YulBlock","src":"3113:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3128:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3142:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3132:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3157:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:16"},"nodeType":"YulFunctionCall","src":"3188:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3212:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3167:20:16"},"nodeType":"YulFunctionCall","src":"3167:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3157:6:16"}]}]},{"nodeType":"YulBlock","src":"3240:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3269:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3285:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:16"},"nodeType":"YulFunctionCall","src":"3316:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3340:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3295:20:16"},"nodeType":"YulFunctionCall","src":"3295:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3285:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2959:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2967:6:16","type":""}],"src":"2891:474:16"},{"body":{"nodeType":"YulBlock","src":"3437:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3483:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3485:77:16"},"nodeType":"YulFunctionCall","src":"3485:79:16"},"nodeType":"YulExpressionStatement","src":"3485:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3458:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3454:3:16"},"nodeType":"YulFunctionCall","src":"3454:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3479:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3450:3:16"},"nodeType":"YulFunctionCall","src":"3450:32:16"},"nodeType":"YulIf","src":"3447:119:16"},{"nodeType":"YulBlock","src":"3576:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3591:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3605:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3595:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3620:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3666:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:16"},"nodeType":"YulFunctionCall","src":"3651:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3675:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3630:20:16"},"nodeType":"YulFunctionCall","src":"3630:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3620:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3407:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3418:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3430:6:16","type":""}],"src":"3371:329:16"},{"body":{"nodeType":"YulBlock","src":"3771:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3788:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3811:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3793:17:16"},"nodeType":"YulFunctionCall","src":"3793:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3781:6:16"},"nodeType":"YulFunctionCall","src":"3781:37:16"},"nodeType":"YulExpressionStatement","src":"3781:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3759:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3766:3:16","type":""}],"src":"3706:118:16"},{"body":{"nodeType":"YulBlock","src":"3928:124:16","statements":[{"nodeType":"YulAssignment","src":"3938:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3950:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3961:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3946:3:16"},"nodeType":"YulFunctionCall","src":"3946:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3938:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4018:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4042:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:16"},"nodeType":"YulFunctionCall","src":"4027:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3974:43:16"},"nodeType":"YulFunctionCall","src":"3974:71:16"},"nodeType":"YulExpressionStatement","src":"3974:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3912:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3923:4:16","type":""}],"src":"3830:222:16"},{"body":{"nodeType":"YulBlock","src":"4124:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"4170:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4172:77:16"},"nodeType":"YulFunctionCall","src":"4172:79:16"},"nodeType":"YulExpressionStatement","src":"4172:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4145:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4141:3:16"},"nodeType":"YulFunctionCall","src":"4141:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4137:3:16"},"nodeType":"YulFunctionCall","src":"4137:32:16"},"nodeType":"YulIf","src":"4134:119:16"},{"nodeType":"YulBlock","src":"4263:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4278:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4292:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4282:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4307:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4342:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4353:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4338:3:16"},"nodeType":"YulFunctionCall","src":"4338:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4362:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4317:20:16"},"nodeType":"YulFunctionCall","src":"4317:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4307:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4094:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4105:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4117:6:16","type":""}],"src":"4058:329:16"},{"body":{"nodeType":"YulBlock","src":"4425:28:16","statements":[{"nodeType":"YulAssignment","src":"4435:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4442:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4435:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4411:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4421:3:16","type":""}],"src":"4393:60:16"},{"body":{"nodeType":"YulBlock","src":"4519:82:16","statements":[{"nodeType":"YulAssignment","src":"4529:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4587:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4569:17:16"},"nodeType":"YulFunctionCall","src":"4569:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4560:8:16"},"nodeType":"YulFunctionCall","src":"4560:34:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4542:17:16"},"nodeType":"YulFunctionCall","src":"4542:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4529:9:16"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4499:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4509:9:16","type":""}],"src":"4459:142:16"},{"body":{"nodeType":"YulBlock","src":"4667:66:16","statements":[{"nodeType":"YulAssignment","src":"4677:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4721:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4690:30:16"},"nodeType":"YulFunctionCall","src":"4690:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4677:9:16"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4647:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4657:9:16","type":""}],"src":"4607:126:16"},{"body":{"nodeType":"YulBlock","src":"4812:66:16","statements":[{"nodeType":"YulAssignment","src":"4822:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4866:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4835:30:16"},"nodeType":"YulFunctionCall","src":"4835:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4822:9:16"}]}]},"name":"convert_t_contract$_Card_$2987_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4792:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4802:9:16","type":""}],"src":"4739:139:16"},{"body":{"nodeType":"YulBlock","src":"4962:79:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4979:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5028:5:16"}],"functionName":{"name":"convert_t_contract$_Card_$2987_to_t_address","nodeType":"YulIdentifier","src":"4984:43:16"},"nodeType":"YulFunctionCall","src":"4984:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4972:6:16"},"nodeType":"YulFunctionCall","src":"4972:63:16"},"nodeType":"YulExpressionStatement","src":"4972:63:16"}]},"name":"abi_encode_t_contract$_Card_$2987_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4950:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4957:3:16","type":""}],"src":"4884:157:16"},{"body":{"nodeType":"YulBlock","src":"5158:137:16","statements":[{"nodeType":"YulAssignment","src":"5168:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:16"},"nodeType":"YulFunctionCall","src":"5176:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5261:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5274:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5285:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:16"},"nodeType":"YulFunctionCall","src":"5270:17:16"}],"functionName":{"name":"abi_encode_t_contract$_Card_$2987_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5204:56:16"},"nodeType":"YulFunctionCall","src":"5204:84:16"},"nodeType":"YulExpressionStatement","src":"5204:84:16"}]},"name":"abi_encode_tuple_t_contract$_Card_$2987__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:16","type":""}],"src":"5047:248:16"},{"body":{"nodeType":"YulBlock","src":"5343:48:16","statements":[{"nodeType":"YulAssignment","src":"5353:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5378:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5371:6:16"},"nodeType":"YulFunctionCall","src":"5371:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5364:6:16"},"nodeType":"YulFunctionCall","src":"5364:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5353:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5325:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5335:7:16","type":""}],"src":"5301:90:16"},{"body":{"nodeType":"YulBlock","src":"5456:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5473:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5493:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5478:14:16"},"nodeType":"YulFunctionCall","src":"5478:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5466:6:16"},"nodeType":"YulFunctionCall","src":"5466:34:16"},"nodeType":"YulExpressionStatement","src":"5466:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5444:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5451:3:16","type":""}],"src":"5397:109:16"},{"body":{"nodeType":"YulBlock","src":"5604:118:16","statements":[{"nodeType":"YulAssignment","src":"5614:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5637:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:16"},"nodeType":"YulFunctionCall","src":"5622:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5614:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5688:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5712:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5697:3:16"},"nodeType":"YulFunctionCall","src":"5697:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5650:37:16"},"nodeType":"YulFunctionCall","src":"5650:65:16"},"nodeType":"YulExpressionStatement","src":"5650:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5576:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5588:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5599:4:16","type":""}],"src":"5512:210:16"},{"body":{"nodeType":"YulBlock","src":"5817:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:16"},"nodeType":"YulFunctionCall","src":"5827:12:16"},"nodeType":"YulExpressionStatement","src":"5827:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5728:117:16"},{"body":{"nodeType":"YulBlock","src":"5940:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5957:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5960:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5950:6:16"},"nodeType":"YulFunctionCall","src":"5950:12:16"},"nodeType":"YulExpressionStatement","src":"5950:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5851:117:16"},{"body":{"nodeType":"YulBlock","src":"6002:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6019:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6022:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6012:6:16"},"nodeType":"YulFunctionCall","src":"6012:88:16"},"nodeType":"YulExpressionStatement","src":"6012:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6116:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6119:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6109:6:16"},"nodeType":"YulFunctionCall","src":"6109:15:16"},"nodeType":"YulExpressionStatement","src":"6109:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6140:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6143:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6133:6:16"},"nodeType":"YulFunctionCall","src":"6133:15:16"},"nodeType":"YulExpressionStatement","src":"6133:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5974:180:16"},{"body":{"nodeType":"YulBlock","src":"6203:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6213:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6235:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6265:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6243:21:16"},"nodeType":"YulFunctionCall","src":"6243:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6231:3:16"},"nodeType":"YulFunctionCall","src":"6231:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6217:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6382:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6384:16:16"},"nodeType":"YulFunctionCall","src":"6384:18:16"},"nodeType":"YulExpressionStatement","src":"6384:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6325:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6337:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6322:2:16"},"nodeType":"YulFunctionCall","src":"6322:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6361:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6373:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6358:2:16"},"nodeType":"YulFunctionCall","src":"6358:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6319:2:16"},"nodeType":"YulFunctionCall","src":"6319:62:16"},"nodeType":"YulIf","src":"6316:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6420:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6424:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6413:6:16"},"nodeType":"YulFunctionCall","src":"6413:22:16"},"nodeType":"YulExpressionStatement","src":"6413:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6189:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"6197:4:16","type":""}],"src":"6160:281:16"},{"body":{"nodeType":"YulBlock","src":"6488:88:16","statements":[{"nodeType":"YulAssignment","src":"6498:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6508:18:16"},"nodeType":"YulFunctionCall","src":"6508:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6498:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6557:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"6565:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6537:19:16"},"nodeType":"YulFunctionCall","src":"6537:33:16"},"nodeType":"YulExpressionStatement","src":"6537:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6472:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6481:6:16","type":""}],"src":"6447:129:16"},{"body":{"nodeType":"YulBlock","src":"6649:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"6754:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6756:16:16"},"nodeType":"YulFunctionCall","src":"6756:18:16"},"nodeType":"YulExpressionStatement","src":"6756:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6726:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6734:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6723:2:16"},"nodeType":"YulFunctionCall","src":"6723:30:16"},"nodeType":"YulIf","src":"6720:56:16"},{"nodeType":"YulAssignment","src":"6786:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6816:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6794:21:16"},"nodeType":"YulFunctionCall","src":"6794:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6786:4:16"}]},{"nodeType":"YulAssignment","src":"6860:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6872:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6878:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:16"},"nodeType":"YulFunctionCall","src":"6868:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6860:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6633:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6644:4:16","type":""}],"src":"6582:308:16"},{"body":{"nodeType":"YulBlock","src":"6960:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6983:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"6988:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6993:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6970:12:16"},"nodeType":"YulFunctionCall","src":"6970:30:16"},"nodeType":"YulExpressionStatement","src":"6970:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7020:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7025:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7016:3:16"},"nodeType":"YulFunctionCall","src":"7016:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"7034:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7009:6:16"},"nodeType":"YulFunctionCall","src":"7009:27:16"},"nodeType":"YulExpressionStatement","src":"7009:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6942:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6947:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6952:6:16","type":""}],"src":"6896:146:16"},{"body":{"nodeType":"YulBlock","src":"7132:341:16","statements":[{"nodeType":"YulAssignment","src":"7142:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7209:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7167:41:16"},"nodeType":"YulFunctionCall","src":"7167:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7151:15:16"},"nodeType":"YulFunctionCall","src":"7151:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7142:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7233:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"7240:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7226:6:16"},"nodeType":"YulFunctionCall","src":"7226:21:16"},"nodeType":"YulExpressionStatement","src":"7226:21:16"},{"nodeType":"YulVariableDeclaration","src":"7256:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7271:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7278:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7267:3:16"},"nodeType":"YulFunctionCall","src":"7267:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7260:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7321:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7323:77:16"},"nodeType":"YulFunctionCall","src":"7323:79:16"},"nodeType":"YulExpressionStatement","src":"7323:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7302:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7307:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7298:3:16"},"nodeType":"YulFunctionCall","src":"7298:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"7316:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7295:2:16"},"nodeType":"YulFunctionCall","src":"7295:25:16"},"nodeType":"YulIf","src":"7292:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7450:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"7455:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7460:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7413:36:16"},"nodeType":"YulFunctionCall","src":"7413:54:16"},"nodeType":"YulExpressionStatement","src":"7413:54:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7105:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7110:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7118:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7126:5:16","type":""}],"src":"7048:425:16"},{"body":{"nodeType":"YulBlock","src":"7555:278:16","statements":[{"body":{"nodeType":"YulBlock","src":"7604:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7606:77:16"},"nodeType":"YulFunctionCall","src":"7606:79:16"},"nodeType":"YulExpressionStatement","src":"7606:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7583:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7591:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:16"},"nodeType":"YulFunctionCall","src":"7579:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"7598:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7575:3:16"},"nodeType":"YulFunctionCall","src":"7575:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7568:6:16"},"nodeType":"YulFunctionCall","src":"7568:35:16"},"nodeType":"YulIf","src":"7565:122:16"},{"nodeType":"YulVariableDeclaration","src":"7696:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7723:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7710:12:16"},"nodeType":"YulFunctionCall","src":"7710:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7700:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7739:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7808:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7796:3:16"},"nodeType":"YulFunctionCall","src":"7796:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"7823:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7748:47:16"},"nodeType":"YulFunctionCall","src":"7748:79:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7739:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7533:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7541:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7549:5:16","type":""}],"src":"7493:340:16"},{"body":{"nodeType":"YulBlock","src":"7932:561:16","statements":[{"body":{"nodeType":"YulBlock","src":"7978:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7980:77:16"},"nodeType":"YulFunctionCall","src":"7980:79:16"},"nodeType":"YulExpressionStatement","src":"7980:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7953:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7962:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7949:3:16"},"nodeType":"YulFunctionCall","src":"7949:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7974:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7945:3:16"},"nodeType":"YulFunctionCall","src":"7945:32:16"},"nodeType":"YulIf","src":"7942:119:16"},{"nodeType":"YulBlock","src":"8071:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8086:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8100:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8090:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8115:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8150:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8161:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8146:3:16"},"nodeType":"YulFunctionCall","src":"8146:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8170:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8125:20:16"},"nodeType":"YulFunctionCall","src":"8125:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8115:6:16"}]}]},{"nodeType":"YulBlock","src":"8198:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8213:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8244:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8255:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:16"},"nodeType":"YulFunctionCall","src":"8240:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8227:12:16"},"nodeType":"YulFunctionCall","src":"8227:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8217:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8306:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8308:77:16"},"nodeType":"YulFunctionCall","src":"8308:79:16"},"nodeType":"YulExpressionStatement","src":"8308:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8278:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8286:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8275:2:16"},"nodeType":"YulFunctionCall","src":"8275:30:16"},"nodeType":"YulIf","src":"8272:117:16"},{"nodeType":"YulAssignment","src":"8403:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8448:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8459:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:16"},"nodeType":"YulFunctionCall","src":"8444:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8468:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8413:30:16"},"nodeType":"YulFunctionCall","src":"8413:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8403:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7894:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7905:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7917:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7925:6:16","type":""}],"src":"7839:654:16"},{"body":{"nodeType":"YulBlock","src":"8527:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8544:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8547:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8537:6:16"},"nodeType":"YulFunctionCall","src":"8537:88:16"},"nodeType":"YulExpressionStatement","src":"8537:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8641:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8644:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8634:6:16"},"nodeType":"YulFunctionCall","src":"8634:15:16"},"nodeType":"YulExpressionStatement","src":"8634:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8665:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8668:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8658:6:16"},"nodeType":"YulFunctionCall","src":"8658:15:16"},"nodeType":"YulExpressionStatement","src":"8658:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8499:180:16"},{"body":{"nodeType":"YulBlock","src":"8736:269:16","statements":[{"nodeType":"YulAssignment","src":"8746:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8760:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8766:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8756:3:16"},"nodeType":"YulFunctionCall","src":"8756:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8746:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"8777:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8807:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8813:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8803:3:16"},"nodeType":"YulFunctionCall","src":"8803:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8781:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8854:51:16","statements":[{"nodeType":"YulAssignment","src":"8868:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8882:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8890:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8878:3:16"},"nodeType":"YulFunctionCall","src":"8878:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8868:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8834:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8827:6:16"},"nodeType":"YulFunctionCall","src":"8827:26:16"},"nodeType":"YulIf","src":"8824:81:16"},{"body":{"nodeType":"YulBlock","src":"8957:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8971:16:16"},"nodeType":"YulFunctionCall","src":"8971:18:16"},"nodeType":"YulExpressionStatement","src":"8971:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8921:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8944:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8952:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8941:2:16"},"nodeType":"YulFunctionCall","src":"8941:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8918:2:16"},"nodeType":"YulFunctionCall","src":"8918:38:16"},"nodeType":"YulIf","src":"8915:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8720:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8729:6:16","type":""}],"src":"8685:320:16"},{"body":{"nodeType":"YulBlock","src":"9074:80:16","statements":[{"nodeType":"YulAssignment","src":"9084:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9099:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9093:5:16"},"nodeType":"YulFunctionCall","src":"9093:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9084:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9142:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"9115:26:16"},"nodeType":"YulFunctionCall","src":"9115:33:16"},"nodeType":"YulExpressionStatement","src":"9115:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9052:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9060:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9068:5:16","type":""}],"src":"9011:143:16"},{"body":{"nodeType":"YulBlock","src":"9237:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"9283:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9285:77:16"},"nodeType":"YulFunctionCall","src":"9285:79:16"},"nodeType":"YulExpressionStatement","src":"9285:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9258:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9267:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9254:3:16"},"nodeType":"YulFunctionCall","src":"9254:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9279:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9250:3:16"},"nodeType":"YulFunctionCall","src":"9250:32:16"},"nodeType":"YulIf","src":"9247:119:16"},{"nodeType":"YulBlock","src":"9376:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9391:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9405:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9395:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9420:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9466:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9477:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:16"},"nodeType":"YulFunctionCall","src":"9462:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9486:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"9430:31:16"},"nodeType":"YulFunctionCall","src":"9430:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9420:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9207:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9218:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9230:6:16","type":""}],"src":"9160:351:16"},{"body":{"nodeType":"YulBlock","src":"9580:80:16","statements":[{"nodeType":"YulAssignment","src":"9590:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9605:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9599:5:16"},"nodeType":"YulFunctionCall","src":"9599:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9590:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9648:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"9621:26:16"},"nodeType":"YulFunctionCall","src":"9621:33:16"},"nodeType":"YulExpressionStatement","src":"9621:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9558:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9566:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9574:5:16","type":""}],"src":"9517:143:16"},{"body":{"nodeType":"YulBlock","src":"9743:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"9789:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9791:77:16"},"nodeType":"YulFunctionCall","src":"9791:79:16"},"nodeType":"YulExpressionStatement","src":"9791:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9764:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9773:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9760:3:16"},"nodeType":"YulFunctionCall","src":"9760:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9785:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9756:3:16"},"nodeType":"YulFunctionCall","src":"9756:32:16"},"nodeType":"YulIf","src":"9753:119:16"},{"nodeType":"YulBlock","src":"9882:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9897:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9911:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9901:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9926:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9972:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9983:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:16"},"nodeType":"YulFunctionCall","src":"9968:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9992:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"9936:31:16"},"nodeType":"YulFunctionCall","src":"9936:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9926:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9713:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9724:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9736:6:16","type":""}],"src":"9666:351:16"},{"body":{"nodeType":"YulBlock","src":"10051:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10068:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10071:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:16"},"nodeType":"YulFunctionCall","src":"10061:88:16"},"nodeType":"YulExpressionStatement","src":"10061:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10165:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10168:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10158:6:16"},"nodeType":"YulFunctionCall","src":"10158:15:16"},"nodeType":"YulExpressionStatement","src":"10158:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10189:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10192:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10182:6:16"},"nodeType":"YulFunctionCall","src":"10182:15:16"},"nodeType":"YulExpressionStatement","src":"10182:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10023:180:16"},{"body":{"nodeType":"YulBlock","src":"10252:190:16","statements":[{"nodeType":"YulAssignment","src":"10262:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10289:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10271:17:16"},"nodeType":"YulFunctionCall","src":"10271:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10262:5:16"}]},{"body":{"nodeType":"YulBlock","src":"10385:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10387:16:16"},"nodeType":"YulFunctionCall","src":"10387:18:16"},"nodeType":"YulExpressionStatement","src":"10387:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10310:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10317:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10307:2:16"},"nodeType":"YulFunctionCall","src":"10307:77:16"},"nodeType":"YulIf","src":"10304:103:16"},{"nodeType":"YulAssignment","src":"10416:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10427:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10434:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10423:3:16"},"nodeType":"YulFunctionCall","src":"10423:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10416:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10238:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10248:3:16","type":""}],"src":"10209:233:16"},{"body":{"nodeType":"YulBlock","src":"10594:277:16","statements":[{"nodeType":"YulAssignment","src":"10604:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10616:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10627:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10612:3:16"},"nodeType":"YulFunctionCall","src":"10612:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10684:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10708:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10693:3:16"},"nodeType":"YulFunctionCall","src":"10693:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10640:43:16"},"nodeType":"YulFunctionCall","src":"10640:71:16"},"nodeType":"YulExpressionStatement","src":"10640:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10732:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10743:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10728:3:16"},"nodeType":"YulFunctionCall","src":"10728:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10752:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10758:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10748:3:16"},"nodeType":"YulFunctionCall","src":"10748:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10721:6:16"},"nodeType":"YulFunctionCall","src":"10721:48:16"},"nodeType":"YulExpressionStatement","src":"10721:48:16"},{"nodeType":"YulAssignment","src":"10778:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10850:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"10859:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10786:63:16"},"nodeType":"YulFunctionCall","src":"10786:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10778:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10558:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10570:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10578:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10589:4:16","type":""}],"src":"10448:423:16"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Card_$2987_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Card_$2987_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Card_$2987_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Card_$2987__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Card_$2987_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"77:2107:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;125:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1686:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1095:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1463:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;854:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;149:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;718:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;521:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1965:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;104:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;444:74::-;484:13;510:4;503:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:74;:::o;125:21::-;;;;:::o;1686:220::-;1742:6;1737:166;1758:9;;1754:1;:13;1737:166;;;1811:1;1783:30;;:5;:8;1789:1;1783:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;:61;;;;;1837:7;1817:5;:8;1823:1;1817:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;1783:61;1779:120;;;1852:5;:8;1858:1;1852:8;;;;;;;;;;;;;;;;;;;;;:26;;;1879:2;1852:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:5;;1779:120;1769:3;;;;;:::i;:::-;;;;1737:166;;;;1686:220;;:::o;1095:182::-;1147:7;1165:6;1174:1;1165:10;;1160:114;1181:9;;1177:1;:13;1160:114;;;1226:7;1206:5;:8;1212:1;1206:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;1202:68;;1248:5;:8;1254:1;1248:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1241:23;;;;;1202:68;1192:3;;;;;:::i;:::-;;;;1160:114;;;;1095:182;;;;:::o;1463:175::-;1505:6;1500:135;1521:9;;1517:1;:13;1500:135;;;1574:1;1546:30;;:5;:8;1552:1;1546:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;1542:89;;1584:5;:8;1590:1;1584:8;;;;;;;;;;;;;;;;;;;;;:26;;;1611:2;1584:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:5;;1542:89;1532:3;;;;;:::i;:::-;;;;1500:135;;;;1463:175;:::o;854:189::-;909:4;919:7;929:1;919:11;;939:6;934:93;955:9;;951:1;:13;934:93;;;1000:5;980:25;;:5;:8;986:1;980:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;;976:47;;1013:4;;;;;:::i;:::-;;;;976:47;966:3;;;;;:::i;:::-;;;;934:93;;;;1037:2;1030:9;;;854:189;;;:::o;332:75::-;377:4;394:9;;387:16;;332:75;:::o;149:34::-;;;;;;;;;;;;;;;;;;;;;;:::o;718:87::-;770:4;787:5;:14;793:7;787:14;;;;;;;;;;;;;;;;;;;;;780:21;;718:87;;;:::o;521:194::-;584:4;599:6;608:1;599:10;;594:102;615:9;;611:1;:13;594:102;;;660:7;640:5;:8;646:1;640:8;;;;;;;;;;;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;636:56;;682:4;675:11;;;;;636:56;626:3;;;;;:::i;:::-;;;;594:102;;;;706:5;699:12;;521:194;;;;:::o;1318:106::-;1408:2;1412:7;1399:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1378:5;:18;1384:9;;:11;;;;;;;;;:::i;:::-;;;;;1378:18;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1318:106;;:::o;1965:217::-;2031:6;2026:153;2047:8;2043:1;:12;2026:153;;;2166:8;2171:2;2166:4;:8::i;:::-;2057:3;;;;;:::i;:::-;;;;2026:153;;;;1965:217;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:75::-;1817:6;1850:2;1844:9;1834:19;;1784:75;:::o;1865:117::-;1974:1;1971;1964:12;1988:117;2097:1;2094;2087:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:329::-;3430:6;3479:2;3467:9;3458:7;3454:23;3450:32;3447:119;;;3485:79;;:::i;:::-;3447:119;3605:1;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3576:117;3371:329;;;;:::o;3706:118::-;3793:24;3811:5;3793:24;:::i;:::-;3788:3;3781:37;3706:118;;:::o;3830:222::-;3923:4;3961:2;3950:9;3946:18;3938:26;;3974:71;4042:1;4031:9;4027:17;4018:6;3974:71;:::i;:::-;3830:222;;;;:::o;4058:329::-;4117:6;4166:2;4154:9;4145:7;4141:23;4137:32;4134:119;;;4172:79;;:::i;:::-;4134:119;4292:1;4317:53;4362:7;4353:6;4342:9;4338:22;4317:53;:::i;:::-;4307:63;;4263:117;4058:329;;;;:::o;4393:60::-;4421:3;4442:5;4435:12;;4393:60;;;:::o;4459:142::-;4509:9;4542:53;4560:34;4569:24;4587:5;4569:24;:::i;:::-;4560:34;:::i;:::-;4542:53;:::i;:::-;4529:66;;4459:142;;;:::o;4607:126::-;4657:9;4690:37;4721:5;4690:37;:::i;:::-;4677:50;;4607:126;;;:::o;4739:139::-;4802:9;4835:37;4866:5;4835:37;:::i;:::-;4822:50;;4739:139;;;:::o;4884:157::-;4984:50;5028:5;4984:50;:::i;:::-;4979:3;4972:63;4884:157;;:::o;5047:248::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:84;5285:1;5274:9;5270:17;5261:6;5204:84;:::i;:::-;5047:248;;;;:::o;5301:90::-;5335:7;5378:5;5371:13;5364:21;5353:32;;5301:90;;;:::o;5397:109::-;5478:21;5493:5;5478:21;:::i;:::-;5473:3;5466:34;5397:109;;:::o;5512:210::-;5599:4;5637:2;5626:9;5622:18;5614:26;;5650:65;5712:1;5701:9;5697:17;5688:6;5650:65;:::i;:::-;5512:210;;;;:::o;5728:117::-;5837:1;5834;5827:12;5851:117;5960:1;5957;5950:12;5974:180;6022:77;6019:1;6012:88;6119:4;6116:1;6109:15;6143:4;6140:1;6133:15;6160:281;6243:27;6265:4;6243:27;:::i;:::-;6235:6;6231:40;6373:6;6361:10;6358:22;6337:18;6325:10;6322:34;6319:62;6316:88;;;6384:18;;:::i;:::-;6316:88;6424:10;6420:2;6413:22;6203:238;6160:281;;:::o;6447:129::-;6481:6;6508:20;;:::i;:::-;6498:30;;6537:33;6565:4;6557:6;6537:33;:::i;:::-;6447:129;;;:::o;6582:308::-;6644:4;6734:18;6726:6;6723:30;6720:56;;;6756:18;;:::i;:::-;6720:56;6794:29;6816:6;6794:29;:::i;:::-;6786:37;;6878:4;6872;6868:15;6860:23;;6582:308;;;:::o;6896:146::-;6993:6;6988:3;6983;6970:30;7034:1;7025:6;7020:3;7016:16;7009:27;6896:146;;;:::o;7048:425::-;7126:5;7151:66;7167:49;7209:6;7167:49;:::i;:::-;7151:66;:::i;:::-;7142:75;;7240:6;7233:5;7226:21;7278:4;7271:5;7267:16;7316:3;7307:6;7302:3;7298:16;7295:25;7292:112;;;7323:79;;:::i;:::-;7292:112;7413:54;7460:6;7455:3;7450;7413:54;:::i;:::-;7132:341;7048:425;;;;;:::o;7493:340::-;7549:5;7598:3;7591:4;7583:6;7579:17;7575:27;7565:122;;7606:79;;:::i;:::-;7565:122;7723:6;7710:20;7748:79;7823:3;7815:6;7808:4;7800:6;7796:17;7748:79;:::i;:::-;7739:88;;7555:278;7493:340;;;;:::o;7839:654::-;7917:6;7925;7974:2;7962:9;7953:7;7949:23;7945:32;7942:119;;;7980:79;;:::i;:::-;7942:119;8100:1;8125:53;8170:7;8161:6;8150:9;8146:22;8125:53;:::i;:::-;8115:63;;8071:117;8255:2;8244:9;8240:18;8227:32;8286:18;8278:6;8275:30;8272:117;;;8308:79;;:::i;:::-;8272:117;8413:63;8468:7;8459:6;8448:9;8444:22;8413:63;:::i;:::-;8403:73;;8198:288;7839:654;;;;;:::o;8499:180::-;8547:77;8544:1;8537:88;8644:4;8641:1;8634:15;8668:4;8665:1;8658:15;8685:320;8729:6;8766:1;8760:4;8756:12;8746:22;;8813:1;8807:4;8803:12;8834:18;8824:81;;8890:4;8882:6;8878:17;8868:27;;8824:81;8952:2;8944:6;8941:14;8921:18;8918:38;8915:84;;8971:18;;:::i;:::-;8915:84;8736:269;8685:320;;;:::o;9011:143::-;9068:5;9099:6;9093:13;9084:22;;9115:33;9142:5;9115:33;:::i;:::-;9011:143;;;;:::o;9160:351::-;9230:6;9279:2;9267:9;9258:7;9254:23;9250:32;9247:119;;;9285:79;;:::i;:::-;9247:119;9405:1;9430:64;9486:7;9477:6;9466:9;9462:22;9430:64;:::i;:::-;9420:74;;9376:128;9160:351;;;;:::o;9517:143::-;9574:5;9605:6;9599:13;9590:22;;9621:33;9648:5;9621:33;:::i;:::-;9517:143;;;;:::o;9666:351::-;9736:6;9785:2;9773:9;9764:7;9760:23;9756:32;9753:119;;;9791:79;;:::i;:::-;9753:119;9911:1;9936:64;9992:7;9983:6;9972:9;9968:22;9936:64;:::i;:::-;9926:74;;9882:128;9666:351;;;;:::o;10023:180::-;10071:77;10068:1;10061:88;10168:4;10165:1;10158:15;10192:4;10189:1;10182:15;10209:233;10248:3;10271:24;10289:5;10271:24;:::i;:::-;10262:33;;10317:66;10310:5;10307:77;10304:103;;10387:18;;:::i;:::-;10304:103;10434:1;10427:5;10423:13;10416:20;;10209:233;;;:::o;10448:423::-;10589:4;10627:2;10616:9;10612:18;10604:26;;10640:71;10708:1;10697:9;10693:17;10684:6;10640:71;:::i;:::-;10758:9;10752:4;10748:20;10743:2;10732:9;10728:18;10721:48;10786:78;10859:4;10850:6;10786:78;:::i;:::-;10778:86;;10448:423;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1676400","executionCost":"infinite","totalCost":"infinite"},"external":{"addCard(uint256,string)":"infinite","balanceOf(address)":"infinite","cardCount()":"2474","cards(uint256)":"infinite","getCard(uint256)":"infinite","getCardCount()":"2482","getName()":"infinite","isCardInCollection(uint256)":"infinite","mint(address)":"infinite","mint(address,uint256)":"infinite","mintSomeCards(address,uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"infinite"}},"methodIdentifiers":{"addCard(uint256,string)":"aa93d702","balanceOf(address)":"70a08231","cardCount()":"1b6cde10","cards(uint256)":"8dc10768","getCard(uint256)":"9188d312","getCardCount()":"7d620130","getName()":"17d7de7c","isCardInCollection(uint256)":"a9aa75ef","mint(address)":"6a627842","mint(address,uint256)":"40c10f19","mintSomeCards(address,uint256)":"f92906ff","name()":"06fdde03","ownerOf(uint256)":"6352211e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_cardCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"imgLink\",\"type\":\"string\"}],\"name\":\"addCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cards\",\"outputs\":[{\"internalType\":\"contract Card\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCard\",\"outputs\":[{\"internalType\":\"contract Card\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isCardInCollection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mintSomeCards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GameCollection.sol\":\"GameCollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"src/Card.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Card is Ownable {\\n    // string public name;\\n    uint private id;\\n    string private imgLink;\\n\\n    constructor(uint _id, string memory _imgLink) Ownable(msg.sender) {\\n        id = _id;\\n        imgLink = _imgLink;\\n    }\\n\\n    function getId() public view returns (uint) {\\n        return id;\\n    }\\n\\n    function getImgLink() public view returns (string memory) {\\n        return imgLink;\\n    }\\n\\n    function transferOwnership(address to) public override onlyOwner {\\n        transferOwnership(to); // TODO : v\\u00e9rifier si \\u00e7a fonctionne\\n    }\\n}\",\"keccak256\":\"0xb150de000f85ce66be92e5b34cec2986a9546d33857f1d593bd202370fc47b6f\"},\"src/GameCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"./Card.sol\\\";\\n\\ncontract GameCollection {\\n\\tstring public name;\\n\\tuint public cardCount;\\n\\tmapping(uint => Card) public cards;\\n\\n\\tconstructor(string memory _name, uint _cardCount) {\\n\\t\\tname = _name;\\n\\t\\tcardCount = _cardCount;\\n\\t}\\n\\n\\t// Donne le nombre de carte de la collection\\n\\tfunction getCardCount() public view returns (uint) {\\n\\t\\treturn cardCount;\\n\\t}\\n\\n\\t// Donne le nom de la collection\\n\\tfunction getName() public view returns (string memory) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\tfunction isCardInCollection(uint tokenId) public view returns (bool) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\n\\tfunction getCard(uint tokenId) public view returns (Card) {\\n\\t\\treturn cards[tokenId];\\n\\t}\\n\\n\\t// Donne le nombre de carte d'un utilisateur\\n\\tfunction balanceOf(address owner) public view returns (uint) {\\n\\t\\tuint nb = 0;\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == owner) {\\n\\t\\t\\t\\tnb++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn nb;\\n\\t}\\n\\n\\t// Donne l'adresse du propri\\u00e9taire d'une carte\\n\\tfunction ownerOf(uint tokenId) public view returns (address) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn cards[i].owner();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Ajoute une carte \\u00e0 la collection\\n\\tfunction addCard(uint id, string memory imgLink) public {\\n\\t\\tcards[cardCount++] = new Card(id, imgLink);\\n\\t}\\n\\n\\t// Mint une carte de la collection\\n\\tfunction mint(address to) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0)) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Mint une carte pr\\u00e9cise de la collection\\n\\tfunction mint(address to, uint tokenId) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0) && cards[i].getId() == tokenId) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Donne un nombre de carte d\\u00e9finit \\u00e0 un utilisateur\\n\\tfunction mintSomeCards(address to, uint quantity) public {\\n\\t\\tfor (uint i = 0; i < quantity; i++) { //TODO : ajouter des s\\u00e9curit\\u00e9s il ne faut pas ajouter une carte s'il n'y en a plus assez \\u00e0 mint\\n\\t\\t\\tmint(to);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x2aff66616a9ebee2c12151acb035cd42b69c05a27c0108624de356220166ae45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3304,"contract":"src/GameCollection.sol:GameCollection","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3306,"contract":"src/GameCollection.sol:GameCollection","label":"cardCount","offset":0,"slot":"1","type":"t_uint256"},{"astId":3311,"contract":"src/GameCollection.sol:GameCollection","label":"cards","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_contract(Card)2987)"}],"types":{"t_contract(Card)2987":{"encoding":"inplace","label":"contract Card","numberOfBytes":"20"},"t_mapping(t_uint256,t_contract(Card)2987)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => contract Card)","numberOfBytes":"32","value":"t_contract(Card)2987"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/Main.sol":{"Main":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"cardNumber","type":"uint256"}],"name":"addACard","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"cardCollections","outputs":[{"internalType":"contract GameCollection","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collectionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"cardCount","type":"int256"}],"name":"createGameCollection","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCollectionNbForCard","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"collectionNumber","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"collectionNumber","type":"uint256"}],"name":"mintSomeCards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3016":{"entryPoint":null,"id":3016,"parameterSlots":0,"returnSlots":0},"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_3610":{"entryPoint":null,"id":3610,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":371,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":619,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":636,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":823,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":665,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1144,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":599,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":567,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":959,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1105,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":979,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1299,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":844,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":770,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1269,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":969,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":723,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":676,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1019,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":860,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1224,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":873,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1029,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1072,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:16","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:16","statements":[{"nodeType":"YulAssignment","src":"62:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:16"},"nodeType":"YulFunctionCall","src":"73:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:16","type":""}],"src":"7:126:16"},{"body":{"nodeType":"YulBlock","src":"184:51:16","statements":[{"nodeType":"YulAssignment","src":"194:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:16"},"nodeType":"YulFunctionCall","src":"205:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:16","type":""}],"src":"139:96:16"},{"body":{"nodeType":"YulBlock","src":"306:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:16"},"nodeType":"YulFunctionCall","src":"328:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:16"},"nodeType":"YulFunctionCall","src":"316:37:16"},"nodeType":"YulExpressionStatement","src":"316:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:16","type":""}],"src":"241:118:16"},{"body":{"nodeType":"YulBlock","src":"463:124:16","statements":[{"nodeType":"YulAssignment","src":"473:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:16"},"nodeType":"YulFunctionCall","src":"481:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:16"},"nodeType":"YulFunctionCall","src":"562:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:16"},"nodeType":"YulFunctionCall","src":"509:71:16"},"nodeType":"YulExpressionStatement","src":"509:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:16","type":""}],"src":"365:222:16"},{"body":{"nodeType":"YulBlock","src":"652:40:16","statements":[{"nodeType":"YulAssignment","src":"663:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"679:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"673:5:16"},"nodeType":"YulFunctionCall","src":"673:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"663:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"635:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"645:6:16","type":""}],"src":"593:99:16"},{"body":{"nodeType":"YulBlock","src":"726:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"743:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"746:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"736:6:16"},"nodeType":"YulFunctionCall","src":"736:88:16"},"nodeType":"YulExpressionStatement","src":"736:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"840:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"833:6:16"},"nodeType":"YulFunctionCall","src":"833:15:16"},"nodeType":"YulExpressionStatement","src":"833:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"864:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"867:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"857:6:16"},"nodeType":"YulFunctionCall","src":"857:15:16"},"nodeType":"YulExpressionStatement","src":"857:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"698:180:16"},{"body":{"nodeType":"YulBlock","src":"912:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"929:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"932:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"922:6:16"},"nodeType":"YulFunctionCall","src":"922:88:16"},"nodeType":"YulExpressionStatement","src":"922:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1029:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1019:6:16"},"nodeType":"YulFunctionCall","src":"1019:15:16"},"nodeType":"YulExpressionStatement","src":"1019:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1043:6:16"},"nodeType":"YulFunctionCall","src":"1043:15:16"},"nodeType":"YulExpressionStatement","src":"1043:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"884:180:16"},{"body":{"nodeType":"YulBlock","src":"1121:269:16","statements":[{"nodeType":"YulAssignment","src":"1131:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1145:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1141:3:16"},"nodeType":"YulFunctionCall","src":"1141:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1131:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1162:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1192:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1188:3:16"},"nodeType":"YulFunctionCall","src":"1188:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1166:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1239:51:16","statements":[{"nodeType":"YulAssignment","src":"1253:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1267:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1275:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1263:3:16"},"nodeType":"YulFunctionCall","src":"1263:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1253:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1219:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1212:6:16"},"nodeType":"YulFunctionCall","src":"1212:26:16"},"nodeType":"YulIf","src":"1209:81:16"},{"body":{"nodeType":"YulBlock","src":"1342:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1356:16:16"},"nodeType":"YulFunctionCall","src":"1356:18:16"},"nodeType":"YulExpressionStatement","src":"1356:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1306:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1329:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1326:2:16"},"nodeType":"YulFunctionCall","src":"1326:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1303:2:16"},"nodeType":"YulFunctionCall","src":"1303:38:16"},"nodeType":"YulIf","src":"1300:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1105:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1114:6:16","type":""}],"src":"1070:320:16"},{"body":{"nodeType":"YulBlock","src":"1450:87:16","statements":[{"nodeType":"YulAssignment","src":"1460:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1468:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1460:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1488:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1491:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:16"},"nodeType":"YulFunctionCall","src":"1481:14:16"},"nodeType":"YulExpressionStatement","src":"1481:14:16"},{"nodeType":"YulAssignment","src":"1504:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1512:9:16"},"nodeType":"YulFunctionCall","src":"1512:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1504:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1437:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1445:4:16","type":""}],"src":"1396:141:16"},{"body":{"nodeType":"YulBlock","src":"1587:49:16","statements":[{"nodeType":"YulAssignment","src":"1597:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1615:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1622:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:16"},"nodeType":"YulFunctionCall","src":"1611:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1607:3:16"},"nodeType":"YulFunctionCall","src":"1607:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1597:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1580:6:16","type":""}],"src":"1543:93:16"},{"body":{"nodeType":"YulBlock","src":"1695:54:16","statements":[{"nodeType":"YulAssignment","src":"1705:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1730:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"1736:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1726:3:16"},"nodeType":"YulFunctionCall","src":"1726:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1705:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1670:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"1676:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1686:8:16","type":""}],"src":"1642:107:16"},{"body":{"nodeType":"YulBlock","src":"1831:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1841:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1862:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1874:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1858:3:16"},"nodeType":"YulFunctionCall","src":"1858:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1845:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1885:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1916:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1927:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1897:18:16"},"nodeType":"YulFunctionCall","src":"1897:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1889:4:16","type":""}]},{"nodeType":"YulAssignment","src":"2003:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2034:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2045:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2015:18:16"},"nodeType":"YulFunctionCall","src":"2015:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2003:8:16"}]},{"nodeType":"YulAssignment","src":"2063:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2087:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2083:3:16"},"nodeType":"YulFunctionCall","src":"2083:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:16"},"nodeType":"YulFunctionCall","src":"2072:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2063:5:16"}]},{"nodeType":"YulAssignment","src":"2102:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2115:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2126:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"2136:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2112:2:16"},"nodeType":"YulFunctionCall","src":"2112:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2102:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1792:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1799:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1811:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1824:6:16","type":""}],"src":"1755:393:16"},{"body":{"nodeType":"YulBlock","src":"2199:32:16","statements":[{"nodeType":"YulAssignment","src":"2209:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2220:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2209:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2191:7:16","type":""}],"src":"2154:77:16"},{"body":{"nodeType":"YulBlock","src":"2269:28:16","statements":[{"nodeType":"YulAssignment","src":"2279:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2286:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2279:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2255:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2265:3:16","type":""}],"src":"2237:60:16"},{"body":{"nodeType":"YulBlock","src":"2363:82:16","statements":[{"nodeType":"YulAssignment","src":"2373:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2413:17:16"},"nodeType":"YulFunctionCall","src":"2413:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2404:8:16"},"nodeType":"YulFunctionCall","src":"2404:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2386:17:16"},"nodeType":"YulFunctionCall","src":"2386:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2373:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2343:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2353:9:16","type":""}],"src":"2303:142:16"},{"body":{"nodeType":"YulBlock","src":"2498:28:16","statements":[{"nodeType":"YulAssignment","src":"2508:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2515:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2508:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2494:3:16","type":""}],"src":"2451:75:16"},{"body":{"nodeType":"YulBlock","src":"2608:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2618:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2673:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2642:30:16"},"nodeType":"YulFunctionCall","src":"2642:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2622:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2697:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2737:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2731:5:16"},"nodeType":"YulFunctionCall","src":"2731:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2776:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2752:23:16"},"nodeType":"YulFunctionCall","src":"2752:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2703:27:16"},"nodeType":"YulFunctionCall","src":"2703:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2690:6:16"},"nodeType":"YulFunctionCall","src":"2690:105:16"},"nodeType":"YulExpressionStatement","src":"2690:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2585:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2591:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2599:7:16","type":""}],"src":"2532:269:16"},{"body":{"nodeType":"YulBlock","src":"2856:24:16","statements":[{"nodeType":"YulAssignment","src":"2866:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2873:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2866:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2852:3:16","type":""}],"src":"2807:73:16"},{"body":{"nodeType":"YulBlock","src":"2939:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2949:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2963:30:16"},"nodeType":"YulFunctionCall","src":"2963:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2953:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3048:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3054:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3062:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3004:43:16"},"nodeType":"YulFunctionCall","src":"3004:65:16"},"nodeType":"YulExpressionStatement","src":"3004:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2925:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2931:6:16","type":""}],"src":"2886:189:16"},{"body":{"nodeType":"YulBlock","src":"3131:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"3198:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3242:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3212:29:16"},"nodeType":"YulFunctionCall","src":"3212:39:16"},"nodeType":"YulExpressionStatement","src":"3212:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3151:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"3158:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3148:2:16"},"nodeType":"YulFunctionCall","src":"3148:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3163:26:16","statements":[{"nodeType":"YulAssignment","src":"3165:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3178:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3185:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:16"},"nodeType":"YulFunctionCall","src":"3174:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3165:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3145:2:16","statements":[]},"src":"3141:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3119:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3126:3:16","type":""}],"src":"3081:186:16"},{"body":{"nodeType":"YulBlock","src":"3352:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"3378:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3392:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3440:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3408:31:16"},"nodeType":"YulFunctionCall","src":"3408:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3396:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3459:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3482:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3510:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3492:17:16"},"nodeType":"YulFunctionCall","src":"3492:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:16"},"nodeType":"YulFunctionCall","src":"3478:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3463:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3679:27:16","statements":[{"nodeType":"YulAssignment","src":"3681:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3696:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3681:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3663:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3660:2:16"},"nodeType":"YulFunctionCall","src":"3660:18:16"},"nodeType":"YulIf","src":"3657:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3748:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3765:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3793:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3775:17:16"},"nodeType":"YulFunctionCall","src":"3775:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:16"},"nodeType":"YulFunctionCall","src":"3761:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3719:28:16"},"nodeType":"YulFunctionCall","src":"3719:80:16"},"nodeType":"YulExpressionStatement","src":"3719:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3369:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3366:2:16"},"nodeType":"YulFunctionCall","src":"3366:11:16"},"nodeType":"YulIf","src":"3363:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3328:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"3335:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3340:10:16","type":""}],"src":"3273:543:16"},{"body":{"nodeType":"YulBlock","src":"3885:54:16","statements":[{"nodeType":"YulAssignment","src":"3895:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3920:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"3926:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3916:3:16"},"nodeType":"YulFunctionCall","src":"3916:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3895:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3860:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"3866:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3876:8:16","type":""}],"src":"3822:117:16"},{"body":{"nodeType":"YulBlock","src":"3996:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4006:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4058:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4051:3:16"},"nodeType":"YulFunctionCall","src":"4051:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4066:3:16"},"nodeType":"YulFunctionCall","src":"4066:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4022:28:16"},"nodeType":"YulFunctionCall","src":"4022:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4018:3:16"},"nodeType":"YulFunctionCall","src":"4018:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4010:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4083:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4097:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4103:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4093:3:16"},"nodeType":"YulFunctionCall","src":"4093:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4083:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3973:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3979:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3989:6:16","type":""}],"src":"3945:169:16"},{"body":{"nodeType":"YulBlock","src":"4200:214:16","statements":[{"nodeType":"YulAssignment","src":"4333:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4360:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"4366:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4341:18:16"},"nodeType":"YulFunctionCall","src":"4341:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4333:4:16"}]},{"nodeType":"YulAssignment","src":"4379:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4390:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4400:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4403:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4396:3:16"},"nodeType":"YulFunctionCall","src":"4396:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4387:2:16"},"nodeType":"YulFunctionCall","src":"4387:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4379:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4181:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"4187:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4195:4:16","type":""}],"src":"4119:295:16"},{"body":{"nodeType":"YulBlock","src":"4511:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4522:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4569:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4536:32:16"},"nodeType":"YulFunctionCall","src":"4536:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4526:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4658:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4660:16:16"},"nodeType":"YulFunctionCall","src":"4660:18:16"},"nodeType":"YulExpressionStatement","src":"4660:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4630:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4638:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4627:2:16"},"nodeType":"YulFunctionCall","src":"4627:30:16"},"nodeType":"YulIf","src":"4624:56:16"},{"nodeType":"YulVariableDeclaration","src":"4690:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4736:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4730:5:16"},"nodeType":"YulFunctionCall","src":"4730:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4704:25:16"},"nodeType":"YulFunctionCall","src":"4704:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4694:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4835:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4841:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4849:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4789:45:16"},"nodeType":"YulFunctionCall","src":"4789:67:16"},"nodeType":"YulExpressionStatement","src":"4789:67:16"},{"nodeType":"YulVariableDeclaration","src":"4866:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4883:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4870:9:16","type":""}]},{"nodeType":"YulAssignment","src":"4894:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4907:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4894:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4958:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4991:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5003:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4999:3:16"},"nodeType":"YulFunctionCall","src":"4999:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:16"},"nodeType":"YulFunctionCall","src":"4987:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4976:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5023:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5069:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5037:31:16"},"nodeType":"YulFunctionCall","src":"5037:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5027:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5087:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5096:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5091:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5155:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5180:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5198:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5203:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:16"},"nodeType":"YulFunctionCall","src":"5194:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5188:5:16"},"nodeType":"YulFunctionCall","src":"5188:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5173:6:16"},"nodeType":"YulFunctionCall","src":"5173:42:16"},"nodeType":"YulExpressionStatement","src":"5173:42:16"},{"nodeType":"YulAssignment","src":"5232:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5246:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5254:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5242:3:16"},"nodeType":"YulFunctionCall","src":"5242:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5232:6:16"}]},{"nodeType":"YulAssignment","src":"5273:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5290:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:16"},"nodeType":"YulFunctionCall","src":"5286:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5273:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5121:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5124:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5118:2:16"},"nodeType":"YulFunctionCall","src":"5118:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5133:21:16","statements":[{"nodeType":"YulAssignment","src":"5135:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5144:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5147:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:16"},"nodeType":"YulFunctionCall","src":"5140:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5135:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5114:3:16","statements":[]},"src":"5110:208:16"},{"body":{"nodeType":"YulBlock","src":"5354:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5372:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5399:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5404:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:16"},"nodeType":"YulFunctionCall","src":"5395:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5389:5:16"},"nodeType":"YulFunctionCall","src":"5389:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5376:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5439:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5466:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5481:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5489:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5477:3:16"},"nodeType":"YulFunctionCall","src":"5477:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5447:18:16"},"nodeType":"YulFunctionCall","src":"5447:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5432:6:16"},"nodeType":"YulFunctionCall","src":"5432:64:16"},"nodeType":"YulExpressionStatement","src":"5432:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5337:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5346:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5334:2:16"},"nodeType":"YulFunctionCall","src":"5334:19:16"},"nodeType":"YulIf","src":"5331:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5530:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5544:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5552:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5540:3:16"},"nodeType":"YulFunctionCall","src":"5540:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:16"},"nodeType":"YulFunctionCall","src":"5536:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5523:6:16"},"nodeType":"YulFunctionCall","src":"5523:36:16"},"nodeType":"YulExpressionStatement","src":"5523:36:16"}]},"nodeType":"YulCase","src":"4951:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4956:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5586:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5613:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5604:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5637:67:16","statements":[{"nodeType":"YulAssignment","src":"5655:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5674:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5679:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:16"},"nodeType":"YulFunctionCall","src":"5670:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5664:5:16"},"nodeType":"YulFunctionCall","src":"5664:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5655:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5630:6:16"},"nodeType":"YulIf","src":"5627:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5724:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5783:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5790:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5730:52:16"},"nodeType":"YulFunctionCall","src":"5730:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5717:6:16"},"nodeType":"YulFunctionCall","src":"5717:81:16"},"nodeType":"YulExpressionStatement","src":"5717:81:16"}]},"nodeType":"YulCase","src":"5578:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4931:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4939:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4928:2:16"},"nodeType":"YulFunctionCall","src":"4928:14:16"},"nodeType":"YulSwitch","src":"4921:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4500:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"4506:3:16","type":""}],"src":"4419:1395:16"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4361726400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4341524400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEB SWAP2 SWAP1 PUSH3 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x105 DUP2 PUSH3 0x173 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x117 SWAP2 SWAP1 PUSH3 0x513 JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x513 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x5FA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x264 DUP3 PUSH3 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x276 DUP2 PUSH3 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x293 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x26B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x31B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x331 JUMPI PUSH3 0x330 PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x39B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x35C JUMP JUMPDEST PUSH3 0x3A7 DUP7 DUP4 PUSH3 0x35C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F4 PUSH3 0x3EE PUSH3 0x3E8 DUP5 PUSH3 0x3BF JUMP JUMPDEST PUSH3 0x3C9 JUMP JUMPDEST PUSH3 0x3BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x410 DUP4 PUSH3 0x3D3 JUMP JUMPDEST PUSH3 0x428 PUSH3 0x41F DUP3 PUSH3 0x3FB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x369 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x43F PUSH3 0x430 JUMP JUMPDEST PUSH3 0x44C DUP2 DUP5 DUP5 PUSH3 0x405 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x474 JUMPI PUSH3 0x468 PUSH1 0x0 DUP3 PUSH3 0x435 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x452 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C3 JUMPI PUSH3 0x48D DUP2 PUSH3 0x337 JUMP JUMPDEST PUSH3 0x498 DUP5 PUSH3 0x34C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4A8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4C0 PUSH3 0x4B7 DUP6 PUSH3 0x34C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x451 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4E8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4C8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x503 DUP4 DUP4 PUSH3 0x4D5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x51E DUP3 PUSH3 0x299 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x53A JUMPI PUSH3 0x539 PUSH3 0x2A4 JUMP JUMPDEST JUMPDEST PUSH3 0x546 DUP3 SLOAD PUSH3 0x302 JUMP JUMPDEST PUSH3 0x553 DUP3 DUP3 DUP6 PUSH3 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x58B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x576 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x582 DUP6 DUP3 PUSH3 0x4F5 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5F2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x59B DUP7 PUSH3 0x337 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5C5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5E5 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5E1 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4D5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x56A8 DUP1 PUSH3 0x60A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH3 0xD5 JUMPI DUP1 PUSH4 0xBF874103 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xBF874103 EQ PUSH3 0x407 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH3 0x43D JUMPI DUP1 PUSH4 0xD57F966B EQ PUSH3 0x473 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x495 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x4CB JUMPI DUP1 PUSH4 0xF7374D11 EQ PUSH3 0x4EB JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH3 0x341 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x36F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x391 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH3 0x3B1 JUMPI DUP1 PUSH4 0xBC4F6DEF EQ PUSH3 0x3D1 JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH3 0x12F JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH3 0x255 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x275 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH3 0x295 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x2B5 JUMPI DUP1 PUSH4 0x64F37671 EQ PUSH3 0x2EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x30B JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x171 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x1A7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH3 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x1FF JUMPI DUP1 PUSH4 0xABC4A78 EQ PUSH3 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x1F52 JUMP JUMPDEST PUSH3 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19E SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1B1 PUSH3 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1C0 SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1E1 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F6 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x217 SWAP2 SWAP1 PUSH3 0x217C JUMP JUMPDEST PUSH3 0x6AB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x237 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x24C SWAP2 SWAP1 PUSH3 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x26D SWAP2 SWAP1 PUSH3 0x21FB JUMP JUMPDEST PUSH3 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x28D SWAP2 SWAP1 PUSH3 0x2257 JUMP JUMPDEST PUSH3 0x8CA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2AD SWAP2 SWAP1 PUSH3 0x2257 JUMP JUMPDEST PUSH3 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2CD SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2E2 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x303 SWAP2 SWAP1 PUSH3 0x2352 JUMP JUMPDEST PUSH3 0xCF9 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x323 SWAP2 SWAP1 PUSH3 0x23BC JUMP JUMPDEST PUSH3 0xDAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x338 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34B PUSH3 0xEA5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x357 PUSH3 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x366 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x379 PUSH3 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x388 SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3A9 SWAP2 SWAP1 PUSH3 0x244D JUMP JUMPDEST PUSH3 0xF80 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3C9 SWAP2 SWAP1 PUSH3 0x25E0 JUMP JUMPDEST PUSH3 0xF9A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3E9 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3FE SWAP2 SWAP1 PUSH3 0x26DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x41F SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x434 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x455 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x46A SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x47D PUSH3 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x48C SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4AD SWAP2 SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH3 0x1278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4E3 SWAP2 SWAP1 PUSH3 0x23BC JUMP JUMPDEST PUSH3 0x130C JUMP JUMPDEST STOP JUMPDEST PUSH3 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x503 SWAP2 SWAP1 PUSH3 0x21FB JUMP JUMPDEST PUSH3 0x1399 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH3 0x5D7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH3 0x5EA JUMPI POP PUSH3 0x5E9 DUP3 PUSH3 0x1489 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH3 0x602 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x630 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 ISZERO PUSH3 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x655 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x663 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x698 DUP3 PUSH3 0x14F3 JUMP JUMPDEST POP PUSH3 0x6A4 DUP3 PUSH3 0x1580 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 PUSH3 0x6BB PUSH3 0x15BD JUMP JUMPDEST PUSH3 0x15C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 SLT ISZERO PUSH3 0x7B0 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9AA75EF DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x746 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x764 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x78A SWAP2 SWAP1 PUSH3 0x27BB JUMP JUMPDEST ISZERO PUSH3 0x79A JUMPI DUP1 SWAP2 POP POP PUSH3 0x7D5 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x7A7 SWAP1 PUSH3 0x281C JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6CD JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x818 SWAP1 PUSH3 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x891 SWAP3 SWAP2 SWAP1 PUSH3 0x2901 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x8D5 DUP2 PUSH3 0xBCE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x93C SWAP1 PUSH3 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9AE SWAP1 PUSH3 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x9C4 DUP3 PUSH3 0x6C5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH3 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA22 SWAP1 PUSH3 0x2AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA99 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xADD SWAP2 SWAP1 PUSH3 0x2B3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB17 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH3 0xBC9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xCEE JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC51 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC95 SWAP2 SWAP1 PUSH3 0x2B84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCD7 JUMPI DUP1 SWAP3 POP POP POP PUSH3 0xCF4 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xCE5 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xBD6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0xD0D SWAP1 PUSH3 0x1ED3 JUMP JUMPDEST PUSH3 0xD1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xD38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xDA4 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xE9B JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE32 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xE76 SWAP2 SWAP1 PUSH3 0x2CC6 JUMP JUMPDEST DUP3 PUSH3 0xE83 SWAP2 SWAP1 PUSH3 0x2CF8 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH3 0xE92 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xDB9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEAF PUSH3 0x15D9 JUMP JUMPDEST PUSH3 0xEBB PUSH1 0x0 PUSH3 0x1669 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0xEF7 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xF25 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF76 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xF4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xF76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xF58 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xF96 PUSH3 0xF8E PUSH3 0x15BD JUMP JUMPDEST DUP4 DUP4 PUSH3 0x172D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xFA7 DUP5 DUP5 DUP5 PUSH3 0x8CA JUMP JUMPDEST PUSH3 0xFB5 DUP5 DUP5 DUP5 DUP5 PUSH3 0x18A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x1001 SWAP1 PUSH3 0x1ED3 JUMP JUMPDEST PUSH3 0x100D SWAP2 SWAP1 PUSH3 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x102A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0x1096 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA93D702 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1109 SWAP2 SWAP1 PUSH3 0x2E2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1139 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11AD SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x11F1 SWAP2 SWAP1 PUSH3 0x2B3B JUMP JUMPDEST SWAP1 POP PUSH2 0x29A SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x120C DUP3 PUSH3 0x14F3 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1219 PUSH3 0x1A69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x123B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x126A JUMP JUMPDEST DUP1 PUSH3 0x1247 DUP5 PUSH3 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x125A SWAP3 SWAP2 SWAP1 PUSH3 0x2E9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1316 PUSH3 0x15D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x138B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1382 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1396 DUP2 PUSH3 0x1669 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13D7 SWAP1 PUSH3 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92906FF DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1450 SWAP3 SWAP2 SWAP1 PUSH3 0x2901 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1480 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1501 DUP4 PUSH3 0x1B59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1577 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x156E SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x15D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x1B96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x15E3 PUSH3 0x15BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1603 PUSH3 0xEBD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1667 JUMPI PUSH3 0x1629 PUSH3 0x15BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x165E SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x17A1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1798 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH3 0x1894 SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x1A63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH3 0x18E8 PUSH3 0x15BD JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x190C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x194B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1948 SWAP2 SWAP1 PUSH3 0x2F8F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x19D5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x197E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x1983 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x19CD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x19C4 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x1A61 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A58 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x1A91 DUP5 PUSH3 0x1D67 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1AB3 JUMPI PUSH3 0x1AB2 PUSH3 0x2499 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x1AE6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1B4E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1B41 JUMPI PUSH3 0x1B40 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1AF4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x1BD0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x1D0F JUMPI PUSH1 0x0 PUSH3 0x1BE3 DUP5 PUSH3 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x1C4F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1C65 JUMPI POP PUSH3 0x1C63 DUP2 DUP5 PUSH3 0x1278 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x1CAA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1CA1 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x1D0D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x1DC9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x1DBF JUMPI PUSH3 0x1DBE PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x1E0A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x1E00 JUMPI PUSH3 0x1DFF PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x1E3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x1E33 JUMPI PUSH3 0x1E32 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x1E6A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x1E60 JUMPI PUSH3 0x1E5F PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x1E93 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x1E89 JUMPI PUSH3 0x1E88 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x1EBA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x1EB0 JUMPI PUSH3 0x1EAF PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x1ECA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 DUP1 PUSH3 0x2FF1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F2C DUP2 PUSH3 0x1EF5 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1F4C DUP2 PUSH3 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F6B JUMPI PUSH3 0x1F6A PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1F7B DUP5 DUP3 DUP6 ADD PUSH3 0x1F3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F9B DUP2 PUSH3 0x1F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1FB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1F90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1FFA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1FDD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2024 DUP3 PUSH3 0x1FBE JUMP JUMPDEST PUSH3 0x2030 DUP2 DUP6 PUSH3 0x1FC9 JUMP JUMPDEST SWAP4 POP PUSH3 0x2042 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x204D DUP2 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2074 DUP2 DUP5 PUSH3 0x2017 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2091 DUP2 PUSH3 0x207C JUMP JUMPDEST DUP2 EQ PUSH3 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x20B1 DUP2 PUSH3 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x20D0 JUMPI PUSH3 0x20CF PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x20E0 DUP5 DUP3 DUP6 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2116 DUP3 PUSH3 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2128 DUP2 PUSH3 0x2109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2145 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x211D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2156 DUP2 PUSH3 0x2109 JUMP JUMPDEST DUP2 EQ PUSH3 0x2162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2176 DUP2 PUSH3 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2196 JUMPI PUSH3 0x2195 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21A6 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x21B9 DUP6 DUP3 DUP7 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21D8 DUP2 PUSH3 0x21C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x21F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2217 JUMPI PUSH3 0x2216 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2227 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x223A DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x224D DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2273 JUMPI PUSH3 0x2272 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2283 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2296 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x22A9 DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x22DB JUMPI PUSH3 0x22DA PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x22FB JUMPI PUSH3 0x22FA PUSH3 0x22B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x231A JUMPI PUSH3 0x2319 PUSH3 0x22BD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x232C DUP2 PUSH3 0x21C3 JUMP JUMPDEST DUP2 EQ PUSH3 0x2338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x234C DUP2 PUSH3 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x236E JUMPI PUSH3 0x236D PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x238F JUMPI PUSH3 0x238E PUSH3 0x1EF0 JUMP JUMPDEST JUMPDEST PUSH3 0x239D DUP7 DUP3 DUP8 ADD PUSH3 0x22C2 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH3 0x23B2 DUP7 DUP3 DUP8 ADD PUSH3 0x233B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23D5 JUMPI PUSH3 0x23D4 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x23E5 DUP5 DUP3 DUP6 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x23F9 DUP2 PUSH3 0x207C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2416 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2427 DUP2 PUSH3 0x1F84 JUMP JUMPDEST DUP2 EQ PUSH3 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2447 DUP2 PUSH3 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2467 JUMPI PUSH3 0x2466 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2477 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x248A DUP6 DUP3 DUP7 ADD PUSH3 0x2436 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x24D3 DUP3 PUSH3 0x2006 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x24F5 JUMPI PUSH3 0x24F4 PUSH3 0x2499 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250A PUSH3 0x1EE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x2518 DUP3 DUP3 PUSH3 0x24C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x253B JUMPI PUSH3 0x253A PUSH3 0x2499 JUMP JUMPDEST JUMPDEST PUSH3 0x2546 DUP3 PUSH3 0x2006 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2579 PUSH3 0x2573 DUP5 PUSH3 0x251D JUMP JUMPDEST PUSH3 0x24FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2598 JUMPI PUSH3 0x2597 PUSH3 0x2494 JUMP JUMPDEST JUMPDEST PUSH3 0x25A5 DUP5 DUP3 DUP6 PUSH3 0x2553 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x25C5 JUMPI PUSH3 0x25C4 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x25D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2562 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x25FD JUMPI PUSH3 0x25FC PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x260D DUP8 DUP3 DUP9 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x2620 DUP8 DUP3 DUP9 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2633 DUP8 DUP3 DUP9 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2657 JUMPI PUSH3 0x2656 PUSH3 0x1EF0 JUMP JUMPDEST JUMPDEST PUSH3 0x2665 DUP8 DUP3 DUP9 ADD PUSH3 0x25AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x269C PUSH3 0x2696 PUSH3 0x2690 DUP5 PUSH3 0x20E9 JUMP JUMPDEST PUSH3 0x2671 JUMP JUMPDEST PUSH3 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26B0 DUP3 PUSH3 0x267B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26C4 DUP3 PUSH3 0x26A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26D6 DUP2 PUSH3 0x26B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x26F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x26CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2713 JUMPI PUSH3 0x2712 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2723 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2736 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2788 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x279E JUMPI PUSH3 0x279D PUSH3 0x2740 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x27B5 DUP2 PUSH3 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27D4 JUMPI PUSH3 0x27D3 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x27E4 DUP5 DUP3 DUP6 ADD PUSH3 0x27A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2829 DUP3 PUSH3 0x21C3 JUMP JUMPDEST SWAP2 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x285E JUMPI PUSH3 0x285D PUSH3 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A20636F6C6C656374696F6E20646F6573206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206578697374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28C7 PUSH1 0x28 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x28D4 DUP3 PUSH3 0x2869 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x28FA DUP2 PUSH3 0x28B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2918 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2927 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E73666572206F6620746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2074686174206973206E6F74206F776E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x298C PUSH1 0x30 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2999 DUP3 PUSH3 0x292E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x29BF DUP2 PUSH3 0x297D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E7366657220746F20746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A24 PUSH1 0x2B DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2A31 DUP3 PUSH3 0x29C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2A57 DUP2 PUSH3 0x2A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A206361726420646F6573206E6F7420657869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2ABC PUSH1 0x22 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2AC9 DUP3 PUSH3 0x2A5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2AEF DUP2 PUSH3 0x2AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B03 DUP3 PUSH3 0x2109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B15 DUP2 PUSH3 0x2AF6 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B35 DUP2 PUSH3 0x2B0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B54 JUMPI PUSH3 0x2B53 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B64 DUP5 DUP3 DUP6 ADD PUSH3 0x2B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B7E DUP2 PUSH3 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B9D JUMPI PUSH3 0x2B9C PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2BAD DUP5 DUP3 DUP6 ADD PUSH3 0x2B6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BC3 DUP3 PUSH3 0x207C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2BF8 JUMPI PUSH3 0x2BF7 PUSH3 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C11 DUP4 DUP6 PUSH3 0x1FC9 JUMP JUMPDEST SWAP4 POP PUSH3 0x2C20 DUP4 DUP6 DUP5 PUSH3 0x2553 JUMP JUMPDEST PUSH3 0x2C2B DUP4 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C61 PUSH3 0x2C5B PUSH3 0x2C55 DUP5 PUSH3 0x2C36 JUMP JUMPDEST PUSH3 0x2671 JUMP JUMPDEST PUSH3 0x207C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C73 DUP2 PUSH3 0x2C40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2C96 DUP2 DUP6 DUP8 PUSH3 0x2C03 JUMP JUMPDEST SWAP1 POP PUSH3 0x2CA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2C68 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CC0 DUP2 PUSH3 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CDF JUMPI PUSH3 0x2CDE PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CEF DUP5 DUP3 DUP6 ADD PUSH3 0x2CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D05 DUP3 PUSH3 0x207C JUMP JUMPDEST SWAP2 POP PUSH3 0x2D12 DUP4 PUSH3 0x207C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x2D2D JUMPI PUSH3 0x2D2C PUSH3 0x27ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57697A6172640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D6B PUSH1 0x6 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2D78 DUP3 PUSH3 0x2D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2D9E DUP2 PUSH3 0x2D5C JUMP JUMPDEST SWAP1 POP PUSH3 0x2DAF PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x68747470733A2F2F696D616765732E706F6B656D6F6E7463672E696F2F787931 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2F312E706E670000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E13 PUSH1 0x26 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2E20 DUP3 PUSH3 0x2DB5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2E42 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2E55 DUP2 PUSH3 0x2E04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E75 DUP3 PUSH3 0x1FBE JUMP JUMPDEST PUSH3 0x2E81 DUP2 DUP6 PUSH3 0x2E5D JUMP JUMPDEST SWAP4 POP PUSH3 0x2E93 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2EAD DUP3 DUP6 PUSH3 0x2E68 JUMP JUMPDEST SWAP2 POP PUSH3 0x2EBB DUP3 DUP5 PUSH3 0x2E68 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2EF0 DUP3 PUSH3 0x2EC7 JUMP JUMPDEST PUSH3 0x2EFC DUP2 DUP6 PUSH3 0x2ED2 JUMP JUMPDEST SWAP4 POP PUSH3 0x2F0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x2F19 DUP2 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2F3B PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2F4A PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2F59 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x23EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x2F6D DUP2 DUP5 PUSH3 0x2EE3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F89 DUP2 PUSH3 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2FA8 JUMPI PUSH3 0x2FA7 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2FB8 DUP5 DUP3 DUP6 ADD PUSH3 0x2F78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2682 CODESIZE SUB DUP1 PUSH3 0x2682 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xC1 DUP3 PUSH3 0x76 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8 PUSH3 0x58 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x76 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1EB JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH3 0x23F PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x260 PUSH3 0x67 JUMP JUMPDEST JUMPDEST PUSH3 0x26F DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x282 DUP6 DUP3 DUP7 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x297 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x320 JUMP JUMPDEST PUSH3 0x36B DUP7 DUP4 PUSH3 0x320 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AE PUSH3 0x3A8 PUSH3 0x3A2 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x383 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP4 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D9 DUP3 PUSH3 0x3B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x406 DUP2 DUP5 DUP5 PUSH3 0x3BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42E JUMPI PUSH3 0x422 PUSH1 0x0 DUP3 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x40C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x447 DUP2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x452 DUP5 PUSH3 0x310 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x462 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47A PUSH3 0x471 DUP6 PUSH3 0x310 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x482 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BD DUP4 DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D8 DUP3 PUSH3 0x28C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 SLOAD PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x50D DUP3 DUP3 DUP6 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x545 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x530 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x53C DUP6 DUP3 PUSH3 0x4AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x555 DUP7 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x558 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x59B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20BE DUP1 PUSH3 0x5C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP13 KECCAK256 STATICCALL 0x4F PUSH22 0xE01907EEED3D4C3FE115C4B573F73205DB4DFB6C9B72 0xDD 0xE3 0x21 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"117:1129:15:-:0;;;350:49;;;;;;;;;;1381:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:10:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1455:5:2;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;385:10:15;368:14;;:27;;;;;;;;;;;;;;;;;;117:1129;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;117:1129:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1096":{"entryPoint":5573,"id":1096,"parameterSlots":3,"returnSlots":0},"@_approve_1162":{"entryPoint":7062,"id":1162,"parameterSlots":4,"returnSlots":0},"@_baseURI_489":{"entryPoint":6761,"id":489,"parameterSlots":0,"returnSlots":1},"@_checkOnERC721Received_1292":{"entryPoint":6305,"id":1292,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5593,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_671":{"entryPoint":5504,"id":671,"parameterSlots":1,"returnSlots":1},"@_msgSender_1468":{"entryPoint":5565,"id":1468,"parameterSlots":0,"returnSlots":1},"@_ownerOf_658":{"entryPoint":7001,"id":658,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1228":{"entryPoint":5363,"id":1228,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1199":{"entryPoint":5933,"id":1199,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5737,"id":146,"parameterSlots":1,"returnSlots":0},"@addACard_3298":{"entryPoint":4078,"id":3298,"parameterSlots":1,"returnSlots":1},"@approve_505":{"entryPoint":1707,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_3052":{"entryPoint":3503,"id":3052,"parameterSlots":1,"returnSlots":1},"@cardCollections_3002":{"entryPoint":4027,"id":3002,"parameterSlots":0,"returnSlots":0},"@collectionCount_3004":{"entryPoint":4722,"id":3004,"parameterSlots":0,"returnSlots":0},"@createGameCollection_3637":{"entryPoint":3321,"id":3637,"parameterSlots":3,"returnSlots":0},"@getApproved_522":{"entryPoint":1675,"id":522,"parameterSlots":1,"returnSlots":1},"@getCollectionNbForCard_3135":{"entryPoint":1733,"id":3135,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":4728,"id":555,"parameterSlots":2,"returnSlots":1},"@log10_2643":{"entryPoint":7527,"id":2643,"parameterSlots":1,"returnSlots":1},"@mintSomeCards_3223":{"entryPoint":5017,"id":3223,"parameterSlots":3,"returnSlots":0},"@mint_3248":{"entryPoint":2010,"id":3248,"parameterSlots":3,"returnSlots":0},"@name_435":{"entryPoint":1521,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_3096":{"entryPoint":3022,"id":3096,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3773,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3749,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":2988,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_645":{"entryPoint":3994,"id":645,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":3968,"id":538,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1756":{"entryPoint":5257,"id":1756,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":1291,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":3814,"id":444,"parameterSlots":0,"returnSlots":1},"@toString_1546":{"entryPoint":6784,"id":1546,"parameterSlots":1,"returnSlots":1},"@tokenURI_480":{"entryPoint":4607,"id":480,"parameterSlots":1,"returnSlots":1},"@transferFrom_3198":{"entryPoint":2250,"id":3198,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4876,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9570,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":11117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":9270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":10148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_Card_$2987_fromMemory":{"entryPoint":11044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256":{"entryPoint":9019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":8352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":11140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9977,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8791,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9696,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9293,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8572,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":8699,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":8018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_Card_$2987_fromMemory":{"entryPoint":11067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_int256":{"entryPoint":9042,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8477,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack":{"entryPoint":9931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8653,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":11368,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11267,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack":{"entryPoint":10773,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack":{"entryPoint":10621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack":{"entryPoint":11612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack":{"entryPoint":10424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack":{"entryPoint":10925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack":{"entryPoint":11780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9198,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11935,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12068,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed":{"entryPoint":9948,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11385,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10812,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10660,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11819,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9470,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7905,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9501,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11975,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8126,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11986,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11869,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11512,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8457,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7925,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_Card_$2987":{"entryPoint":10998,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":8643,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":11318,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8425,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8316,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_GameCollection_$3593_to_t_address":{"entryPoint":9911,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":11328,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":9891,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":9851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9555,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8154,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10095,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9416,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9841,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_int256":{"entryPoint":10268,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11190,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10221,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12225,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10048,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9369,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":8888,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8883,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8893,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9364,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7920,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7915,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8198,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0":{"entryPoint":10694,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846":{"entryPoint":10542,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5":{"entryPoint":11571,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b":{"entryPoint":10345,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a":{"entryPoint":10846,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92":{"entryPoint":11701,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8523,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9244,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7969,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_Card_$2987":{"entryPoint":11018,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":8993,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8326,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29095:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1860:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:16"},"nodeType":"YulFunctionCall","src":"1960:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:16"},"nodeType":"YulFunctionCall","src":"1979:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:16"},"nodeType":"YulFunctionCall","src":"1973:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:16"},"nodeType":"YulFunctionCall","src":"1953:39:16"},"nodeType":"YulExpressionStatement","src":"1953:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:16"},"nodeType":"YulFunctionCall","src":"1897:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:16","statements":[{"nodeType":"YulAssignment","src":"1913:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:16"},"nodeType":"YulFunctionCall","src":"1918:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:16","statements":[]},"src":"1889:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:16"},"nodeType":"YulFunctionCall","src":"2018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:16"},"nodeType":"YulFunctionCall","src":"2011:27:16"},"nodeType":"YulExpressionStatement","src":"2011:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:16","type":""}],"src":"1798:246:16"},{"body":{"nodeType":"YulBlock","src":"2098:54:16","statements":[{"nodeType":"YulAssignment","src":"2108:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:16"},"nodeType":"YulFunctionCall","src":"2138:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:16","type":""}],"src":"2050:102:16"},{"body":{"nodeType":"YulBlock","src":"2250:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:16"},"nodeType":"YulFunctionCall","src":"2274:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:16"},"nodeType":"YulFunctionCall","src":"2329:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:16"},"nodeType":"YulFunctionCall","src":"2409:65:16"},"nodeType":"YulExpressionStatement","src":"2409:65:16"},{"nodeType":"YulAssignment","src":"2483:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:16"},"nodeType":"YulFunctionCall","src":"2499:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:16"},"nodeType":"YulFunctionCall","src":"2490:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:16","type":""}],"src":"2158:377:16"},{"body":{"nodeType":"YulBlock","src":"2659:195:16","statements":[{"nodeType":"YulAssignment","src":"2669:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:16"},"nodeType":"YulFunctionCall","src":"2677:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:16"},"nodeType":"YulFunctionCall","src":"2712:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:16"},"nodeType":"YulFunctionCall","src":"2731:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:47:16"},"nodeType":"YulExpressionStatement","src":"2705:47:16"},{"nodeType":"YulAssignment","src":"2761:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:16"},"nodeType":"YulFunctionCall","src":"2769:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:16","type":""}],"src":"2541:313:16"},{"body":{"nodeType":"YulBlock","src":"2905:32:16","statements":[{"nodeType":"YulAssignment","src":"2915:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:16","type":""}],"src":"2860:77:16"},{"body":{"nodeType":"YulBlock","src":"2986:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:12:16"},"nodeType":"YulExpressionStatement","src":"3045:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:16"},"nodeType":"YulFunctionCall","src":"3016:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:16"},"nodeType":"YulFunctionCall","src":"3006:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:16"},"nodeType":"YulFunctionCall","src":"2999:43:16"},"nodeType":"YulIf","src":"2996:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:16","type":""}],"src":"2943:122:16"},{"body":{"nodeType":"YulBlock","src":"3123:87:16","statements":[{"nodeType":"YulAssignment","src":"3133:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:16"},"nodeType":"YulFunctionCall","src":"3142:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:16"},"nodeType":"YulFunctionCall","src":"3171:33:16"},"nodeType":"YulExpressionStatement","src":"3171:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:16","type":""}],"src":"3071:139:16"},{"body":{"nodeType":"YulBlock","src":"3282:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:16"},"nodeType":"YulFunctionCall","src":"3330:79:16"},"nodeType":"YulExpressionStatement","src":"3330:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:16"},"nodeType":"YulFunctionCall","src":"3295:32:16"},"nodeType":"YulIf","src":"3292:119:16"},{"nodeType":"YulBlock","src":"3421:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:16"},"nodeType":"YulFunctionCall","src":"3496:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:16"},"nodeType":"YulFunctionCall","src":"3475:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:16","type":""}],"src":"3216:329:16"},{"body":{"nodeType":"YulBlock","src":"3596:81:16","statements":[{"nodeType":"YulAssignment","src":"3606:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:16"},"nodeType":"YulFunctionCall","src":"3617:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:16","type":""}],"src":"3551:126:16"},{"body":{"nodeType":"YulBlock","src":"3728:51:16","statements":[{"nodeType":"YulAssignment","src":"3738:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:16"},"nodeType":"YulFunctionCall","src":"3749:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:16","type":""}],"src":"3683:96:16"},{"body":{"nodeType":"YulBlock","src":"3850:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:16"},"nodeType":"YulFunctionCall","src":"3872:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:16"},"nodeType":"YulFunctionCall","src":"3860:37:16"},"nodeType":"YulExpressionStatement","src":"3860:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:16","type":""}],"src":"3785:118:16"},{"body":{"nodeType":"YulBlock","src":"4007:124:16","statements":[{"nodeType":"YulAssignment","src":"4017:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:16"},"nodeType":"YulFunctionCall","src":"4025:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:16"},"nodeType":"YulFunctionCall","src":"4106:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:16"},"nodeType":"YulFunctionCall","src":"4053:71:16"},"nodeType":"YulExpressionStatement","src":"4053:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:16","type":""}],"src":"3909:222:16"},{"body":{"nodeType":"YulBlock","src":"4180:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:16"},"nodeType":"YulFunctionCall","src":"4239:12:16"},"nodeType":"YulExpressionStatement","src":"4239:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:16"},"nodeType":"YulFunctionCall","src":"4210:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:16"},"nodeType":"YulFunctionCall","src":"4200:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:16"},"nodeType":"YulFunctionCall","src":"4193:43:16"},"nodeType":"YulIf","src":"4190:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:16","type":""}],"src":"4137:122:16"},{"body":{"nodeType":"YulBlock","src":"4317:87:16","statements":[{"nodeType":"YulAssignment","src":"4327:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:16"},"nodeType":"YulFunctionCall","src":"4336:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:16"},"nodeType":"YulFunctionCall","src":"4365:33:16"},"nodeType":"YulExpressionStatement","src":"4365:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:16","type":""}],"src":"4265:139:16"},{"body":{"nodeType":"YulBlock","src":"4493:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:16"},"nodeType":"YulFunctionCall","src":"4541:79:16"},"nodeType":"YulExpressionStatement","src":"4541:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:16"},"nodeType":"YulFunctionCall","src":"4510:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:16"},"nodeType":"YulFunctionCall","src":"4506:32:16"},"nodeType":"YulIf","src":"4503:119:16"},{"nodeType":"YulBlock","src":"4632:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:16"},"nodeType":"YulFunctionCall","src":"4707:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:16"},"nodeType":"YulFunctionCall","src":"4686:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:16"}]}]},{"nodeType":"YulBlock","src":"4759:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:16"},"nodeType":"YulFunctionCall","src":"4835:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:16"},"nodeType":"YulFunctionCall","src":"4814:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:16","type":""}],"src":"4410:474:16"},{"body":{"nodeType":"YulBlock","src":"4934:32:16","statements":[{"nodeType":"YulAssignment","src":"4944:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4955:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4944:7:16"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4916:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4926:7:16","type":""}],"src":"4890:76:16"},{"body":{"nodeType":"YulBlock","src":"5035:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5052:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5074:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5057:16:16"},"nodeType":"YulFunctionCall","src":"5057:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5045:6:16"},"nodeType":"YulFunctionCall","src":"5045:36:16"},"nodeType":"YulExpressionStatement","src":"5045:36:16"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5023:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5030:3:16","type":""}],"src":"4972:115:16"},{"body":{"nodeType":"YulBlock","src":"5189:122:16","statements":[{"nodeType":"YulAssignment","src":"5199:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5211:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5222:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5207:3:16"},"nodeType":"YulFunctionCall","src":"5207:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5199:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5277:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5301:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:16"},"nodeType":"YulFunctionCall","src":"5286:17:16"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"5235:41:16"},"nodeType":"YulFunctionCall","src":"5235:69:16"},"nodeType":"YulExpressionStatement","src":"5235:69:16"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5161:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5173:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5184:4:16","type":""}],"src":"5093:218:16"},{"body":{"nodeType":"YulBlock","src":"5417:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"5463:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5465:77:16"},"nodeType":"YulFunctionCall","src":"5465:79:16"},"nodeType":"YulExpressionStatement","src":"5465:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5438:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5447:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5434:3:16"},"nodeType":"YulFunctionCall","src":"5434:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5459:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5430:3:16"},"nodeType":"YulFunctionCall","src":"5430:32:16"},"nodeType":"YulIf","src":"5427:119:16"},{"nodeType":"YulBlock","src":"5556:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5571:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5585:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5575:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5600:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5635:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5646:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5631:3:16"},"nodeType":"YulFunctionCall","src":"5631:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5655:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5610:20:16"},"nodeType":"YulFunctionCall","src":"5610:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5600:6:16"}]}]},{"nodeType":"YulBlock","src":"5683:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5698:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5712:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5702:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5728:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5763:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5774:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:16"},"nodeType":"YulFunctionCall","src":"5759:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5783:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5738:20:16"},"nodeType":"YulFunctionCall","src":"5738:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5728:6:16"}]}]},{"nodeType":"YulBlock","src":"5811:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5826:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5840:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5830:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5856:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5902:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:16"},"nodeType":"YulFunctionCall","src":"5887:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5866:20:16"},"nodeType":"YulFunctionCall","src":"5866:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5856:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5371:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5382:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5394:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5402:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5410:6:16","type":""}],"src":"5317:619:16"},{"body":{"nodeType":"YulBlock","src":"6042:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"6088:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6090:77:16"},"nodeType":"YulFunctionCall","src":"6090:79:16"},"nodeType":"YulExpressionStatement","src":"6090:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6063:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6072:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:16"},"nodeType":"YulFunctionCall","src":"6059:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6084:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6055:3:16"},"nodeType":"YulFunctionCall","src":"6055:32:16"},"nodeType":"YulIf","src":"6052:119:16"},{"nodeType":"YulBlock","src":"6181:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6196:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6210:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6200:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6225:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6260:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6271:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6256:3:16"},"nodeType":"YulFunctionCall","src":"6256:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6280:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6235:20:16"},"nodeType":"YulFunctionCall","src":"6235:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6225:6:16"}]}]},{"nodeType":"YulBlock","src":"6308:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6323:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6337:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6327:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6353:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6388:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6399:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:16"},"nodeType":"YulFunctionCall","src":"6384:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6408:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6363:20:16"},"nodeType":"YulFunctionCall","src":"6363:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6353:6:16"}]}]},{"nodeType":"YulBlock","src":"6436:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6451:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6465:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6455:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6481:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6516:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6527:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:16"},"nodeType":"YulFunctionCall","src":"6512:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6536:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6491:20:16"},"nodeType":"YulFunctionCall","src":"6491:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6481:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5996:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6007:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6019:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6027:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6035:6:16","type":""}],"src":"5942:619:16"},{"body":{"nodeType":"YulBlock","src":"6656:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6673:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6676:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6666:6:16"},"nodeType":"YulFunctionCall","src":"6666:12:16"},"nodeType":"YulExpressionStatement","src":"6666:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6567:117:16"},{"body":{"nodeType":"YulBlock","src":"6779:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6796:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6799:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6789:6:16"},"nodeType":"YulFunctionCall","src":"6789:12:16"},"nodeType":"YulExpressionStatement","src":"6789:12:16"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6690:117:16"},{"body":{"nodeType":"YulBlock","src":"6902:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6919:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6922:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6912:6:16"},"nodeType":"YulFunctionCall","src":"6912:12:16"},"nodeType":"YulExpressionStatement","src":"6912:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6813:117:16"},{"body":{"nodeType":"YulBlock","src":"7025:478:16","statements":[{"body":{"nodeType":"YulBlock","src":"7074:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7076:77:16"},"nodeType":"YulFunctionCall","src":"7076:79:16"},"nodeType":"YulExpressionStatement","src":"7076:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7053:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7061:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7049:3:16"},"nodeType":"YulFunctionCall","src":"7049:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"7068:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7045:3:16"},"nodeType":"YulFunctionCall","src":"7045:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7038:6:16"},"nodeType":"YulFunctionCall","src":"7038:35:16"},"nodeType":"YulIf","src":"7035:122:16"},{"nodeType":"YulAssignment","src":"7166:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7189:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7176:12:16"},"nodeType":"YulFunctionCall","src":"7176:20:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7166:6:16"}]},{"body":{"nodeType":"YulBlock","src":"7239:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"7241:77:16"},"nodeType":"YulFunctionCall","src":"7241:79:16"},"nodeType":"YulExpressionStatement","src":"7241:79:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7211:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7219:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7208:2:16"},"nodeType":"YulFunctionCall","src":"7208:30:16"},"nodeType":"YulIf","src":"7205:117:16"},{"nodeType":"YulAssignment","src":"7331:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7347:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7355:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7343:3:16"},"nodeType":"YulFunctionCall","src":"7343:17:16"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7331:8:16"}]},{"body":{"nodeType":"YulBlock","src":"7414:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7416:77:16"},"nodeType":"YulFunctionCall","src":"7416:79:16"},"nodeType":"YulExpressionStatement","src":"7416:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7379:8:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7393:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7401:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7389:3:16"},"nodeType":"YulFunctionCall","src":"7389:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7375:3:16"},"nodeType":"YulFunctionCall","src":"7375:32:16"},{"name":"end","nodeType":"YulIdentifier","src":"7409:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7372:2:16"},"nodeType":"YulFunctionCall","src":"7372:41:16"},"nodeType":"YulIf","src":"7369:128:16"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6992:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7000:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7008:8:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7018:6:16","type":""}],"src":"6950:553:16"},{"body":{"nodeType":"YulBlock","src":"7551:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"7607:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7616:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7619:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7609:6:16"},"nodeType":"YulFunctionCall","src":"7609:12:16"},"nodeType":"YulExpressionStatement","src":"7609:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7574:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7598:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"7581:16:16"},"nodeType":"YulFunctionCall","src":"7581:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7571:2:16"},"nodeType":"YulFunctionCall","src":"7571:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7564:6:16"},"nodeType":"YulFunctionCall","src":"7564:42:16"},"nodeType":"YulIf","src":"7561:62:16"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7544:5:16","type":""}],"src":"7509:120:16"},{"body":{"nodeType":"YulBlock","src":"7686:86:16","statements":[{"nodeType":"YulAssignment","src":"7696:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7718:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7705:12:16"},"nodeType":"YulFunctionCall","src":"7705:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7696:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7760:5:16"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"7734:25:16"},"nodeType":"YulFunctionCall","src":"7734:32:16"},"nodeType":"YulExpressionStatement","src":"7734:32:16"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7664:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7672:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7680:5:16","type":""}],"src":"7635:137:16"},{"body":{"nodeType":"YulBlock","src":"7880:570:16","statements":[{"body":{"nodeType":"YulBlock","src":"7926:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7928:77:16"},"nodeType":"YulFunctionCall","src":"7928:79:16"},"nodeType":"YulExpressionStatement","src":"7928:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7901:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7910:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7897:3:16"},"nodeType":"YulFunctionCall","src":"7897:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7922:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7893:3:16"},"nodeType":"YulFunctionCall","src":"7893:32:16"},"nodeType":"YulIf","src":"7890:119:16"},{"nodeType":"YulBlock","src":"8019:297:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8034:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8065:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8076:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8061:3:16"},"nodeType":"YulFunctionCall","src":"8061:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8048:12:16"},"nodeType":"YulFunctionCall","src":"8048:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8038:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8126:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8128:77:16"},"nodeType":"YulFunctionCall","src":"8128:79:16"},"nodeType":"YulExpressionStatement","src":"8128:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8098:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8106:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8095:2:16"},"nodeType":"YulFunctionCall","src":"8095:30:16"},"nodeType":"YulIf","src":"8092:117:16"},{"nodeType":"YulAssignment","src":"8223:83:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8278:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8289:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8274:3:16"},"nodeType":"YulFunctionCall","src":"8274:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8298:7:16"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"8241:32:16"},"nodeType":"YulFunctionCall","src":"8241:65:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8223:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"8231:6:16"}]}]},{"nodeType":"YulBlock","src":"8326:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8341:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8355:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8345:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8371:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8405:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8416:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8401:3:16"},"nodeType":"YulFunctionCall","src":"8401:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8425:7:16"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"8381:19:16"},"nodeType":"YulFunctionCall","src":"8381:52:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8371:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7834:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7845:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7857:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7865:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7873:6:16","type":""}],"src":"7778:672:16"},{"body":{"nodeType":"YulBlock","src":"8522:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"8568:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8570:77:16"},"nodeType":"YulFunctionCall","src":"8570:79:16"},"nodeType":"YulExpressionStatement","src":"8570:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8543:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8552:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8539:3:16"},"nodeType":"YulFunctionCall","src":"8539:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8564:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8535:3:16"},"nodeType":"YulFunctionCall","src":"8535:32:16"},"nodeType":"YulIf","src":"8532:119:16"},{"nodeType":"YulBlock","src":"8661:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8676:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8690:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8680:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8705:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8740:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8751:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:16"},"nodeType":"YulFunctionCall","src":"8736:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8760:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8715:20:16"},"nodeType":"YulFunctionCall","src":"8715:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8705:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8492:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8503:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8515:6:16","type":""}],"src":"8456:329:16"},{"body":{"nodeType":"YulBlock","src":"8856:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8896:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8878:17:16"},"nodeType":"YulFunctionCall","src":"8878:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8866:6:16"},"nodeType":"YulFunctionCall","src":"8866:37:16"},"nodeType":"YulExpressionStatement","src":"8866:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8844:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8851:3:16","type":""}],"src":"8791:118:16"},{"body":{"nodeType":"YulBlock","src":"9013:124:16","statements":[{"nodeType":"YulAssignment","src":"9023:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9035:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9046:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9031:3:16"},"nodeType":"YulFunctionCall","src":"9031:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9023:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9103:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9116:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9127:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9112:3:16"},"nodeType":"YulFunctionCall","src":"9112:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9059:43:16"},"nodeType":"YulFunctionCall","src":"9059:71:16"},"nodeType":"YulExpressionStatement","src":"9059:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8985:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8997:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9008:4:16","type":""}],"src":"8915:222:16"},{"body":{"nodeType":"YulBlock","src":"9183:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"9237:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9246:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9249:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9239:6:16"},"nodeType":"YulFunctionCall","src":"9239:12:16"},"nodeType":"YulExpressionStatement","src":"9239:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9206:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9228:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9213:14:16"},"nodeType":"YulFunctionCall","src":"9213:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9203:2:16"},"nodeType":"YulFunctionCall","src":"9203:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9196:6:16"},"nodeType":"YulFunctionCall","src":"9196:40:16"},"nodeType":"YulIf","src":"9193:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9176:5:16","type":""}],"src":"9143:116:16"},{"body":{"nodeType":"YulBlock","src":"9314:84:16","statements":[{"nodeType":"YulAssignment","src":"9324:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9346:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9333:12:16"},"nodeType":"YulFunctionCall","src":"9333:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9324:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9386:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9362:23:16"},"nodeType":"YulFunctionCall","src":"9362:30:16"},"nodeType":"YulExpressionStatement","src":"9362:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9292:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9300:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9308:5:16","type":""}],"src":"9265:133:16"},{"body":{"nodeType":"YulBlock","src":"9484:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"9530:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9532:77:16"},"nodeType":"YulFunctionCall","src":"9532:79:16"},"nodeType":"YulExpressionStatement","src":"9532:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9505:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9514:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9501:3:16"},"nodeType":"YulFunctionCall","src":"9501:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9526:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9497:3:16"},"nodeType":"YulFunctionCall","src":"9497:32:16"},"nodeType":"YulIf","src":"9494:119:16"},{"nodeType":"YulBlock","src":"9623:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9638:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9652:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9642:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9667:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9702:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9713:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9698:3:16"},"nodeType":"YulFunctionCall","src":"9698:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9722:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9677:20:16"},"nodeType":"YulFunctionCall","src":"9677:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9667:6:16"}]}]},{"nodeType":"YulBlock","src":"9750:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9765:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9779:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9769:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9795:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9827:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9838:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9823:3:16"},"nodeType":"YulFunctionCall","src":"9823:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9847:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"9805:17:16"},"nodeType":"YulFunctionCall","src":"9805:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9795:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9446:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9457:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9469:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9477:6:16","type":""}],"src":"9404:468:16"},{"body":{"nodeType":"YulBlock","src":"9967:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9984:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9987:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9977:6:16"},"nodeType":"YulFunctionCall","src":"9977:12:16"},"nodeType":"YulExpressionStatement","src":"9977:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"9878:117:16"},{"body":{"nodeType":"YulBlock","src":"10029:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10046:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10049:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10039:6:16"},"nodeType":"YulFunctionCall","src":"10039:88:16"},"nodeType":"YulExpressionStatement","src":"10039:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10143:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10146:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10136:6:16"},"nodeType":"YulFunctionCall","src":"10136:15:16"},"nodeType":"YulExpressionStatement","src":"10136:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10167:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10170:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10160:6:16"},"nodeType":"YulFunctionCall","src":"10160:15:16"},"nodeType":"YulExpressionStatement","src":"10160:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10001:180:16"},{"body":{"nodeType":"YulBlock","src":"10230:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10240:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10262:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10292:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10270:21:16"},"nodeType":"YulFunctionCall","src":"10270:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10258:3:16"},"nodeType":"YulFunctionCall","src":"10258:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10244:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10409:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10411:16:16"},"nodeType":"YulFunctionCall","src":"10411:18:16"},"nodeType":"YulExpressionStatement","src":"10411:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10352:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"10364:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10349:2:16"},"nodeType":"YulFunctionCall","src":"10349:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10388:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10400:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10385:2:16"},"nodeType":"YulFunctionCall","src":"10385:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10346:2:16"},"nodeType":"YulFunctionCall","src":"10346:62:16"},"nodeType":"YulIf","src":"10343:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10447:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10451:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10440:6:16"},"nodeType":"YulFunctionCall","src":"10440:22:16"},"nodeType":"YulExpressionStatement","src":"10440:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10216:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"10224:4:16","type":""}],"src":"10187:281:16"},{"body":{"nodeType":"YulBlock","src":"10515:88:16","statements":[{"nodeType":"YulAssignment","src":"10525:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10535:18:16"},"nodeType":"YulFunctionCall","src":"10535:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10525:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10584:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"10592:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10564:19:16"},"nodeType":"YulFunctionCall","src":"10564:33:16"},"nodeType":"YulExpressionStatement","src":"10564:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10499:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10508:6:16","type":""}],"src":"10474:129:16"},{"body":{"nodeType":"YulBlock","src":"10675:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"10780:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10782:16:16"},"nodeType":"YulFunctionCall","src":"10782:18:16"},"nodeType":"YulExpressionStatement","src":"10782:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10752:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10760:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10749:2:16"},"nodeType":"YulFunctionCall","src":"10749:30:16"},"nodeType":"YulIf","src":"10746:56:16"},{"nodeType":"YulAssignment","src":"10812:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10842:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10820:21:16"},"nodeType":"YulFunctionCall","src":"10820:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10812:4:16"}]},{"nodeType":"YulAssignment","src":"10886:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10898:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"10904:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10894:3:16"},"nodeType":"YulFunctionCall","src":"10894:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10886:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10659:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10670:4:16","type":""}],"src":"10609:307:16"},{"body":{"nodeType":"YulBlock","src":"10986:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11009:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"11014:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11019:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10996:12:16"},"nodeType":"YulFunctionCall","src":"10996:30:16"},"nodeType":"YulExpressionStatement","src":"10996:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11046:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11042:3:16"},"nodeType":"YulFunctionCall","src":"11042:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"11060:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11035:6:16"},"nodeType":"YulFunctionCall","src":"11035:27:16"},"nodeType":"YulExpressionStatement","src":"11035:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10968:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10973:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"10978:6:16","type":""}],"src":"10922:146:16"},{"body":{"nodeType":"YulBlock","src":"11157:340:16","statements":[{"nodeType":"YulAssignment","src":"11167:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11233:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11192:40:16"},"nodeType":"YulFunctionCall","src":"11192:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11176:15:16"},"nodeType":"YulFunctionCall","src":"11176:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11167:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11257:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"11264:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11250:6:16"},"nodeType":"YulFunctionCall","src":"11250:21:16"},"nodeType":"YulExpressionStatement","src":"11250:21:16"},{"nodeType":"YulVariableDeclaration","src":"11280:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11295:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11302:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11291:3:16"},"nodeType":"YulFunctionCall","src":"11291:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11284:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11345:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11347:77:16"},"nodeType":"YulFunctionCall","src":"11347:79:16"},"nodeType":"YulExpressionStatement","src":"11347:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11326:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11331:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:16"},"nodeType":"YulFunctionCall","src":"11322:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"11340:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11319:2:16"},"nodeType":"YulFunctionCall","src":"11319:25:16"},"nodeType":"YulIf","src":"11316:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11474:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"11479:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11484:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11437:36:16"},"nodeType":"YulFunctionCall","src":"11437:54:16"},"nodeType":"YulExpressionStatement","src":"11437:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11130:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"11135:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"11143:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11151:5:16","type":""}],"src":"11074:423:16"},{"body":{"nodeType":"YulBlock","src":"11577:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"11626:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11628:77:16"},"nodeType":"YulFunctionCall","src":"11628:79:16"},"nodeType":"YulExpressionStatement","src":"11628:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11605:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11613:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11601:3:16"},"nodeType":"YulFunctionCall","src":"11601:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"11620:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11597:3:16"},"nodeType":"YulFunctionCall","src":"11597:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11590:6:16"},"nodeType":"YulFunctionCall","src":"11590:35:16"},"nodeType":"YulIf","src":"11587:122:16"},{"nodeType":"YulVariableDeclaration","src":"11718:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11745:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11732:12:16"},"nodeType":"YulFunctionCall","src":"11732:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11722:6:16","type":""}]},{"nodeType":"YulAssignment","src":"11761:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11821:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11829:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11817:3:16"},"nodeType":"YulFunctionCall","src":"11817:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"11836:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"11844:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11770:46:16"},"nodeType":"YulFunctionCall","src":"11770:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11761:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11555:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"11563:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11571:5:16","type":""}],"src":"11516:338:16"},{"body":{"nodeType":"YulBlock","src":"11986:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"12033:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12035:77:16"},"nodeType":"YulFunctionCall","src":"12035:79:16"},"nodeType":"YulExpressionStatement","src":"12035:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12007:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12016:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12003:3:16"},"nodeType":"YulFunctionCall","src":"12003:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12028:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11999:3:16"},"nodeType":"YulFunctionCall","src":"11999:33:16"},"nodeType":"YulIf","src":"11996:120:16"},{"nodeType":"YulBlock","src":"12126:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12141:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12155:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12145:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12170:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12205:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12216:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12201:3:16"},"nodeType":"YulFunctionCall","src":"12201:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12225:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12180:20:16"},"nodeType":"YulFunctionCall","src":"12180:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12170:6:16"}]}]},{"nodeType":"YulBlock","src":"12253:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12268:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12282:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12272:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12298:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12333:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12344:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12329:3:16"},"nodeType":"YulFunctionCall","src":"12329:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12353:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12308:20:16"},"nodeType":"YulFunctionCall","src":"12308:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12298:6:16"}]}]},{"nodeType":"YulBlock","src":"12381:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12396:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12410:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12400:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12426:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12461:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12472:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12457:3:16"},"nodeType":"YulFunctionCall","src":"12457:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12481:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12436:20:16"},"nodeType":"YulFunctionCall","src":"12436:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12426:6:16"}]}]},{"nodeType":"YulBlock","src":"12509:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12524:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12555:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12566:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12551:3:16"},"nodeType":"YulFunctionCall","src":"12551:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12538:12:16"},"nodeType":"YulFunctionCall","src":"12538:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12528:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12617:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12619:77:16"},"nodeType":"YulFunctionCall","src":"12619:79:16"},"nodeType":"YulExpressionStatement","src":"12619:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12589:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12597:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12586:2:16"},"nodeType":"YulFunctionCall","src":"12586:30:16"},"nodeType":"YulIf","src":"12583:117:16"},{"nodeType":"YulAssignment","src":"12714:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12758:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12769:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12754:3:16"},"nodeType":"YulFunctionCall","src":"12754:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12778:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12724:29:16"},"nodeType":"YulFunctionCall","src":"12724:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12714:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11932:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11943:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11955:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11963:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11971:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11979:6:16","type":""}],"src":"11860:943:16"},{"body":{"nodeType":"YulBlock","src":"12841:28:16","statements":[{"nodeType":"YulAssignment","src":"12851:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"12858:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12851:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12827:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12837:3:16","type":""}],"src":"12809:60:16"},{"body":{"nodeType":"YulBlock","src":"12935:82:16","statements":[{"nodeType":"YulAssignment","src":"12945:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13003:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12985:17:16"},"nodeType":"YulFunctionCall","src":"12985:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12976:8:16"},"nodeType":"YulFunctionCall","src":"12976:34:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12958:17:16"},"nodeType":"YulFunctionCall","src":"12958:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12945:9:16"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12915:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12925:9:16","type":""}],"src":"12875:142:16"},{"body":{"nodeType":"YulBlock","src":"13083:66:16","statements":[{"nodeType":"YulAssignment","src":"13093:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13137:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"13106:30:16"},"nodeType":"YulFunctionCall","src":"13106:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13093:9:16"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13063:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13073:9:16","type":""}],"src":"13023:126:16"},{"body":{"nodeType":"YulBlock","src":"13238:66:16","statements":[{"nodeType":"YulAssignment","src":"13248:50:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13292:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13261:30:16"},"nodeType":"YulFunctionCall","src":"13261:37:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13248:9:16"}]}]},"name":"convert_t_contract$_GameCollection_$3593_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13218:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13228:9:16","type":""}],"src":"13155:149:16"},{"body":{"nodeType":"YulBlock","src":"13398:89:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13415:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13474:5:16"}],"functionName":{"name":"convert_t_contract$_GameCollection_$3593_to_t_address","nodeType":"YulIdentifier","src":"13420:53:16"},"nodeType":"YulFunctionCall","src":"13420:60:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13408:6:16"},"nodeType":"YulFunctionCall","src":"13408:73:16"},"nodeType":"YulExpressionStatement","src":"13408:73:16"}]},"name":"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13386:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13393:3:16","type":""}],"src":"13310:177:16"},{"body":{"nodeType":"YulBlock","src":"13614:147:16","statements":[{"nodeType":"YulAssignment","src":"13624:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13636:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13647:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13632:3:16"},"nodeType":"YulFunctionCall","src":"13632:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13624:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13727:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13740:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13751:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13736:3:16"},"nodeType":"YulFunctionCall","src":"13736:17:16"}],"functionName":{"name":"abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13660:66:16"},"nodeType":"YulFunctionCall","src":"13660:94:16"},"nodeType":"YulExpressionStatement","src":"13660:94:16"}]},"name":"abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13586:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13598:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13609:4:16","type":""}],"src":"13493:268:16"},{"body":{"nodeType":"YulBlock","src":"13850:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"13896:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13898:77:16"},"nodeType":"YulFunctionCall","src":"13898:79:16"},"nodeType":"YulExpressionStatement","src":"13898:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13871:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13880:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13867:3:16"},"nodeType":"YulFunctionCall","src":"13867:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"13892:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13863:3:16"},"nodeType":"YulFunctionCall","src":"13863:32:16"},"nodeType":"YulIf","src":"13860:119:16"},{"nodeType":"YulBlock","src":"13989:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14004:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14018:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14008:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14033:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14068:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14079:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14064:3:16"},"nodeType":"YulFunctionCall","src":"14064:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14088:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14043:20:16"},"nodeType":"YulFunctionCall","src":"14043:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14033:6:16"}]}]},{"nodeType":"YulBlock","src":"14116:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14131:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14145:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14135:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14161:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14196:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14207:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14192:3:16"},"nodeType":"YulFunctionCall","src":"14192:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14216:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14171:20:16"},"nodeType":"YulFunctionCall","src":"14171:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14161:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13812:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13823:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13835:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13843:6:16","type":""}],"src":"13767:474:16"},{"body":{"nodeType":"YulBlock","src":"14275:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14292:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14295:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14285:6:16"},"nodeType":"YulFunctionCall","src":"14285:88:16"},"nodeType":"YulExpressionStatement","src":"14285:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14389:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14392:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14382:6:16"},"nodeType":"YulFunctionCall","src":"14382:15:16"},"nodeType":"YulExpressionStatement","src":"14382:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14413:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14416:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14406:6:16"},"nodeType":"YulFunctionCall","src":"14406:15:16"},"nodeType":"YulExpressionStatement","src":"14406:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14247:180:16"},{"body":{"nodeType":"YulBlock","src":"14484:269:16","statements":[{"nodeType":"YulAssignment","src":"14494:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14508:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"14514:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14504:3:16"},"nodeType":"YulFunctionCall","src":"14504:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14494:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"14525:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14555:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"14561:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14551:3:16"},"nodeType":"YulFunctionCall","src":"14551:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14529:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14602:51:16","statements":[{"nodeType":"YulAssignment","src":"14616:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14630:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14638:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14626:3:16"},"nodeType":"YulFunctionCall","src":"14626:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14616:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14582:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14575:6:16"},"nodeType":"YulFunctionCall","src":"14575:26:16"},"nodeType":"YulIf","src":"14572:81:16"},{"body":{"nodeType":"YulBlock","src":"14705:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14719:16:16"},"nodeType":"YulFunctionCall","src":"14719:18:16"},"nodeType":"YulExpressionStatement","src":"14719:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14669:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14692:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14700:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14689:2:16"},"nodeType":"YulFunctionCall","src":"14689:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14666:2:16"},"nodeType":"YulFunctionCall","src":"14666:38:16"},"nodeType":"YulIf","src":"14663:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14468:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14477:6:16","type":""}],"src":"14433:320:16"},{"body":{"nodeType":"YulBlock","src":"14819:77:16","statements":[{"nodeType":"YulAssignment","src":"14829:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14844:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14838:5:16"},"nodeType":"YulFunctionCall","src":"14838:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14829:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14884:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"14860:23:16"},"nodeType":"YulFunctionCall","src":"14860:30:16"},"nodeType":"YulExpressionStatement","src":"14860:30:16"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14797:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"14805:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14813:5:16","type":""}],"src":"14759:137:16"},{"body":{"nodeType":"YulBlock","src":"14976:271:16","statements":[{"body":{"nodeType":"YulBlock","src":"15022:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15024:77:16"},"nodeType":"YulFunctionCall","src":"15024:79:16"},"nodeType":"YulExpressionStatement","src":"15024:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14997:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15006:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14993:3:16"},"nodeType":"YulFunctionCall","src":"14993:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"15018:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14989:3:16"},"nodeType":"YulFunctionCall","src":"14989:32:16"},"nodeType":"YulIf","src":"14986:119:16"},{"nodeType":"YulBlock","src":"15115:125:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15130:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15144:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15134:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15159:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15202:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15213:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15198:3:16"},"nodeType":"YulFunctionCall","src":"15198:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15222:7:16"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"15169:28:16"},"nodeType":"YulFunctionCall","src":"15169:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15159:6:16"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14946:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14957:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14969:6:16","type":""}],"src":"14902:345:16"},{"body":{"nodeType":"YulBlock","src":"15281:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15298:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15301:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15291:6:16"},"nodeType":"YulFunctionCall","src":"15291:88:16"},"nodeType":"YulExpressionStatement","src":"15291:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15395:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15398:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15388:6:16"},"nodeType":"YulFunctionCall","src":"15388:15:16"},"nodeType":"YulExpressionStatement","src":"15388:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15419:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15422:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15412:6:16"},"nodeType":"YulFunctionCall","src":"15412:15:16"},"nodeType":"YulExpressionStatement","src":"15412:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15253:180:16"},{"body":{"nodeType":"YulBlock","src":"15481:189:16","statements":[{"nodeType":"YulAssignment","src":"15491:32:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15517:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"15500:16:16"},"nodeType":"YulFunctionCall","src":"15500:23:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15491:5:16"}]},{"body":{"nodeType":"YulBlock","src":"15613:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15615:16:16"},"nodeType":"YulFunctionCall","src":"15615:18:16"},"nodeType":"YulExpressionStatement","src":"15615:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15538:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"15545:66:16","type":"","value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15535:2:16"},"nodeType":"YulFunctionCall","src":"15535:77:16"},"nodeType":"YulIf","src":"15532:103:16"},{"nodeType":"YulAssignment","src":"15644:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15655:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"15662:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:16"},"nodeType":"YulFunctionCall","src":"15651:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15644:3:16"}]}]},"name":"increment_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15467:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15477:3:16","type":""}],"src":"15439:231:16"},{"body":{"nodeType":"YulBlock","src":"15782:121:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15804:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15812:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15800:3:16"},"nodeType":"YulFunctionCall","src":"15800:14:16"},{"hexValue":"436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e","kind":"string","nodeType":"YulLiteral","src":"15816:34:16","type":"","value":"CardOwnership: collection does n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15793:6:16"},"nodeType":"YulFunctionCall","src":"15793:58:16"},"nodeType":"YulExpressionStatement","src":"15793:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15872:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15880:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15868:3:16"},"nodeType":"YulFunctionCall","src":"15868:15:16"},{"hexValue":"6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"15885:10:16","type":"","value":"ot exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15861:6:16"},"nodeType":"YulFunctionCall","src":"15861:35:16"},"nodeType":"YulExpressionStatement","src":"15861:35:16"}]},"name":"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15774:6:16","type":""}],"src":"15676:227:16"},{"body":{"nodeType":"YulBlock","src":"16055:220:16","statements":[{"nodeType":"YulAssignment","src":"16065:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16131:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16136:2:16","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16072:58:16"},"nodeType":"YulFunctionCall","src":"16072:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16065:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16237:3:16"}],"functionName":{"name":"store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b","nodeType":"YulIdentifier","src":"16148:88:16"},"nodeType":"YulFunctionCall","src":"16148:93:16"},"nodeType":"YulExpressionStatement","src":"16148:93:16"},{"nodeType":"YulAssignment","src":"16250:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16261:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16266:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16257:3:16"},"nodeType":"YulFunctionCall","src":"16257:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16250:3:16"}]}]},"name":"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16043:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16051:3:16","type":""}],"src":"15909:366:16"},{"body":{"nodeType":"YulBlock","src":"16452:248:16","statements":[{"nodeType":"YulAssignment","src":"16462:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16474:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16485:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16470:3:16"},"nodeType":"YulFunctionCall","src":"16470:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16462:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16509:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16520:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16505:3:16"},"nodeType":"YulFunctionCall","src":"16505:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16528:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16534:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16524:3:16"},"nodeType":"YulFunctionCall","src":"16524:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16498:6:16"},"nodeType":"YulFunctionCall","src":"16498:47:16"},"nodeType":"YulExpressionStatement","src":"16498:47:16"},{"nodeType":"YulAssignment","src":"16554:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16688:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16562:124:16"},"nodeType":"YulFunctionCall","src":"16562:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16554:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16432:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16447:4:16","type":""}],"src":"16281:419:16"},{"body":{"nodeType":"YulBlock","src":"16832:206:16","statements":[{"nodeType":"YulAssignment","src":"16842:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16854:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16865:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16850:3:16"},"nodeType":"YulFunctionCall","src":"16850:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16842:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16922:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16935:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16946:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16931:3:16"},"nodeType":"YulFunctionCall","src":"16931:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16878:43:16"},"nodeType":"YulFunctionCall","src":"16878:71:16"},"nodeType":"YulExpressionStatement","src":"16878:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17003:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17016:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17027:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17012:3:16"},"nodeType":"YulFunctionCall","src":"17012:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16959:43:16"},"nodeType":"YulFunctionCall","src":"16959:72:16"},"nodeType":"YulExpressionStatement","src":"16959:72:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16796:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16808:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16816:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16827:4:16","type":""}],"src":"16706:332:16"},{"body":{"nodeType":"YulBlock","src":"17150:129:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17172:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17180:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17168:3:16"},"nodeType":"YulFunctionCall","src":"17168:14:16"},{"hexValue":"436172644f776e6572736869703a207472616e73666572206f6620746f6b656e","kind":"string","nodeType":"YulLiteral","src":"17184:34:16","type":"","value":"CardOwnership: transfer of token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17161:6:16"},"nodeType":"YulFunctionCall","src":"17161:58:16"},"nodeType":"YulExpressionStatement","src":"17161:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17240:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17248:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17236:3:16"},"nodeType":"YulFunctionCall","src":"17236:15:16"},{"hexValue":"2074686174206973206e6f74206f776e","kind":"string","nodeType":"YulLiteral","src":"17253:18:16","type":"","value":" that is not own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17229:6:16"},"nodeType":"YulFunctionCall","src":"17229:43:16"},"nodeType":"YulExpressionStatement","src":"17229:43:16"}]},"name":"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17142:6:16","type":""}],"src":"17044:235:16"},{"body":{"nodeType":"YulBlock","src":"17431:220:16","statements":[{"nodeType":"YulAssignment","src":"17441:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17512:2:16","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17448:58:16"},"nodeType":"YulFunctionCall","src":"17448:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17441:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17613:3:16"}],"functionName":{"name":"store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846","nodeType":"YulIdentifier","src":"17524:88:16"},"nodeType":"YulFunctionCall","src":"17524:93:16"},"nodeType":"YulExpressionStatement","src":"17524:93:16"},{"nodeType":"YulAssignment","src":"17626:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17637:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17642:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17633:3:16"},"nodeType":"YulFunctionCall","src":"17633:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17626:3:16"}]}]},"name":"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17419:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17427:3:16","type":""}],"src":"17285:366:16"},{"body":{"nodeType":"YulBlock","src":"17828:248:16","statements":[{"nodeType":"YulAssignment","src":"17838:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17850:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17861:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17846:3:16"},"nodeType":"YulFunctionCall","src":"17846:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17838:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17885:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17896:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17881:3:16"},"nodeType":"YulFunctionCall","src":"17881:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17910:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17900:3:16"},"nodeType":"YulFunctionCall","src":"17900:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17874:6:16"},"nodeType":"YulFunctionCall","src":"17874:47:16"},"nodeType":"YulExpressionStatement","src":"17874:47:16"},{"nodeType":"YulAssignment","src":"17930:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18064:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17938:124:16"},"nodeType":"YulFunctionCall","src":"17938:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17930:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17808:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17823:4:16","type":""}],"src":"17657:419:16"},{"body":{"nodeType":"YulBlock","src":"18188:124:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18210:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18218:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18206:3:16"},"nodeType":"YulFunctionCall","src":"18206:14:16"},{"hexValue":"436172644f776e6572736869703a207472616e7366657220746f20746865207a","kind":"string","nodeType":"YulLiteral","src":"18222:34:16","type":"","value":"CardOwnership: transfer to the z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18199:6:16"},"nodeType":"YulFunctionCall","src":"18199:58:16"},"nodeType":"YulExpressionStatement","src":"18199:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18278:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18286:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18274:3:16"},"nodeType":"YulFunctionCall","src":"18274:15:16"},{"hexValue":"65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18291:13:16","type":"","value":"ero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:16"},"nodeType":"YulFunctionCall","src":"18267:38:16"},"nodeType":"YulExpressionStatement","src":"18267:38:16"}]},"name":"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18180:6:16","type":""}],"src":"18082:230:16"},{"body":{"nodeType":"YulBlock","src":"18464:220:16","statements":[{"nodeType":"YulAssignment","src":"18474:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18540:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18545:2:16","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18481:58:16"},"nodeType":"YulFunctionCall","src":"18481:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18474:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18646:3:16"}],"functionName":{"name":"store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0","nodeType":"YulIdentifier","src":"18557:88:16"},"nodeType":"YulFunctionCall","src":"18557:93:16"},"nodeType":"YulExpressionStatement","src":"18557:93:16"},{"nodeType":"YulAssignment","src":"18659:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18670:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18675:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18666:3:16"},"nodeType":"YulFunctionCall","src":"18666:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18659:3:16"}]}]},"name":"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18452:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18460:3:16","type":""}],"src":"18318:366:16"},{"body":{"nodeType":"YulBlock","src":"18861:248:16","statements":[{"nodeType":"YulAssignment","src":"18871:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18883:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18894:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18879:3:16"},"nodeType":"YulFunctionCall","src":"18879:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18871:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18918:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18929:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18914:3:16"},"nodeType":"YulFunctionCall","src":"18914:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18937:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18943:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18933:3:16"},"nodeType":"YulFunctionCall","src":"18933:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18907:6:16"},"nodeType":"YulFunctionCall","src":"18907:47:16"},"nodeType":"YulExpressionStatement","src":"18907:47:16"},{"nodeType":"YulAssignment","src":"18963:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19097:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18971:124:16"},"nodeType":"YulFunctionCall","src":"18971:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18963:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18841:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18856:4:16","type":""}],"src":"18690:419:16"},{"body":{"nodeType":"YulBlock","src":"19221:115:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19243:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19251:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19239:3:16"},"nodeType":"YulFunctionCall","src":"19239:14:16"},{"hexValue":"436172644f776e6572736869703a206361726420646f6573206e6f7420657869","kind":"string","nodeType":"YulLiteral","src":"19255:34:16","type":"","value":"CardOwnership: card does not exi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19232:6:16"},"nodeType":"YulFunctionCall","src":"19232:58:16"},"nodeType":"YulExpressionStatement","src":"19232:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19311:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19307:3:16"},"nodeType":"YulFunctionCall","src":"19307:15:16"},{"hexValue":"7374","kind":"string","nodeType":"YulLiteral","src":"19324:4:16","type":"","value":"st"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19300:6:16"},"nodeType":"YulFunctionCall","src":"19300:29:16"},"nodeType":"YulExpressionStatement","src":"19300:29:16"}]},"name":"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19213:6:16","type":""}],"src":"19115:221:16"},{"body":{"nodeType":"YulBlock","src":"19488:220:16","statements":[{"nodeType":"YulAssignment","src":"19498:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19564:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19569:2:16","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19505:58:16"},"nodeType":"YulFunctionCall","src":"19505:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19498:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19670:3:16"}],"functionName":{"name":"store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a","nodeType":"YulIdentifier","src":"19581:88:16"},"nodeType":"YulFunctionCall","src":"19581:93:16"},"nodeType":"YulExpressionStatement","src":"19581:93:16"},{"nodeType":"YulAssignment","src":"19683:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19694:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19699:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19690:3:16"},"nodeType":"YulFunctionCall","src":"19690:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19683:3:16"}]}]},"name":"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19476:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19484:3:16","type":""}],"src":"19342:366:16"},{"body":{"nodeType":"YulBlock","src":"19885:248:16","statements":[{"nodeType":"YulAssignment","src":"19895:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19907:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19918:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19903:3:16"},"nodeType":"YulFunctionCall","src":"19903:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19895:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19942:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19953:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19938:3:16"},"nodeType":"YulFunctionCall","src":"19938:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19961:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19967:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19957:3:16"},"nodeType":"YulFunctionCall","src":"19957:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19931:6:16"},"nodeType":"YulFunctionCall","src":"19931:47:16"},"nodeType":"YulExpressionStatement","src":"19931:47:16"},{"nodeType":"YulAssignment","src":"19987:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20121:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19995:124:16"},"nodeType":"YulFunctionCall","src":"19995:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19987:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19865:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19880:4:16","type":""}],"src":"19714:419:16"},{"body":{"nodeType":"YulBlock","src":"20197:51:16","statements":[{"nodeType":"YulAssignment","src":"20207:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20236:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"20218:17:16"},"nodeType":"YulFunctionCall","src":"20218:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20207:7:16"}]}]},"name":"cleanup_t_contract$_Card_$2987","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20179:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20189:7:16","type":""}],"src":"20139:109:16"},{"body":{"nodeType":"YulBlock","src":"20310:92:16","statements":[{"body":{"nodeType":"YulBlock","src":"20380:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20389:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20392:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20382:6:16"},"nodeType":"YulFunctionCall","src":"20382:12:16"},"nodeType":"YulExpressionStatement","src":"20382:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20333:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20371:5:16"}],"functionName":{"name":"cleanup_t_contract$_Card_$2987","nodeType":"YulIdentifier","src":"20340:30:16"},"nodeType":"YulFunctionCall","src":"20340:37:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20330:2:16"},"nodeType":"YulFunctionCall","src":"20330:48:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20323:6:16"},"nodeType":"YulFunctionCall","src":"20323:56:16"},"nodeType":"YulIf","src":"20320:76:16"}]},"name":"validator_revert_t_contract$_Card_$2987","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20303:5:16","type":""}],"src":"20254:148:16"},{"body":{"nodeType":"YulBlock","src":"20484:93:16","statements":[{"nodeType":"YulAssignment","src":"20494:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20509:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20503:5:16"},"nodeType":"YulFunctionCall","src":"20503:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20494:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20565:5:16"}],"functionName":{"name":"validator_revert_t_contract$_Card_$2987","nodeType":"YulIdentifier","src":"20525:39:16"},"nodeType":"YulFunctionCall","src":"20525:46:16"},"nodeType":"YulExpressionStatement","src":"20525:46:16"}]},"name":"abi_decode_t_contract$_Card_$2987_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20462:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"20470:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20478:5:16","type":""}],"src":"20408:169:16"},{"body":{"nodeType":"YulBlock","src":"20673:287:16","statements":[{"body":{"nodeType":"YulBlock","src":"20719:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20721:77:16"},"nodeType":"YulFunctionCall","src":"20721:79:16"},"nodeType":"YulExpressionStatement","src":"20721:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20694:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20703:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20690:3:16"},"nodeType":"YulFunctionCall","src":"20690:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"20715:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20686:3:16"},"nodeType":"YulFunctionCall","src":"20686:32:16"},"nodeType":"YulIf","src":"20683:119:16"},{"nodeType":"YulBlock","src":"20812:141:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20827:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20841:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20831:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20856:87:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20915:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20926:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20911:3:16"},"nodeType":"YulFunctionCall","src":"20911:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20935:7:16"}],"functionName":{"name":"abi_decode_t_contract$_Card_$2987_fromMemory","nodeType":"YulIdentifier","src":"20866:44:16"},"nodeType":"YulFunctionCall","src":"20866:77:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20856:6:16"}]}]}]},"name":"abi_decode_tuple_t_contract$_Card_$2987_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20643:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20654:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20666:6:16","type":""}],"src":"20583:377:16"},{"body":{"nodeType":"YulBlock","src":"21029:80:16","statements":[{"nodeType":"YulAssignment","src":"21039:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21054:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21048:5:16"},"nodeType":"YulFunctionCall","src":"21048:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21039:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21097:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"21070:26:16"},"nodeType":"YulFunctionCall","src":"21070:33:16"},"nodeType":"YulExpressionStatement","src":"21070:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21007:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"21015:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21023:5:16","type":""}],"src":"20966:143:16"},{"body":{"nodeType":"YulBlock","src":"21192:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"21238:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21240:77:16"},"nodeType":"YulFunctionCall","src":"21240:79:16"},"nodeType":"YulExpressionStatement","src":"21240:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21213:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"21222:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21209:3:16"},"nodeType":"YulFunctionCall","src":"21209:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"21234:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21205:3:16"},"nodeType":"YulFunctionCall","src":"21205:32:16"},"nodeType":"YulIf","src":"21202:119:16"},{"nodeType":"YulBlock","src":"21331:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21346:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21360:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21350:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21375:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21421:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21432:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21417:3:16"},"nodeType":"YulFunctionCall","src":"21417:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21441:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"21385:31:16"},"nodeType":"YulFunctionCall","src":"21385:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21375:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21162:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21173:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21185:6:16","type":""}],"src":"21115:351:16"},{"body":{"nodeType":"YulBlock","src":"21515:190:16","statements":[{"nodeType":"YulAssignment","src":"21525:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21552:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21534:17:16"},"nodeType":"YulFunctionCall","src":"21534:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21525:5:16"}]},{"body":{"nodeType":"YulBlock","src":"21648:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21650:16:16"},"nodeType":"YulFunctionCall","src":"21650:18:16"},"nodeType":"YulExpressionStatement","src":"21650:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21573:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"21580:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21570:2:16"},"nodeType":"YulFunctionCall","src":"21570:77:16"},"nodeType":"YulIf","src":"21567:103:16"},{"nodeType":"YulAssignment","src":"21679:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21690:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"21697:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21686:3:16"},"nodeType":"YulFunctionCall","src":"21686:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21679:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21501:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21511:3:16","type":""}],"src":"21472:233:16"},{"body":{"nodeType":"YulBlock","src":"21837:215:16","statements":[{"nodeType":"YulAssignment","src":"21847:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21913:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21918:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21854:58:16"},"nodeType":"YulFunctionCall","src":"21854:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21847:3:16"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21972:5:16"},{"name":"pos","nodeType":"YulIdentifier","src":"21979:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21984:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21935:36:16"},"nodeType":"YulFunctionCall","src":"21935:56:16"},"nodeType":"YulExpressionStatement","src":"21935:56:16"},{"nodeType":"YulAssignment","src":"22000:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22011:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22038:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22016:21:16"},"nodeType":"YulFunctionCall","src":"22016:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22007:3:16"},"nodeType":"YulFunctionCall","src":"22007:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22000:3:16"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"21810:5:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"21817:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21825:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21833:3:16","type":""}],"src":"21735:317:16"},{"body":{"nodeType":"YulBlock","src":"22111:32:16","statements":[{"nodeType":"YulAssignment","src":"22121:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"22132:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22121:7:16"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22093:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22103:7:16","type":""}],"src":"22058:85:16"},{"body":{"nodeType":"YulBlock","src":"22217:90:16","statements":[{"nodeType":"YulAssignment","src":"22227:74:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22293:5:16"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"22267:25:16"},"nodeType":"YulFunctionCall","src":"22267:32:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22258:8:16"},"nodeType":"YulFunctionCall","src":"22258:42:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22240:17:16"},"nodeType":"YulFunctionCall","src":"22240:61:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22227:9:16"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22197:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22207:9:16","type":""}],"src":"22149:158:16"},{"body":{"nodeType":"YulBlock","src":"22386:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22403:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22447:5:16"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"22408:38:16"},"nodeType":"YulFunctionCall","src":"22408:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22396:6:16"},"nodeType":"YulFunctionCall","src":"22396:58:16"},"nodeType":"YulExpressionStatement","src":"22396:58:16"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22374:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22381:3:16","type":""}],"src":"22313:147:16"},{"body":{"nodeType":"YulBlock","src":"22630:295:16","statements":[{"nodeType":"YulAssignment","src":"22640:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22652:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22663:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22648:3:16"},"nodeType":"YulFunctionCall","src":"22648:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22640:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22687:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22698:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22683:3:16"},"nodeType":"YulFunctionCall","src":"22683:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22706:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22712:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22702:3:16"},"nodeType":"YulFunctionCall","src":"22702:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22676:6:16"},"nodeType":"YulFunctionCall","src":"22676:47:16"},"nodeType":"YulExpressionStatement","src":"22676:47:16"},{"nodeType":"YulAssignment","src":"22732:96:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22806:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"22814:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"22823:4:16"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22740:65:16"},"nodeType":"YulFunctionCall","src":"22740:88:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22732:4:16"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22890:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22903:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22914:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22899:3:16"},"nodeType":"YulFunctionCall","src":"22899:18:16"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22838:51:16"},"nodeType":"YulFunctionCall","src":"22838:80:16"},"nodeType":"YulExpressionStatement","src":"22838:80:16"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22586:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22598:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22606:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22614:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22625:4:16","type":""}],"src":"22466:459:16"},{"body":{"nodeType":"YulBlock","src":"22994:80:16","statements":[{"nodeType":"YulAssignment","src":"23004:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23019:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23013:5:16"},"nodeType":"YulFunctionCall","src":"23013:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23004:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23062:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"23035:26:16"},"nodeType":"YulFunctionCall","src":"23035:33:16"},"nodeType":"YulExpressionStatement","src":"23035:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22972:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"22980:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22988:5:16","type":""}],"src":"22931:143:16"},{"body":{"nodeType":"YulBlock","src":"23157:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"23203:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23205:77:16"},"nodeType":"YulFunctionCall","src":"23205:79:16"},"nodeType":"YulExpressionStatement","src":"23205:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23178:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23187:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23174:3:16"},"nodeType":"YulFunctionCall","src":"23174:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"23199:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23170:3:16"},"nodeType":"YulFunctionCall","src":"23170:32:16"},"nodeType":"YulIf","src":"23167:119:16"},{"nodeType":"YulBlock","src":"23296:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23311:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"23325:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23315:6:16","type":""}]},{"nodeType":"YulAssignment","src":"23340:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23386:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"23397:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23382:3:16"},"nodeType":"YulFunctionCall","src":"23382:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23406:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"23350:31:16"},"nodeType":"YulFunctionCall","src":"23350:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23340:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23127:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23138:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23150:6:16","type":""}],"src":"23080:351:16"},{"body":{"nodeType":"YulBlock","src":"23481:147:16","statements":[{"nodeType":"YulAssignment","src":"23491:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23514:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23496:17:16"},"nodeType":"YulFunctionCall","src":"23496:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23491:1:16"}]},{"nodeType":"YulAssignment","src":"23525:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23548:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23530:17:16"},"nodeType":"YulFunctionCall","src":"23530:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23525:1:16"}]},{"nodeType":"YulAssignment","src":"23559:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23570:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"23573:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23566:3:16"},"nodeType":"YulFunctionCall","src":"23566:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23559:3:16"}]},{"body":{"nodeType":"YulBlock","src":"23599:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23601:16:16"},"nodeType":"YulFunctionCall","src":"23601:18:16"},"nodeType":"YulExpressionStatement","src":"23601:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23591:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"23594:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23588:2:16"},"nodeType":"YulFunctionCall","src":"23588:10:16"},"nodeType":"YulIf","src":"23585:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23468:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"23471:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23477:3:16","type":""}],"src":"23437:191:16"},{"body":{"nodeType":"YulBlock","src":"23740:50:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23762:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23770:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23758:3:16"},"nodeType":"YulFunctionCall","src":"23758:14:16"},{"hexValue":"57697a617264","kind":"string","nodeType":"YulLiteral","src":"23774:8:16","type":"","value":"Wizard"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23751:6:16"},"nodeType":"YulFunctionCall","src":"23751:32:16"},"nodeType":"YulExpressionStatement","src":"23751:32:16"}]},"name":"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23732:6:16","type":""}],"src":"23634:156:16"},{"body":{"nodeType":"YulBlock","src":"23942:219:16","statements":[{"nodeType":"YulAssignment","src":"23952:73:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24018:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24023:1:16","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23959:58:16"},"nodeType":"YulFunctionCall","src":"23959:66:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23952:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24123:3:16"}],"functionName":{"name":"store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5","nodeType":"YulIdentifier","src":"24034:88:16"},"nodeType":"YulFunctionCall","src":"24034:93:16"},"nodeType":"YulExpressionStatement","src":"24034:93:16"},{"nodeType":"YulAssignment","src":"24136:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24147:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24152:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24143:3:16"},"nodeType":"YulFunctionCall","src":"24143:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24136:3:16"}]}]},"name":"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23930:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23938:3:16","type":""}],"src":"23796:365:16"},{"body":{"nodeType":"YulBlock","src":"24374:338:16","statements":[{"nodeType":"YulAssignment","src":"24384:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24396:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24407:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24392:3:16"},"nodeType":"YulFunctionCall","src":"24392:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24384:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24431:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24442:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24427:3:16"},"nodeType":"YulFunctionCall","src":"24427:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24450:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24456:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24446:3:16"},"nodeType":"YulFunctionCall","src":"24446:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24420:6:16"},"nodeType":"YulFunctionCall","src":"24420:47:16"},"nodeType":"YulExpressionStatement","src":"24420:47:16"},{"nodeType":"YulAssignment","src":"24476:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24610:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24484:124:16"},"nodeType":"YulFunctionCall","src":"24484:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24476:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24677:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24690:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24701:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24686:3:16"},"nodeType":"YulFunctionCall","src":"24686:18:16"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24625:51:16"},"nodeType":"YulFunctionCall","src":"24625:80:16"},"nodeType":"YulExpressionStatement","src":"24625:80:16"}]},"name":"abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24346:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24358:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24369:4:16","type":""}],"src":"24167:545:16"},{"body":{"nodeType":"YulBlock","src":"24824:127:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24846:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24854:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24842:3:16"},"nodeType":"YulFunctionCall","src":"24842:14:16"},{"hexValue":"68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f787931","kind":"string","nodeType":"YulLiteral","src":"24858:34:16","type":"","value":"https://images.pokemontcg.io/xy1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24835:6:16"},"nodeType":"YulFunctionCall","src":"24835:58:16"},"nodeType":"YulExpressionStatement","src":"24835:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24918:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24926:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24914:3:16"},"nodeType":"YulFunctionCall","src":"24914:15:16"},{"hexValue":"2f312e706e67","kind":"string","nodeType":"YulLiteral","src":"24931:8:16","type":"","value":"/1.png"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24907:6:16"},"nodeType":"YulFunctionCall","src":"24907:33:16"},"nodeType":"YulExpressionStatement","src":"24907:33:16"}]},"name":"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24816:6:16","type":""}],"src":"24718:233:16"},{"body":{"nodeType":"YulBlock","src":"25107:236:16","statements":[{"nodeType":"YulAssignment","src":"25121:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25187:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"25192:2:16","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25128:58:16"},"nodeType":"YulFunctionCall","src":"25128:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25121:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25297:3:16"}],"functionName":{"name":"store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92","nodeType":"YulIdentifier","src":"25208:88:16"},"nodeType":"YulFunctionCall","src":"25208:93:16"},"nodeType":"YulExpressionStatement","src":"25208:93:16"},{"nodeType":"YulAssignment","src":"25314:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25325:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"25330:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25321:3:16"},"nodeType":"YulFunctionCall","src":"25321:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25314:3:16"}]}]},"name":"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25095:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25103:3:16","type":""}],"src":"24961:382:16"},{"body":{"nodeType":"YulBlock","src":"25552:350:16","statements":[{"nodeType":"YulAssignment","src":"25566:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25578:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25589:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25574:3:16"},"nodeType":"YulFunctionCall","src":"25574:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25566:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25650:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25663:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25674:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25659:3:16"},"nodeType":"YulFunctionCall","src":"25659:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25606:43:16"},"nodeType":"YulFunctionCall","src":"25606:71:16"},"nodeType":"YulExpressionStatement","src":"25606:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25702:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25713:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25698:3:16"},"nodeType":"YulFunctionCall","src":"25698:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25722:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"25728:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25718:3:16"},"nodeType":"YulFunctionCall","src":"25718:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25691:6:16"},"nodeType":"YulFunctionCall","src":"25691:48:16"},"nodeType":"YulExpressionStatement","src":"25691:48:16"},{"nodeType":"YulAssignment","src":"25752:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25886:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25760:124:16"},"nodeType":"YulFunctionCall","src":"25760:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25752:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25524:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25536:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25547:4:16","type":""}],"src":"25353:549:16"},{"body":{"nodeType":"YulBlock","src":"26026:42:16","statements":[{"nodeType":"YulAssignment","src":"26040:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"26055:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26040:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25998:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"26003:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26014:11:16","type":""}],"src":"25912:156:16"},{"body":{"nodeType":"YulBlock","src":"26188:300:16","statements":[{"nodeType":"YulVariableDeclaration","src":"26202:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26249:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26216:32:16"},"nodeType":"YulFunctionCall","src":"26216:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26206:6:16","type":""}]},{"nodeType":"YulAssignment","src":"26268:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26352:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26357:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26275:76:16"},"nodeType":"YulFunctionCall","src":"26275:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26268:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26416:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26423:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26412:3:16"},"nodeType":"YulFunctionCall","src":"26412:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26430:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26435:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26377:34:16"},"nodeType":"YulFunctionCall","src":"26377:65:16"},"nodeType":"YulExpressionStatement","src":"26377:65:16"},{"nodeType":"YulAssignment","src":"26455:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26466:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26471:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26462:3:16"},"nodeType":"YulFunctionCall","src":"26462:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26455:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26169:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26176:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26184:3:16","type":""}],"src":"26078:410:16"},{"body":{"nodeType":"YulBlock","src":"26682:267:16","statements":[{"nodeType":"YulAssignment","src":"26697:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26786:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26795:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26704:81:16"},"nodeType":"YulFunctionCall","src":"26704:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26697:3:16"}]},{"nodeType":"YulAssignment","src":"26813:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26902:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26911:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26820:81:16"},"nodeType":"YulFunctionCall","src":"26820:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26813:3:16"}]},{"nodeType":"YulAssignment","src":"26929:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"26936:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26929:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26653:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26659:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26667:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26678:3:16","type":""}],"src":"26498:451:16"},{"body":{"nodeType":"YulBlock","src":"27017:48:16","statements":[{"nodeType":"YulAssignment","src":"27032:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27048:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27042:5:16"},"nodeType":"YulFunctionCall","src":"27042:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27032:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27000:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27010:6:16","type":""}],"src":"26959:106:16"},{"body":{"nodeType":"YulBlock","src":"27170:85:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27191:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"27196:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27184:6:16"},"nodeType":"YulFunctionCall","src":"27184:19:16"},"nodeType":"YulExpressionStatement","src":"27184:19:16"},{"nodeType":"YulAssignment","src":"27216:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27235:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"27240:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27231:3:16"},"nodeType":"YulFunctionCall","src":"27231:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27216:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27142:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"27147:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27158:11:16","type":""}],"src":"27075:180:16"},{"body":{"nodeType":"YulBlock","src":"27355:303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"27369:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27415:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27383:31:16"},"nodeType":"YulFunctionCall","src":"27383:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27373:6:16","type":""}]},{"nodeType":"YulAssignment","src":"27434:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27499:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"27504:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27441:57:16"},"nodeType":"YulFunctionCall","src":"27441:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27434:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27563:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"27570:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27559:3:16"},"nodeType":"YulFunctionCall","src":"27559:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"27577:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"27582:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27524:34:16"},"nodeType":"YulFunctionCall","src":"27524:65:16"},"nodeType":"YulExpressionStatement","src":"27524:65:16"},{"nodeType":"YulAssignment","src":"27602:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27613:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27640:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27618:21:16"},"nodeType":"YulFunctionCall","src":"27618:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27609:3:16"},"nodeType":"YulFunctionCall","src":"27609:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27602:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27336:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27343:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27351:3:16","type":""}],"src":"27265:393:16"},{"body":{"nodeType":"YulBlock","src":"27868:468:16","statements":[{"nodeType":"YulAssignment","src":"27882:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27894:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27905:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27890:3:16"},"nodeType":"YulFunctionCall","src":"27890:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27882:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27967:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27980:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27991:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27976:3:16"},"nodeType":"YulFunctionCall","src":"27976:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27923:43:16"},"nodeType":"YulFunctionCall","src":"27923:71:16"},"nodeType":"YulExpressionStatement","src":"27923:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28052:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28065:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28076:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28061:3:16"},"nodeType":"YulFunctionCall","src":"28061:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28008:43:16"},"nodeType":"YulFunctionCall","src":"28008:72:16"},"nodeType":"YulExpressionStatement","src":"28008:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28138:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28151:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28162:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28147:3:16"},"nodeType":"YulFunctionCall","src":"28147:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28094:43:16"},"nodeType":"YulFunctionCall","src":"28094:72:16"},"nodeType":"YulExpressionStatement","src":"28094:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28191:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28202:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28187:3:16"},"nodeType":"YulFunctionCall","src":"28187:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28211:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"28217:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28207:3:16"},"nodeType":"YulFunctionCall","src":"28207:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28180:6:16"},"nodeType":"YulFunctionCall","src":"28180:48:16"},"nodeType":"YulExpressionStatement","src":"28180:48:16"},{"nodeType":"YulAssignment","src":"28241:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28311:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"28320:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28249:61:16"},"nodeType":"YulFunctionCall","src":"28249:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28241:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27816:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27828:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27836:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27844:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27852:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27863:4:16","type":""}],"src":"27668:668:16"},{"body":{"nodeType":"YulBlock","src":"28408:91:16","statements":[{"nodeType":"YulAssignment","src":"28422:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28437:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28431:5:16"},"nodeType":"YulFunctionCall","src":"28431:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28422:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28483:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"28457:25:16"},"nodeType":"YulFunctionCall","src":"28457:32:16"},"nodeType":"YulExpressionStatement","src":"28457:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28386:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"28394:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28402:5:16","type":""}],"src":"28346:153:16"},{"body":{"nodeType":"YulBlock","src":"28585:297:16","statements":[{"body":{"nodeType":"YulBlock","src":"28635:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28637:77:16"},"nodeType":"YulFunctionCall","src":"28637:79:16"},"nodeType":"YulExpressionStatement","src":"28637:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28610:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"28619:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28606:3:16"},"nodeType":"YulFunctionCall","src":"28606:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"28631:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28602:3:16"},"nodeType":"YulFunctionCall","src":"28602:32:16"},"nodeType":"YulIf","src":"28599:119:16"},{"nodeType":"YulBlock","src":"28732:139:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28751:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"28765:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28755:6:16","type":""}]},{"nodeType":"YulAssignment","src":"28784:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28829:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28840:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28825:3:16"},"nodeType":"YulFunctionCall","src":"28825:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28849:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"28794:30:16"},"nodeType":"YulFunctionCall","src":"28794:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28784:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28555:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28566:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28578:6:16","type":""}],"src":"28509:373:16"},{"body":{"nodeType":"YulBlock","src":"28920:168:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28941:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28944:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28934:6:16"},"nodeType":"YulFunctionCall","src":"28934:88:16"},"nodeType":"YulExpressionStatement","src":"28934:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29042:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29045:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29035:6:16"},"nodeType":"YulFunctionCall","src":"29035:15:16"},"nodeType":"YulExpressionStatement","src":"29035:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29070:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29073:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29063:6:16"},"nodeType":"YulFunctionCall","src":"29063:15:16"},"nodeType":"YulExpressionStatement","src":"29063:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28892:196:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_int256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GameCollection_$3593_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GameCollection_$3593_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_GameCollection_$3593__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GameCollection_$3593_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: collection does n\")\n\n        mstore(add(memPtr, 32), \"ot exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a08b21fb83c122d2a0dfbb357daf022a4b48788cc6e036dd7e4dd7839f987d9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: transfer of token\")\n\n        mstore(add(memPtr, 32), \" that is not own\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d85977e03a9227ea05523ee7d725ff475f0987dbe88824b995a6d8f1a196846_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: transfer to the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06ee07ee0c899f1f6a5de728e4c755ba8a35ffef20547d59c680369a8dbf90e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a(memPtr) {\n\n        mstore(add(memPtr, 0), \"CardOwnership: card does not exi\")\n\n        mstore(add(memPtr, 32), \"st\")\n\n    }\n\n    function abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dfd4ab412533f1e9a76595f6057d91f421da27542482b2fb3d620cb905e49d6a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_contract$_Card_$2987(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Card_$2987(value) {\n        if iszero(eq(value, cleanup_t_contract$_Card_$2987(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Card_$2987_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Card_$2987(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Card_$2987_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Card_$2987_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wizard\")\n\n    }\n\n    function abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_757e6d9d3125f5eeded46c70842b9da6b025feca97f4e2f325e9bb90662815a5_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92(memPtr) {\n\n        mstore(add(memPtr, 0), \"https://images.pokemontcg.io/xy1\")\n\n            mstore(add(memPtr, 32), \"/1.png\")\n\n        }\n\n        function abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n            store_literal_in_memory_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92(pos)\n            end := add(pos, 64)\n        }\n\n        function abi_encode_tuple_t_uint256_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n            mstore(add(headStart, 32), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_e968df0449b490a83221789d011e8c8962362f3c04b18a3f4cc2264cdacade92_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n            updated_pos := pos\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, length)\n        }\n\n        function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n            end := pos\n        }\n\n        function array_length_t_bytes_memory_ptr(value) -> length {\n\n            length := mload(value)\n\n        }\n\n        function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n            mstore(pos, length)\n            updated_pos := add(pos, 0x20)\n        }\n\n        function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n            let length := array_length_t_bytes_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, round_up_to_mul_of_32(length))\n        }\n\n        function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n            tail := add(headStart, 128)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n            mstore(add(headStart, 96), sub(tail, headStart))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n        }\n\n        function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_bytes4(value)\n        }\n\n        function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function panic_error_0x12() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n\n    }\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b50600436106200016c5760003560e01c8063715018a611620000d5578063bf8741031162000087578063bf8741031462000407578063c87b56dd146200043d578063d57f966b1462000473578063e985e9c51462000495578063f2fde38b14620004cb578063f7374d1114620004eb576200016c565b8063715018a614620003415780638da5cb5b146200034d57806395d89b41146200036f578063a22cb4651462000391578063b88d4fde14620003b1578063bc4f6def14620003d1576200016c565b8063156e29f6116200012f578063156e29f6146200025557806323b872dd146200027557806342842e0e14620002955780636352211e14620002b557806364f3767114620002eb57806370a08231146200030b576200016c565b806301ffc9a7146200017157806306fdde0314620001a7578063081812fc14620001c9578063095ea7b314620001ff5780630abc4a78146200021f575b600080fd5b6200018f600480360381019062000189919062001f52565b6200050b565b6040516200019e919062001fa1565b60405180910390f35b620001b1620005f1565b604051620001c0919062002058565b60405180910390f35b620001e76004803603810190620001e19190620020b7565b6200068b565b604051620001f691906200212e565b60405180910390f35b6200021d60048036038101906200021791906200217c565b620006ab565b005b6200023d6004803603810190620002379190620020b7565b620006c5565b6040516200024c9190620021de565b60405180910390f35b6200027360048036038101906200026d9190620021fb565b620007da565b005b6200029360048036038101906200028d919062002257565b620008ca565b005b620002b36004803603810190620002ad919062002257565b62000bac565b005b620002d36004803603810190620002cd9190620020b7565b62000bce565b604051620002e291906200212e565b60405180910390f35b62000309600480360381019062000303919062002352565b62000cf9565b005b620003296004803603810190620003239190620023bc565b62000daf565b604051620003389190620023ff565b60405180910390f35b6200034b62000ea5565b005b6200035762000ebd565b6040516200036691906200212e565b60405180910390f35b6200037962000ee6565b60405162000388919062002058565b60405180910390f35b620003af6004803603810190620003a991906200244d565b62000f80565b005b620003cf6004803603810190620003c99190620025e0565b62000f9a565b005b620003ef6004803603810190620003e99190620020b7565b62000fbb565b604051620003fe9190620026dc565b60405180910390f35b6200042560048036038101906200041f9190620020b7565b62000fee565b6040516200043491906200212e565b60405180910390f35b6200045b6004803603810190620004559190620020b7565b620011ff565b6040516200046a919062002058565b60405180910390f35b6200047d62001272565b6040516200048c9190620023ff565b60405180910390f35b620004b36004803603810190620004ad9190620026f9565b62001278565b604051620004c2919062001fa1565b60405180910390f35b620004e96004803603810190620004e39190620023bc565b6200130c565b005b620005096004803603810190620005039190620021fb565b62001399565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480620005d757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80620005ea5750620005e98262001489565b5b9050919050565b60606001805462000602906200276f565b80601f016020809104026020016040519081016040528092919081815260200182805462000630906200276f565b8015620006815780601f10620006555761010080835404028352916020019162000681565b820191906000526020600020905b8154815290600101906020018083116200066357829003601f168201915b5050505050905090565b60006200069882620014f3565b50620006a48262001580565b9050919050565b620006c18282620006bb620015bd565b620015c5565b5050565b600080600090505b600854811215620007b0576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9aa75ef846040518263ffffffff1660e01b8152600401620007469190620023ff565b602060405180830381865afa15801562000764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078a9190620027bb565b156200079a5780915050620007d5565b8080620007a7906200281c565b915050620006cd565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b600854811062000821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200081890620028df565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b81526004016200089192919062002901565b600060405180830381600087803b158015620008ac57600080fd5b505af1158015620008c1573d6000803e3d6000fd5b50505050505050565b620008d58162000bce565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462000945576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200093c90620029a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620009b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009ae9062002a3c565b60405180910390fd5b6000620009c482620006c5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810362000a2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a229062002ad4565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312836040518263ffffffff1660e01b815260040162000a999190620023ff565b602060405180830381865afa15801562000ab7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000add919062002b3b565b73ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000b1791906200212e565b600060405180830381600087803b15801562000b3257600080fd5b505af115801562000b47573d6000803e3d6000fd5b50505050818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b62000bc98383836040518060200160405280600081525062000f9a565b505050565b600080600090505b60085481101562000cee5760006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040162000c519190620023ff565b602060405180830381865afa15801562000c6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c95919062002b84565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000cd757809250505062000cf4565b50808062000ce59062002bb6565b91505062000bd6565b50600090505b919050565b60008383600060405162000d0d9062001ed3565b62000d1b9392919062002c79565b604051809103906000f08015801562000d38573d6000803e3d6000fd5b5090508060076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600081548092919062000da49062002bb6565b919050555050505050565b6000806000905060005b60085481101562000e9b576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040162000e3291906200212e565b602060405180830381865afa15801562000e50573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e76919062002cc6565b8262000e83919062002cf8565b9150808062000e929062002bb6565b91505062000db9565b5080915050919050565b62000eaf620015d9565b62000ebb600062001669565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805462000ef7906200276f565b80601f016020809104026020016040519081016040528092919081815260200182805462000f25906200276f565b801562000f765780601f1062000f4a5761010080835404028352916020019162000f76565b820191906000526020600020905b81548152906001019060200180831162000f5857829003601f168201915b5050505050905090565b62000f9662000f8e620015bd565b83836200172d565b5050565b62000fa7848484620008ca565b62000fb584848484620018a1565b50505050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000604051620010019062001ed3565b6200100d919062002d83565b604051809103906000f0801580156200102a573d6000803e3d6000fd5b5090508060076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060086000815480929190620010969062002bb6565b91905055506007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa93d702846040518263ffffffff1660e01b815260040162001109919062002e2b565b600060405180830381600087803b1580156200112457600080fd5b505af115801562001139573d6000803e3d6000fd5b5050505060006007600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639188d312856040518263ffffffff1660e01b8152600401620011ad9190620023ff565b602060405180830381865afa158015620011cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011f1919062002b3b565b905061029a92505050919050565b60606200120c82620014f3565b5060006200121962001a69565b905060008151116200123b57604051806020016040528060008152506200126a565b80620012478462001a80565b6040516020016200125a92919062002e9f565b6040516020818303038152906040525b915050919050565b60085481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001316620015d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200138b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200138291906200212e565b60405180910390fd5b620013968162001669565b50565b6008548110620013e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620013d790620028df565b60405180910390fd5b6007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f92906ff84846040518363ffffffff1660e01b81526004016200145092919062002901565b600060405180830381600087803b1580156200146b57600080fd5b505af115801562001480573d6000803e3d6000fd5b50505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080620015018362001b59565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200157757826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016200156e9190620023ff565b60405180910390fd5b80915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b620015d4838383600162001b96565b505050565b620015e3620015bd565b73ffffffffffffffffffffffffffffffffffffffff166200160362000ebd565b73ffffffffffffffffffffffffffffffffffffffff1614620016675762001629620015bd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016200165e91906200212e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620017a157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016200179891906200212e565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405162001894919062001fa1565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111562001a63578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02620018e8620015bd565b8685856040518563ffffffff1660e01b81526004016200190c949392919062002f24565b6020604051808303816000875af19250505080156200194b57506040513d601f19601f8201168201806040525081019062001948919062002f8f565b60015b620019d5573d80600081146200197e576040519150601f19603f3d011682016040523d82523d6000602084013e62001983565b606091505b506000815103620019cd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401620019c491906200212e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462001a6157836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040162001a5891906200212e565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600162001a918462001d67565b01905060008167ffffffffffffffff81111562001ab35762001ab262002499565b5b6040519080825280601f01601f19166020018201604052801562001ae65781602001600182028036833780820191505090505b509050600082602001820190505b60011562001b4e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858162001b415762001b4062002fc1565b5b0494506000850362001af4575b819350505050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808062001bd05750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1562001d0f57600062001be384620014f3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801562001c4f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801562001c65575062001c63818462001278565b155b1562001caa57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040162001ca191906200212e565b60405180910390fd5b811562001d0d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831062001dc9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838162001dbf5762001dbe62002fc1565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062001e0a576d04ee2d6d415b85acef8100000000838162001e005762001dff62002fc1565b5b0492506020810190505b662386f26fc10000831062001e3d57662386f26fc10000838162001e335762001e3262002fc1565b5b0492506010810190505b6305f5e100831062001e6a576305f5e100838162001e605762001e5f62002fc1565b5b0492506008810190505b612710831062001e9357612710838162001e895762001e8862002fc1565b5b0492506004810190505b6064831062001eba576064838162001eb05762001eaf62002fc1565b5b0492506002810190505b600a831062001eca576001810190505b80915050919050565b6126828062002ff183390190565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62001f2c8162001ef5565b811462001f3857600080fd5b50565b60008135905062001f4c8162001f21565b92915050565b60006020828403121562001f6b5762001f6a62001eeb565b5b600062001f7b8482850162001f3b565b91505092915050565b60008115159050919050565b62001f9b8162001f84565b82525050565b600060208201905062001fb8600083018462001f90565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001ffa57808201518184015260208101905062001fdd565b60008484015250505050565b6000601f19601f8301169050919050565b6000620020248262001fbe565b62002030818562001fc9565b93506200204281856020860162001fda565b6200204d8162002006565b840191505092915050565b6000602082019050818103600083015262002074818462002017565b905092915050565b6000819050919050565b62002091816200207c565b81146200209d57600080fd5b50565b600081359050620020b18162002086565b92915050565b600060208284031215620020d057620020cf62001eeb565b5b6000620020e084828501620020a0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200211682620020e9565b9050919050565b620021288162002109565b82525050565b60006020820190506200214560008301846200211d565b92915050565b620021568162002109565b81146200216257600080fd5b50565b60008135905062002176816200214b565b92915050565b6000806040838503121562002196576200219562001eeb565b5b6000620021a68582860162002165565b9250506020620021b985828601620020a0565b9150509250929050565b6000819050919050565b620021d881620021c3565b82525050565b6000602082019050620021f56000830184620021cd565b92915050565b60008060006060848603121562002217576200221662001eeb565b5b6000620022278682870162002165565b93505060206200223a86828701620020a0565b92505060406200224d86828701620020a0565b9150509250925092565b60008060006060848603121562002273576200227262001eeb565b5b6000620022838682870162002165565b9350506020620022968682870162002165565b9250506040620022a986828701620020a0565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f840112620022db57620022da620022b3565b5b8235905067ffffffffffffffff811115620022fb57620022fa620022b8565b5b6020830191508360018202830111156200231a5762002319620022bd565b5b9250929050565b6200232c81620021c3565b81146200233857600080fd5b50565b6000813590506200234c8162002321565b92915050565b6000806000604084860312156200236e576200236d62001eeb565b5b600084013567ffffffffffffffff8111156200238f576200238e62001ef0565b5b6200239d86828701620022c2565b93509350506020620023b2868287016200233b565b9150509250925092565b600060208284031215620023d557620023d462001eeb565b5b6000620023e58482850162002165565b91505092915050565b620023f9816200207c565b82525050565b6000602082019050620024166000830184620023ee565b92915050565b620024278162001f84565b81146200243357600080fd5b50565b60008135905062002447816200241c565b92915050565b6000806040838503121562002467576200246662001eeb565b5b6000620024778582860162002165565b92505060206200248a8582860162002436565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620024d38262002006565b810181811067ffffffffffffffff82111715620024f557620024f462002499565b5b80604052505050565b60006200250a62001ee1565b9050620025188282620024c8565b919050565b600067ffffffffffffffff8211156200253b576200253a62002499565b5b620025468262002006565b9050602081019050919050565b82818337600083830152505050565b60006200257962002573846200251d565b620024fe565b90508281526020810184848401111562002598576200259762002494565b5b620025a584828562002553565b509392505050565b600082601f830112620025c557620025c4620022b3565b5b8135620025d784826020860162002562565b91505092915050565b60008060008060808587031215620025fd57620025fc62001eeb565b5b60006200260d8782880162002165565b9450506020620026208782880162002165565b93505060406200263387828801620020a0565b925050606085013567ffffffffffffffff81111562002657576200265662001ef0565b5b6200266587828801620025ad565b91505092959194509250565b6000819050919050565b60006200269c620026966200269084620020e9565b62002671565b620020e9565b9050919050565b6000620026b0826200267b565b9050919050565b6000620026c482620026a3565b9050919050565b620026d681620026b7565b82525050565b6000602082019050620026f36000830184620026cb565b92915050565b6000806040838503121562002713576200271262001eeb565b5b6000620027238582860162002165565b9250506020620027368582860162002165565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200278857607f821691505b6020821081036200279e576200279d62002740565b5b50919050565b600081519050620027b5816200241c565b92915050565b600060208284031215620027d457620027d362001eeb565b5b6000620027e484828501620027a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200282982620021c3565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200285e576200285d620027ed565b5b600182019050919050565b7f436172644f776e6572736869703a20636f6c6c656374696f6e20646f6573206e60008201527f6f74206578697374000000000000000000000000000000000000000000000000602082015250565b6000620028c760288362001fc9565b9150620028d48262002869565b604082019050919050565b60006020820190508181036000830152620028fa81620028b8565b9050919050565b60006040820190506200291860008301856200211d565b620029276020830184620023ee565b9392505050565b7f436172644f776e6572736869703a207472616e73666572206f6620746f6b656e60008201527f2074686174206973206e6f74206f776e00000000000000000000000000000000602082015250565b60006200298c60308362001fc9565b915062002999826200292e565b604082019050919050565b60006020820190508181036000830152620029bf816200297d565b9050919050565b7f436172644f776e6572736869703a207472616e7366657220746f20746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b600062002a24602b8362001fc9565b915062002a3182620029c6565b604082019050919050565b6000602082019050818103600083015262002a578162002a15565b9050919050565b7f436172644f776e6572736869703a206361726420646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b600062002abc60228362001fc9565b915062002ac98262002a5e565b604082019050919050565b6000602082019050818103600083015262002aef8162002aad565b9050919050565b600062002b038262002109565b9050919050565b62002b158162002af6565b811462002b2157600080fd5b50565b60008151905062002b358162002b0a565b92915050565b60006020828403121562002b545762002b5362001eeb565b5b600062002b648482850162002b24565b91505092915050565b60008151905062002b7e816200214b565b92915050565b60006020828403121562002b9d5762002b9c62001eeb565b5b600062002bad8482850162002b6d565b91505092915050565b600062002bc3826200207c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362002bf85762002bf7620027ed565b5b600182019050919050565b600062002c11838562001fc9565b935062002c2083858462002553565b62002c2b8362002006565b840190509392505050565b6000819050919050565b600062002c6162002c5b62002c558462002c36565b62002671565b6200207c565b9050919050565b62002c738162002c40565b82525050565b6000604082019050818103600083015262002c9681858762002c03565b905062002ca7602083018462002c68565b949350505050565b60008151905062002cc08162002086565b92915050565b60006020828403121562002cdf5762002cde62001eeb565b5b600062002cef8482850162002caf565b91505092915050565b600062002d05826200207c565b915062002d12836200207c565b925082820190508082111562002d2d5762002d2c620027ed565b5b92915050565b7f57697a6172640000000000000000000000000000000000000000000000000000600082015250565b600062002d6b60068362001fc9565b915062002d788262002d33565b602082019050919050565b6000604082019050818103600083015262002d9e8162002d5c565b905062002daf602083018462002c68565b92915050565b7f68747470733a2f2f696d616765732e706f6b656d6f6e7463672e696f2f78793160008201527f2f312e706e670000000000000000000000000000000000000000000000000000602082015250565b600062002e1360268362001fc9565b915062002e208262002db5565b604082019050919050565b600060408201905062002e426000830184620023ee565b818103602083015262002e558162002e04565b905092915050565b600081905092915050565b600062002e758262001fbe565b62002e81818562002e5d565b935062002e9381856020860162001fda565b80840191505092915050565b600062002ead828562002e68565b915062002ebb828462002e68565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600062002ef08262002ec7565b62002efc818562002ed2565b935062002f0e81856020860162001fda565b62002f198162002006565b840191505092915050565b600060808201905062002f3b60008301876200211d565b62002f4a60208301866200211d565b62002f596040830185620023ee565b818103606083015262002f6d818462002ee3565b905095945050505050565b60008151905062002f898162001f21565b92915050565b60006020828403121562002fa85762002fa762001eeb565b5b600062002fb88482850162002f78565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfe60806040523480156200001157600080fd5b506040516200268238038062002682833981810160405281019062000037919062000226565b8160009081620000489190620004cd565b50806001819055505050620005b4565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000c18262000076565b810181811067ffffffffffffffff82111715620000e357620000e262000087565b5b80604052505050565b6000620000f862000058565b9050620001068282620000b6565b919050565b600067ffffffffffffffff82111562000129576200012862000087565b5b620001348262000076565b9050602081019050919050565b60005b838110156200016157808201518184015260208101905062000144565b60008484015250505050565b6000620001846200017e846200010b565b620000ec565b905082815260208101848484011115620001a357620001a262000071565b5b620001b084828562000141565b509392505050565b600082601f830112620001d057620001cf6200006c565b5b8151620001e28482602086016200016d565b91505092915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000806040838503121562000240576200023f62000062565b5b600083015167ffffffffffffffff81111562000261576200026062000067565b5b6200026f85828601620001b8565b925050602062000282858286016200020f565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002df57607f821691505b602082108103620002f557620002f462000297565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000320565b6200036b868362000320565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003ae620003a8620003a284620001eb565b62000383565b620001eb565b9050919050565b6000819050919050565b620003ca836200038d565b620003e2620003d982620003b5565b8484546200032d565b825550505050565b600090565b620003f9620003ea565b62000406818484620003bf565b505050565b5b818110156200042e5762000422600082620003ef565b6001810190506200040c565b5050565b601f8211156200047d576200044781620002fb565b620004528462000310565b8101602085101562000462578190505b6200047a620004718562000310565b8301826200040b565b50505b505050565b600082821c905092915050565b6000620004a26000198460080262000482565b1980831691505092915050565b6000620004bd83836200048f565b9150826002028217905092915050565b620004d8826200028c565b67ffffffffffffffff811115620004f457620004f362000087565b5b620005008254620002c6565b6200050d82828562000432565b600060209050601f83116001811462000545576000841562000530578287015190505b6200053c8582620004af565b865550620005ac565b601f1984166200055586620002fb565b60005b828110156200057f5784890151825560018201915060208501945060208101905062000558565b868310156200059f57848901516200059b601f8916826200048f565b8355505b6001600288020188555050505b505050505050565b6120be80620005c46000396000f3fe60806040523480156200001157600080fd5b5060043610620000e25760003560e01c806370a0823111620000995780639188d312116200006f5780639188d3121462000251578063a9aa75ef1462000287578063aa93d70214620002bd578063f92906ff14620002dd57620000e2565b806370a0823114620001c35780637d62013014620001f95780638dc10768146200021b57620000e2565b806306fdde0314620000e757806317d7de7c14620001095780631b6cde10146200012b57806340c10f19146200014d5780636352211e146200016d5780636a62784214620001a3575b600080fd5b620000f1620002fd565b60405162000100919062000dc6565b60405180910390f35b6200011362000393565b60405162000122919062000dc6565b60405180910390f35b620001356200042d565b60405162000144919062000e05565b60405180910390f35b6200016b600480360381019062000165919062000ecc565b62000433565b005b6200018b600480360381019062000185919062000f13565b6200068e565b6040516200019a919062000f56565b60405180910390f35b620001c16004803603810190620001bb919062000f73565b62000818565b005b620001e16004803603810190620001db919062000f73565b620009c1565b604051620001f0919062000e05565b60405180910390f35b6200020362000adf565b60405162000212919062000e05565b60405180910390f35b62000239600480360381019062000233919062000f13565b62000ae9565b60405162000248919062001010565b60405180910390f35b6200026f600480360381019062000269919062000f13565b62000b1c565b6040516200027e919062001010565b60405180910390f35b620002a560048036038101906200029f919062000f13565b62000b59565b604051620002b491906200104a565b60405180910390f35b620002db6004803603810190620002d59190620011b8565b62000c44565b005b620002fb6004803603810190620002f5919062000ecc565b62000cec565b005b600080546200030c906200124d565b80601f01602080910402602001604051908101604052809291908181526020018280546200033a906200124d565b80156200038b5780601f106200035f576101008083540402835291602001916200038b565b820191906000526020600020905b8154815290600101906020018083116200036d57829003601f168201915b505050505081565b606060008054620003a4906200124d565b80601f0160208091040260200160405190810160405280929190818152602001828054620003d2906200124d565b8015620004235780601f10620003f75761010080835404028352916020019162000423565b820191906000526020600020905b8154815290600101906020018083116200040557829003601f168201915b5050505050905090565b60015481565b60005b6001548110156200068957600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fe919062001299565b73ffffffffffffffffffffffffffffffffffffffff16148015620005c55750816002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200059d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005c39190620012e2565b145b1562000673576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040162000639919062000f56565b600060405180830381600087803b1580156200065457600080fd5b505af115801562000669573d6000803e3d6000fd5b5050505062000689565b8080620006809062001343565b91505062000436565b505050565b600080600090505b6001548110156200081157826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007479190620012e2565b03620007fb576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f2919062001299565b91505062000813565b8080620008089062001343565b91505062000696565b505b919050565b60005b600154811015620009bd57600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e3919062001299565b73ffffffffffffffffffffffffffffffffffffffff1603620009a7576002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b81526004016200096d919062000f56565b600060405180830381600087803b1580156200098857600080fd5b505af11580156200099d573d6000803e3d6000fd5b50505050620009bd565b8080620009b49062001343565b9150506200081b565b5050565b6000806000905060005b60015481101562000ad5578373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a92919062001299565b73ffffffffffffffffffffffffffffffffffffffff160362000abf57818062000abb9062001343565b9250505b808062000acc9062001343565b915050620009cb565b5080915050919050565b6000600154905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600090505b60015481101562000c3957826002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000bec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c129190620012e2565b0362000c2357600191505062000c3f565b808062000c309062001343565b91505062000b61565b50600090505b919050565b818160405162000c549062000d1e565b62000c6192919062001390565b604051809103906000f08015801562000c7e573d6000803e3d6000fd5b50600260006001600081548092919062000c989062001343565b91905055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60005b8181101562000d195762000d038362000818565b808062000d109062001343565b91505062000cef565b505050565b610cc480620013c583390190565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000d6857808201518184015260208101905062000d4b565b60008484015250505050565b6000601f19601f8301169050919050565b600062000d928262000d2c565b62000d9e818562000d37565b935062000db081856020860162000d48565b62000dbb8162000d74565b840191505092915050565b6000602082019050818103600083015262000de2818462000d85565b905092915050565b6000819050919050565b62000dff8162000dea565b82525050565b600060208201905062000e1c600083018462000df4565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e638262000e36565b9050919050565b62000e758162000e56565b811462000e8157600080fd5b50565b60008135905062000e958162000e6a565b92915050565b62000ea68162000dea565b811462000eb257600080fd5b50565b60008135905062000ec68162000e9b565b92915050565b6000806040838503121562000ee65762000ee562000e2c565b5b600062000ef68582860162000e84565b925050602062000f098582860162000eb5565b9150509250929050565b60006020828403121562000f2c5762000f2b62000e2c565b5b600062000f3c8482850162000eb5565b91505092915050565b62000f508162000e56565b82525050565b600060208201905062000f6d600083018462000f45565b92915050565b60006020828403121562000f8c5762000f8b62000e2c565b5b600062000f9c8482850162000e84565b91505092915050565b6000819050919050565b600062000fd062000fca62000fc48462000e36565b62000fa5565b62000e36565b9050919050565b600062000fe48262000faf565b9050919050565b600062000ff88262000fd7565b9050919050565b6200100a8162000feb565b82525050565b600060208201905062001027600083018462000fff565b92915050565b60008115159050919050565b62001044816200102d565b82525050565b600060208201905062001061600083018462001039565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620010ab8262000d74565b810181811067ffffffffffffffff82111715620010cd57620010cc62001071565b5b80604052505050565b6000620010e262000e22565b9050620010f08282620010a0565b919050565b600067ffffffffffffffff82111562001113576200111262001071565b5b6200111e8262000d74565b9050602081019050919050565b82818337600083830152505050565b6000620011516200114b84620010f5565b620010d6565b90508281526020810184848401111562001170576200116f6200106c565b5b6200117d8482856200112b565b509392505050565b600082601f8301126200119d576200119c62001067565b5b8135620011af8482602086016200113a565b91505092915050565b60008060408385031215620011d257620011d162000e2c565b5b6000620011e28582860162000eb5565b925050602083013567ffffffffffffffff81111562001206576200120562000e31565b5b620012148582860162001185565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200126657607f821691505b6020821081036200127c576200127b6200121e565b5b50919050565b600081519050620012938162000e6a565b92915050565b600060208284031215620012b257620012b162000e2c565b5b6000620012c28482850162001282565b91505092915050565b600081519050620012dc8162000e9b565b92915050565b600060208284031215620012fb57620012fa62000e2c565b5b60006200130b84828501620012cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620013508262000dea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001385576200138462001314565b5b600182019050919050565b6000604082019050620013a7600083018562000df4565b8181036020830152620013bb818462000d85565b9050939250505056fe60806040523480156200001157600080fd5b5060405162000cc438038062000cc4833981810160405281019062000037919062000372565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200041d565b60405180910390fd5b620000be81620000e060201b60201c565b50816001819055508060029081620000d791906200067b565b50505062000762565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001cd81620001b8565b8114620001d957600080fd5b50565b600081519050620001ed81620001c2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200024882620001fd565b810181811067ffffffffffffffff821117156200026a57620002696200020e565b5b80604052505050565b60006200027f620001a4565b90506200028d82826200023d565b919050565b600067ffffffffffffffff821115620002b057620002af6200020e565b5b620002bb82620001fd565b9050602081019050919050565b60005b83811015620002e8578082015181840152602081019050620002cb565b60008484015250505050565b60006200030b620003058462000292565b62000273565b9050828152602081018484840111156200032a5762000329620001f8565b5b62000337848285620002c8565b509392505050565b600082601f830112620003575762000356620001f3565b5b815162000369848260208601620002f4565b91505092915050565b600080604083850312156200038c576200038b620001ae565b5b60006200039c85828601620001dc565b925050602083015167ffffffffffffffff811115620003c057620003bf620001b3565b5b620003ce858286016200033f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040582620003d8565b9050919050565b6200041781620003f8565b82525050565b60006020820190506200043460008301846200040c565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048d57607f821691505b602082108103620004a357620004a262000445565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200050d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004ce565b620005198683620004ce565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200055c620005566200055084620001b8565b62000531565b620001b8565b9050919050565b6000819050919050565b62000578836200053b565b62000590620005878262000563565b848454620004db565b825550505050565b600090565b620005a762000598565b620005b48184846200056d565b505050565b5b81811015620005dc57620005d06000826200059d565b600181019050620005ba565b5050565b601f8211156200062b57620005f581620004a9565b6200060084620004be565b8101602085101562000610578190505b620006286200061f85620004be565b830182620005b9565b50505b505050565b600082821c905092915050565b6000620006506000198460080262000630565b1980831691505092915050565b60006200066b83836200063d565b9150826002028217905092915050565b62000686826200043a565b67ffffffffffffffff811115620006a257620006a16200020e565b5b620006ae825462000474565b620006bb828285620005e0565b600060209050601f831160018114620006f35760008415620006de578287015190505b620006ea85826200065d565b8655506200075a565b601f1984166200070386620004a9565b60005b828110156200072d5784890151825560018201915060208501945060208101905062000706565b868310156200074d578489015162000749601f8916826200063d565b8355505b6001600288020188555050505b505050505050565b61055280620007726000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635d1ca6311461005c578063715018a61461007a5780637802dff5146100845780638da5cb5b146100a2578063f2fde38b146100c0575b600080fd5b6100646100dc565b6040516100719190610335565b60405180910390f35b6100826100e6565b005b61008c6100fa565b60405161009991906103e0565b60405180910390f35b6100aa61018c565b6040516100b79190610443565b60405180910390f35b6100da60048036038101906100d5919061048f565b6101b5565b005b6000600154905090565b6100ee6101c9565b6100f86000610250565b565b606060028054610109906104eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906104eb565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bd6101c9565b6101c6816101b5565b50565b6101d1610314565b73ffffffffffffffffffffffffffffffffffffffff166101ef61018c565b73ffffffffffffffffffffffffffffffffffffffff161461024e57610212610314565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102459190610443565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61032f8161031c565b82525050565b600060208201905061034a6000830184610326565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561038a57808201518184015260208101905061036f565b60008484015250505050565b6000601f19601f8301169050919050565b60006103b282610350565b6103bc818561035b565b93506103cc81856020860161036c565b6103d581610396565b840191505092915050565b600060208201905081810360008301526103fa81846103a7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042d82610402565b9050919050565b61043d81610422565b82525050565b60006020820190506104586000830184610434565b92915050565b600080fd5b61046c81610422565b811461047757600080fd5b50565b60008135905061048981610463565b92915050565b6000602082840312156104a5576104a461045e565b5b60006104b38482850161047a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050357607f821691505b602082108103610516576105156104bc565b5b5091905056fea2646970667358221220c9055a330222893d1592b6ba51a425feae93b76700fc1cf31e7c593035fd370d64736f6c63430008140033a26469706673582212205d2eff3a6afb4b31ee29993c53541514f33fc14b38083eaf5bce9a1d25c8f49864736f6c63430008140033a2646970667358221220a68c20fa4f75e01907eeed3d4c3fe115c4b573f73205db4dfb6c9b72dde3210b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH3 0xD5 JUMPI DUP1 PUSH4 0xBF874103 GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xBF874103 EQ PUSH3 0x407 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH3 0x43D JUMPI DUP1 PUSH4 0xD57F966B EQ PUSH3 0x473 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x495 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x4CB JUMPI DUP1 PUSH4 0xF7374D11 EQ PUSH3 0x4EB JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH3 0x341 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x36F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x391 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH3 0x3B1 JUMPI DUP1 PUSH4 0xBC4F6DEF EQ PUSH3 0x3D1 JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH3 0x12F JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH3 0x255 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x275 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH3 0x295 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x2B5 JUMPI DUP1 PUSH4 0x64F37671 EQ PUSH3 0x2EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x30B JUMPI PUSH3 0x16C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x171 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x1A7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH3 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x1FF JUMPI DUP1 PUSH4 0xABC4A78 EQ PUSH3 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x1F52 JUMP JUMPDEST PUSH3 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19E SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1B1 PUSH3 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1C0 SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1E1 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F6 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x217 SWAP2 SWAP1 PUSH3 0x217C JUMP JUMPDEST PUSH3 0x6AB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x237 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x24C SWAP2 SWAP1 PUSH3 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x26D SWAP2 SWAP1 PUSH3 0x21FB JUMP JUMPDEST PUSH3 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x28D SWAP2 SWAP1 PUSH3 0x2257 JUMP JUMPDEST PUSH3 0x8CA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2AD SWAP2 SWAP1 PUSH3 0x2257 JUMP JUMPDEST PUSH3 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2CD SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2E2 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x303 SWAP2 SWAP1 PUSH3 0x2352 JUMP JUMPDEST PUSH3 0xCF9 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x323 SWAP2 SWAP1 PUSH3 0x23BC JUMP JUMPDEST PUSH3 0xDAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x338 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34B PUSH3 0xEA5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x357 PUSH3 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x366 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x379 PUSH3 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x388 SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3A9 SWAP2 SWAP1 PUSH3 0x244D JUMP JUMPDEST PUSH3 0xF80 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3C9 SWAP2 SWAP1 PUSH3 0x25E0 JUMP JUMPDEST PUSH3 0xF9A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3E9 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3FE SWAP2 SWAP1 PUSH3 0x26DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x41F SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x434 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x455 SWAP2 SWAP1 PUSH3 0x20B7 JUMP JUMPDEST PUSH3 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x46A SWAP2 SWAP1 PUSH3 0x2058 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x47D PUSH3 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x48C SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4AD SWAP2 SWAP1 PUSH3 0x26F9 JUMP JUMPDEST PUSH3 0x1278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x4E3 SWAP2 SWAP1 PUSH3 0x23BC JUMP JUMPDEST PUSH3 0x130C JUMP JUMPDEST STOP JUMPDEST PUSH3 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x503 SWAP2 SWAP1 PUSH3 0x21FB JUMP JUMPDEST PUSH3 0x1399 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH3 0x5D7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH3 0x5EA JUMPI POP PUSH3 0x5E9 DUP3 PUSH3 0x1489 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH3 0x602 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x630 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 ISZERO PUSH3 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x655 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x663 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x698 DUP3 PUSH3 0x14F3 JUMP JUMPDEST POP PUSH3 0x6A4 DUP3 PUSH3 0x1580 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 PUSH3 0x6BB PUSH3 0x15BD JUMP JUMPDEST PUSH3 0x15C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 SLT ISZERO PUSH3 0x7B0 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9AA75EF DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x746 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x764 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x78A SWAP2 SWAP1 PUSH3 0x27BB JUMP JUMPDEST ISZERO PUSH3 0x79A JUMPI DUP1 SWAP2 POP POP PUSH3 0x7D5 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x7A7 SWAP1 PUSH3 0x281C JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6CD JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x818 SWAP1 PUSH3 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x891 SWAP3 SWAP2 SWAP1 PUSH3 0x2901 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x8D5 DUP2 PUSH3 0xBCE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x93C SWAP1 PUSH3 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9AE SWAP1 PUSH3 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x9C4 DUP3 PUSH3 0x6C5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH3 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA22 SWAP1 PUSH3 0x2AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA99 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xAB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xADD SWAP2 SWAP1 PUSH3 0x2B3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB17 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH3 0xBC9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xCEE JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC51 SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC95 SWAP2 SWAP1 PUSH3 0x2B84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCD7 JUMPI DUP1 SWAP3 POP POP POP PUSH3 0xCF4 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xCE5 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xBD6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0xD0D SWAP1 PUSH3 0x1ED3 JUMP JUMPDEST PUSH3 0xD1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xD38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xDA4 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH3 0xE9B JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE32 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xE76 SWAP2 SWAP1 PUSH3 0x2CC6 JUMP JUMPDEST DUP3 PUSH3 0xE83 SWAP2 SWAP1 PUSH3 0x2CF8 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH3 0xE92 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xDB9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEAF PUSH3 0x15D9 JUMP JUMPDEST PUSH3 0xEBB PUSH1 0x0 PUSH3 0x1669 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0xEF7 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xF25 SWAP1 PUSH3 0x276F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xF76 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xF4A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xF76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xF58 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xF96 PUSH3 0xF8E PUSH3 0x15BD JUMP JUMPDEST DUP4 DUP4 PUSH3 0x172D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xFA7 DUP5 DUP5 DUP5 PUSH3 0x8CA JUMP JUMPDEST PUSH3 0xFB5 DUP5 DUP5 DUP5 DUP5 PUSH3 0x18A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x1001 SWAP1 PUSH3 0x1ED3 JUMP JUMPDEST PUSH3 0x100D SWAP2 SWAP1 PUSH3 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x102A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0x1096 SWAP1 PUSH3 0x2BB6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA93D702 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1109 SWAP2 SWAP1 PUSH3 0x2E2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1139 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9188D312 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11AD SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x11F1 SWAP2 SWAP1 PUSH3 0x2B3B JUMP JUMPDEST SWAP1 POP PUSH2 0x29A SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x120C DUP3 PUSH3 0x14F3 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1219 PUSH3 0x1A69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x123B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x126A JUMP JUMPDEST DUP1 PUSH3 0x1247 DUP5 PUSH3 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x125A SWAP3 SWAP2 SWAP1 PUSH3 0x2E9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1316 PUSH3 0x15D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x138B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1382 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1396 DUP2 PUSH3 0x1669 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH3 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13D7 SWAP1 PUSH3 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92906FF DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1450 SWAP3 SWAP2 SWAP1 PUSH3 0x2901 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1480 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1501 DUP4 PUSH3 0x1B59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1577 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x156E SWAP2 SWAP1 PUSH3 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x15D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x1B96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x15E3 PUSH3 0x15BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1603 PUSH3 0xEBD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1667 JUMPI PUSH3 0x1629 PUSH3 0x15BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x165E SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x17A1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1798 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH3 0x1894 SWAP2 SWAP1 PUSH3 0x1FA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x1A63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH3 0x18E8 PUSH3 0x15BD JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x190C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x194B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1948 SWAP2 SWAP1 PUSH3 0x2F8F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x19D5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x197E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x1983 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x19CD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x19C4 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x1A61 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A58 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x1A91 DUP5 PUSH3 0x1D67 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1AB3 JUMPI PUSH3 0x1AB2 PUSH3 0x2499 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x1AE6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1B4E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1B41 JUMPI PUSH3 0x1B40 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1AF4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x1BD0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x1D0F JUMPI PUSH1 0x0 PUSH3 0x1BE3 DUP5 PUSH3 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x1C4F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1C65 JUMPI POP PUSH3 0x1C63 DUP2 DUP5 PUSH3 0x1278 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x1CAA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1CA1 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x1D0D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x1DC9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x1DBF JUMPI PUSH3 0x1DBE PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x1E0A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x1E00 JUMPI PUSH3 0x1DFF PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x1E3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x1E33 JUMPI PUSH3 0x1E32 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x1E6A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x1E60 JUMPI PUSH3 0x1E5F PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x1E93 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x1E89 JUMPI PUSH3 0x1E88 PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x1EBA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x1EB0 JUMPI PUSH3 0x1EAF PUSH3 0x2FC1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x1ECA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 DUP1 PUSH3 0x2FF1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F2C DUP2 PUSH3 0x1EF5 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1F4C DUP2 PUSH3 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F6B JUMPI PUSH3 0x1F6A PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1F7B DUP5 DUP3 DUP6 ADD PUSH3 0x1F3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F9B DUP2 PUSH3 0x1F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1FB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1F90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1FFA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1FDD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2024 DUP3 PUSH3 0x1FBE JUMP JUMPDEST PUSH3 0x2030 DUP2 DUP6 PUSH3 0x1FC9 JUMP JUMPDEST SWAP4 POP PUSH3 0x2042 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x204D DUP2 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2074 DUP2 DUP5 PUSH3 0x2017 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2091 DUP2 PUSH3 0x207C JUMP JUMPDEST DUP2 EQ PUSH3 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x20B1 DUP2 PUSH3 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x20D0 JUMPI PUSH3 0x20CF PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x20E0 DUP5 DUP3 DUP6 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2116 DUP3 PUSH3 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2128 DUP2 PUSH3 0x2109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2145 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x211D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2156 DUP2 PUSH3 0x2109 JUMP JUMPDEST DUP2 EQ PUSH3 0x2162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2176 DUP2 PUSH3 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2196 JUMPI PUSH3 0x2195 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21A6 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x21B9 DUP6 DUP3 DUP7 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21D8 DUP2 PUSH3 0x21C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x21F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2217 JUMPI PUSH3 0x2216 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2227 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x223A DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x224D DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2273 JUMPI PUSH3 0x2272 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2283 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2296 DUP7 DUP3 DUP8 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x22A9 DUP7 DUP3 DUP8 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x22DB JUMPI PUSH3 0x22DA PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x22FB JUMPI PUSH3 0x22FA PUSH3 0x22B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x231A JUMPI PUSH3 0x2319 PUSH3 0x22BD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x232C DUP2 PUSH3 0x21C3 JUMP JUMPDEST DUP2 EQ PUSH3 0x2338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x234C DUP2 PUSH3 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x236E JUMPI PUSH3 0x236D PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x238F JUMPI PUSH3 0x238E PUSH3 0x1EF0 JUMP JUMPDEST JUMPDEST PUSH3 0x239D DUP7 DUP3 DUP8 ADD PUSH3 0x22C2 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH3 0x23B2 DUP7 DUP3 DUP8 ADD PUSH3 0x233B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23D5 JUMPI PUSH3 0x23D4 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x23E5 DUP5 DUP3 DUP6 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x23F9 DUP2 PUSH3 0x207C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2416 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2427 DUP2 PUSH3 0x1F84 JUMP JUMPDEST DUP2 EQ PUSH3 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2447 DUP2 PUSH3 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2467 JUMPI PUSH3 0x2466 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2477 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x248A DUP6 DUP3 DUP7 ADD PUSH3 0x2436 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x24D3 DUP3 PUSH3 0x2006 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x24F5 JUMPI PUSH3 0x24F4 PUSH3 0x2499 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250A PUSH3 0x1EE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x2518 DUP3 DUP3 PUSH3 0x24C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x253B JUMPI PUSH3 0x253A PUSH3 0x2499 JUMP JUMPDEST JUMPDEST PUSH3 0x2546 DUP3 PUSH3 0x2006 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2579 PUSH3 0x2573 DUP5 PUSH3 0x251D JUMP JUMPDEST PUSH3 0x24FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2598 JUMPI PUSH3 0x2597 PUSH3 0x2494 JUMP JUMPDEST JUMPDEST PUSH3 0x25A5 DUP5 DUP3 DUP6 PUSH3 0x2553 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x25C5 JUMPI PUSH3 0x25C4 PUSH3 0x22B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x25D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2562 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x25FD JUMPI PUSH3 0x25FC PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x260D DUP8 DUP3 DUP9 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x2620 DUP8 DUP3 DUP9 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2633 DUP8 DUP3 DUP9 ADD PUSH3 0x20A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2657 JUMPI PUSH3 0x2656 PUSH3 0x1EF0 JUMP JUMPDEST JUMPDEST PUSH3 0x2665 DUP8 DUP3 DUP9 ADD PUSH3 0x25AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x269C PUSH3 0x2696 PUSH3 0x2690 DUP5 PUSH3 0x20E9 JUMP JUMPDEST PUSH3 0x2671 JUMP JUMPDEST PUSH3 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26B0 DUP3 PUSH3 0x267B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26C4 DUP3 PUSH3 0x26A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26D6 DUP2 PUSH3 0x26B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x26F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x26CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2713 JUMPI PUSH3 0x2712 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2723 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2736 DUP6 DUP3 DUP7 ADD PUSH3 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2788 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x279E JUMPI PUSH3 0x279D PUSH3 0x2740 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x27B5 DUP2 PUSH3 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27D4 JUMPI PUSH3 0x27D3 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x27E4 DUP5 DUP3 DUP6 ADD PUSH3 0x27A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2829 DUP3 PUSH3 0x21C3 JUMP JUMPDEST SWAP2 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x285E JUMPI PUSH3 0x285D PUSH3 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A20636F6C6C656374696F6E20646F6573206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206578697374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28C7 PUSH1 0x28 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x28D4 DUP3 PUSH3 0x2869 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x28FA DUP2 PUSH3 0x28B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2918 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2927 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E73666572206F6620746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2074686174206973206E6F74206F776E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x298C PUSH1 0x30 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2999 DUP3 PUSH3 0x292E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x29BF DUP2 PUSH3 0x297D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A207472616E7366657220746F20746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A24 PUSH1 0x2B DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2A31 DUP3 PUSH3 0x29C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2A57 DUP2 PUSH3 0x2A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172644F776E6572736869703A206361726420646F6573206E6F7420657869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2ABC PUSH1 0x22 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2AC9 DUP3 PUSH3 0x2A5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2AEF DUP2 PUSH3 0x2AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B03 DUP3 PUSH3 0x2109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B15 DUP2 PUSH3 0x2AF6 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B35 DUP2 PUSH3 0x2B0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B54 JUMPI PUSH3 0x2B53 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B64 DUP5 DUP3 DUP6 ADD PUSH3 0x2B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B7E DUP2 PUSH3 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B9D JUMPI PUSH3 0x2B9C PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2BAD DUP5 DUP3 DUP6 ADD PUSH3 0x2B6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BC3 DUP3 PUSH3 0x207C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x2BF8 JUMPI PUSH3 0x2BF7 PUSH3 0x27ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C11 DUP4 DUP6 PUSH3 0x1FC9 JUMP JUMPDEST SWAP4 POP PUSH3 0x2C20 DUP4 DUP6 DUP5 PUSH3 0x2553 JUMP JUMPDEST PUSH3 0x2C2B DUP4 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C61 PUSH3 0x2C5B PUSH3 0x2C55 DUP5 PUSH3 0x2C36 JUMP JUMPDEST PUSH3 0x2671 JUMP JUMPDEST PUSH3 0x207C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C73 DUP2 PUSH3 0x2C40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2C96 DUP2 DUP6 DUP8 PUSH3 0x2C03 JUMP JUMPDEST SWAP1 POP PUSH3 0x2CA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2C68 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CC0 DUP2 PUSH3 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CDF JUMPI PUSH3 0x2CDE PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CEF DUP5 DUP3 DUP6 ADD PUSH3 0x2CAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D05 DUP3 PUSH3 0x207C JUMP JUMPDEST SWAP2 POP PUSH3 0x2D12 DUP4 PUSH3 0x207C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x2D2D JUMPI PUSH3 0x2D2C PUSH3 0x27ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57697A6172640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D6B PUSH1 0x6 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2D78 DUP3 PUSH3 0x2D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2D9E DUP2 PUSH3 0x2D5C JUMP JUMPDEST SWAP1 POP PUSH3 0x2DAF PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x68747470733A2F2F696D616765732E706F6B656D6F6E7463672E696F2F787931 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2F312E706E670000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E13 PUSH1 0x26 DUP4 PUSH3 0x1FC9 JUMP JUMPDEST SWAP2 POP PUSH3 0x2E20 DUP3 PUSH3 0x2DB5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2E42 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x23EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2E55 DUP2 PUSH3 0x2E04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E75 DUP3 PUSH3 0x1FBE JUMP JUMPDEST PUSH3 0x2E81 DUP2 DUP6 PUSH3 0x2E5D JUMP JUMPDEST SWAP4 POP PUSH3 0x2E93 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2EAD DUP3 DUP6 PUSH3 0x2E68 JUMP JUMPDEST SWAP2 POP PUSH3 0x2EBB DUP3 DUP5 PUSH3 0x2E68 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2EF0 DUP3 PUSH3 0x2EC7 JUMP JUMPDEST PUSH3 0x2EFC DUP2 DUP6 PUSH3 0x2ED2 JUMP JUMPDEST SWAP4 POP PUSH3 0x2F0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x2F19 DUP2 PUSH3 0x2006 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2F3B PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2F4A PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x211D JUMP JUMPDEST PUSH3 0x2F59 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x23EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x2F6D DUP2 DUP5 PUSH3 0x2EE3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F89 DUP2 PUSH3 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2FA8 JUMPI PUSH3 0x2FA7 PUSH3 0x1EEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2FB8 DUP5 DUP3 DUP6 ADD PUSH3 0x2F78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2682 CODESIZE SUB DUP1 PUSH3 0x2682 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xC1 DUP3 PUSH3 0x76 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x87 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8 PUSH3 0x58 JUMP JUMPDEST SWAP1 POP PUSH3 0x106 DUP3 DUP3 PUSH3 0xB6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x76 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH3 0xEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x6C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1EB JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH3 0x23F PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x260 PUSH3 0x67 JUMP JUMPDEST JUMPDEST PUSH3 0x26F DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x282 DUP6 DUP3 DUP7 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x297 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x320 JUMP JUMPDEST PUSH3 0x36B DUP7 DUP4 PUSH3 0x320 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AE PUSH3 0x3A8 PUSH3 0x3A2 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x383 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP4 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x3E2 PUSH3 0x3D9 DUP3 PUSH3 0x3B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x406 DUP2 DUP5 DUP5 PUSH3 0x3BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42E JUMPI PUSH3 0x422 PUSH1 0x0 DUP3 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x40C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x447 DUP2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x452 DUP5 PUSH3 0x310 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x462 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47A PUSH3 0x471 DUP6 PUSH3 0x310 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x482 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BD DUP4 DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D8 DUP3 PUSH3 0x28C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP3 SLOAD PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x50D DUP3 DUP3 DUP6 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x545 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x530 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x53C DUP6 DUP3 PUSH3 0x4AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x555 DUP7 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x558 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x59B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20BE DUP1 PUSH3 0x5C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xE2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH3 0x99 JUMPI DUP1 PUSH4 0x9188D312 GT PUSH3 0x6F JUMPI DUP1 PUSH4 0x9188D312 EQ PUSH3 0x251 JUMPI DUP1 PUSH4 0xA9AA75EF EQ PUSH3 0x287 JUMPI DUP1 PUSH4 0xAA93D702 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0xF92906FF EQ PUSH3 0x2DD JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0x7D620130 EQ PUSH3 0x1F9 JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH3 0x21B JUMPI PUSH3 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0xE7 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x1B6CDE10 EQ PUSH3 0x12B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH3 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF1 PUSH3 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x100 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x113 PUSH3 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x135 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x144 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x818 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH3 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1F0 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x203 PUSH3 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x248 SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27E SWAP2 SWAP1 PUSH3 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xF13 JUMP JUMPDEST PUSH3 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2D5 SWAP2 SWAP1 PUSH3 0x11B8 JUMP JUMPDEST PUSH3 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0xECC JUMP JUMPDEST PUSH3 0xCEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x30C SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x33A SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x35F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH3 0x3A4 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x3D2 SWAP1 PUSH3 0x124D JUMP JUMPDEST DUP1 ISZERO PUSH3 0x423 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x423 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x5C5 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x59D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5C3 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH3 0x673 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x639 SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x669 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x689 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x680 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x811 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x747 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0x7FB JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F2 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x813 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x808 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x696 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x9BD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x8E3 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9A7 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96D SWAP2 SWAP1 PUSH3 0xF56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x9BD JUMP JUMPDEST DUP1 DUP1 PUSH3 0x9B4 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xAD5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA92 SWAP2 SWAP1 PUSH3 0x1299 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xABF JUMPI DUP2 DUP1 PUSH3 0xABB SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH3 0xACC SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9CB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xC39 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D1CA631 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC12 SWAP2 SWAP1 PUSH3 0x12E2 JUMP JUMPDEST SUB PUSH3 0xC23 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH3 0xC3F JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC30 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB61 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH3 0xC54 SWAP1 PUSH3 0xD1E JUMP JUMPDEST PUSH3 0xC61 SWAP3 SWAP2 SWAP1 PUSH3 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xC98 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD19 JUMPI PUSH3 0xD03 DUP4 PUSH3 0x818 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xD10 SWAP1 PUSH3 0x1343 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xCEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP1 PUSH3 0x13C5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD92 DUP3 PUSH3 0xD2C JUMP JUMPDEST PUSH3 0xD9E DUP2 DUP6 PUSH3 0xD37 JUMP JUMPDEST SWAP4 POP PUSH3 0xDB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD48 JUMP JUMPDEST PUSH3 0xDBB DUP2 PUSH3 0xD74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xDE2 DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDFF DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE63 DUP3 PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE75 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP2 EQ PUSH3 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE95 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEA6 DUP2 PUSH3 0xDEA JUMP JUMPDEST DUP2 EQ PUSH3 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xEC6 DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEE6 JUMPI PUSH3 0xEE5 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEF6 DUP6 DUP3 DUP7 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xF09 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF2C JUMPI PUSH3 0xF2B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3C DUP5 DUP3 DUP6 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xF50 DUP2 PUSH3 0xE56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF6D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xF45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8C JUMPI PUSH3 0xF8B PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF9C DUP5 DUP3 DUP6 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFD0 PUSH3 0xFCA PUSH3 0xFC4 DUP5 PUSH3 0xE36 JUMP JUMPDEST PUSH3 0xFA5 JUMP JUMPDEST PUSH3 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE4 DUP3 PUSH3 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF8 DUP3 PUSH3 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100A DUP2 PUSH3 0xFEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1027 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xFFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1044 DUP2 PUSH3 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10AB DUP3 PUSH3 0xD74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10CD JUMPI PUSH3 0x10CC PUSH3 0x1071 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E2 PUSH3 0xE22 JUMP JUMPDEST SWAP1 POP PUSH3 0x10F0 DUP3 DUP3 PUSH3 0x10A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1113 JUMPI PUSH3 0x1112 PUSH3 0x1071 JUMP JUMPDEST JUMPDEST PUSH3 0x111E DUP3 PUSH3 0xD74 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH3 0x114B DUP5 PUSH3 0x10F5 JUMP JUMPDEST PUSH3 0x10D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1170 JUMPI PUSH3 0x116F PUSH3 0x106C JUMP JUMPDEST JUMPDEST PUSH3 0x117D DUP5 DUP3 DUP6 PUSH3 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x119D JUMPI PUSH3 0x119C PUSH3 0x1067 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x11AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11E2 DUP6 DUP3 DUP7 ADD PUSH3 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x1205 PUSH3 0xE31 JUMP JUMPDEST JUMPDEST PUSH3 0x1214 DUP6 DUP3 DUP7 ADD PUSH3 0x1185 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1266 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x127C JUMPI PUSH3 0x127B PUSH3 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1293 DUP2 PUSH3 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B2 JUMPI PUSH3 0x12B1 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C2 DUP5 DUP3 DUP6 ADD PUSH3 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12DC DUP2 PUSH3 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12FB JUMPI PUSH3 0x12FA PUSH3 0xE2C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x130B DUP5 DUP3 DUP6 ADD PUSH3 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1350 DUP3 PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1385 JUMPI PUSH3 0x1384 PUSH3 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x13A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xDF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13BB DUP2 DUP5 PUSH3 0xD85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC4 CODESIZE SUB DUP1 PUSH3 0xCC4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD7 SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST POP POP POP PUSH3 0x762 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1ED DUP2 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x248 DUP3 PUSH3 0x1FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x20E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27F PUSH3 0x1A4 JUMP JUMPDEST SWAP1 POP PUSH3 0x28D DUP3 DUP3 PUSH3 0x23D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x1FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH3 0x305 DUP5 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x273 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x1F8 JUMP JUMPDEST JUMPDEST PUSH3 0x337 DUP5 DUP3 DUP6 PUSH3 0x2C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x1F3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x369 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x38C JUMPI PUSH3 0x38B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x39C DUP6 DUP3 DUP7 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C0 JUMPI PUSH3 0x3BF PUSH3 0x1B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3CE DUP6 DUP3 DUP7 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x405 DUP3 PUSH3 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x417 DUP2 PUSH3 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x434 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH3 0x4A2 PUSH3 0x445 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x50D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x519 DUP7 DUP4 PUSH3 0x4CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55C PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH3 0x531 JUMP JUMPDEST PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x578 DUP4 PUSH3 0x53B JUMP JUMPDEST PUSH3 0x590 PUSH3 0x587 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A7 PUSH3 0x598 JUMP JUMPDEST PUSH3 0x5B4 DUP2 DUP5 DUP5 PUSH3 0x56D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5D0 PUSH1 0x0 DUP3 PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x62B JUMPI PUSH3 0x5F5 DUP2 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x600 DUP5 PUSH3 0x4BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x610 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x628 PUSH3 0x61F DUP6 PUSH3 0x4BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x650 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x630 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP4 DUP4 PUSH3 0x63D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x686 DUP3 PUSH3 0x43A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A2 JUMPI PUSH3 0x6A1 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH3 0x6AE DUP3 SLOAD PUSH3 0x474 JUMP JUMPDEST PUSH3 0x6BB DUP3 DUP3 DUP6 PUSH3 0x5E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6EA DUP6 DUP3 PUSH3 0x65D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x75A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x703 DUP7 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x706 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x749 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x63D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP1 PUSH3 0x772 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x7802DFF5 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH2 0x250 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x109 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135 SWAP1 PUSH2 0x4EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x165 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x314 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF PUSH2 0x18C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH2 0x212 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x3BC DUP2 DUP6 PUSH2 0x35B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FA DUP2 DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SDIV GAS CALLER MUL 0x22 DUP10 RETURNDATASIZE ISZERO SWAP3 0xB6 0xBA MLOAD LOG4 0x25 INVALID 0xAE SWAP4 0xB7 PUSH8 0xFC1CF31E7C5930 CALLDATALOAD REVERT CALLDATACOPY 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0x2E SELFDESTRUCT GASPRICE PUSH11 0xFB4B31EE29993C53541514 RETURN EXTCODEHASH 0xC1 0x4B CODESIZE ADDMOD RETURNDATACOPY 0xAF JUMPDEST 0xCE SWAP11 SAR 0x25 0xC8 DELEGATECALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP13 KECCAK256 STATICCALL 0x4F PUSH22 0xE01907EEED3D4C3FE115C4B573F73205DB4DFB6C9B72 0xDD 0xE3 0x21 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"117:1129:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1725:277:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2926:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2065:536;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1417:302:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:219:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1134:235:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;236:54:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3761:423;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2677:255:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:27:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2636:256:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:2;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1725:277:13:-;1792:3;1812:5;1820:1;1812:9;;1807:170;1831:15;;1823:1;:24;1807:170;;;1872:15;:24;1893:1;1872:24;;;;;;;;;;;;;;;;;;;;;:43;;;1916:7;1872:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1868:99;;;1951:1;1944:8;;;;;1868:99;1849:3;;;;;:::i;:::-;;;;1807:170;;;;1993:2;1986:9;;1725:277;;;;:::o;2926:236::-;3033:15;;3014:16;:34;3006:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3104:15;:33;3120:16;3104:33;;;;;;;;;;;;;;;;;;;;;:38;;;3143:2;3147:7;3104:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:236;;;:::o;2065:536::-;2169:16;2177:7;2169;:16::i;:::-;2161:24;;:4;:24;;;2153:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:1;2256:16;;:2;:16;;;2248:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2330:20;2353:31;2376:7;2353:22;:31::i;:::-;2330:54;;2422:2;2402:16;:22;2394:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2474:15;:39;2495:16;2474:39;;;;;;;;;;;;;;;;;;;;;:47;;;2522:7;2474:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:74;;;2549:2;2474:78;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2586:7;2582:2;2567:27;;2576:4;2567:27;;;;;;;;;;;;2143:458;2065:536;;;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1417:302:13:-;1478:7;1502:9;1514:1;1502:13;;1497:189;1521:15;;1517:1;:19;1497:189;;;1557:13;1573:15;:18;1589:1;1573:18;;;;;;;;;;;;;;;;;;;;;:26;;;1600:7;1573:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1557:51;;1643:1;1626:19;;:5;:19;;;1622:53;;1670:5;1663:12;;;;;;1622:53;1543:143;1538:3;;;;;:::i;:::-;;;;1497:189;;;;1710:1;1695:17;;1417:302;;;;:::o;402:219:15:-;482:30;534:4;;540:1;515:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;482:60;;581:15;546;:32;562:15;;546:32;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;600:15;;:17;;;;;;;;;:::i;:::-;;;;;;478:143;402:219;;;:::o;1134:235:13:-;1198:4;1214:7;1224:1;1214:11;;1240:6;1235:109;1256:15;;1252:1;:19;1235:109;;;1298:15;:18;1314:1;1298:18;;;;;;;;;;;;;;;;;;;;;:28;;;1327:5;1298:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:41;;;;;:::i;:::-;;;1273:3;;;;;:::i;:::-;;;;1235:109;;;;1360:2;1353:9;;;1134:235;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;236:54:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;3761:423::-;3814:7;3833:30;3895:1;3866:31;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3833:64;;3936:15;3901;:32;3917:15;;3901:32;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;3955:15;;:17;;;;;;;;;:::i;:::-;;;;;;3976:15;:18;3992:1;3976:18;;;;;;;;;;;;;;;;;;;;;:26;;;4003:10;3976:80;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4066:6;4075:15;:18;4091:1;4075:18;;;;;;;;;;;;;;;;;;;;;:26;;;4102:10;4075:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4066:47;;4176:3;4161:19;;;;3761:423;;;:::o;2677:255:2:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;296:27:13:-;;;;:::o;3928:153:2:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2636:256:13:-;2753:15;;2734:16;:34;2726:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2824:15;:33;2840:16;2824:33;;;;;;;;;;;;;;;;;;;;;:47;;;2872:2;2876:8;2824:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:256;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:2:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:7:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:2:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;12214:916:10:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:76::-;4926:7;4955:5;4944:16;;4890:76;;;:::o;4972:115::-;5057:23;5074:5;5057:23;:::i;:::-;5052:3;5045:36;4972:115;;:::o;5093:218::-;5184:4;5222:2;5211:9;5207:18;5199:26;;5235:69;5301:1;5290:9;5286:17;5277:6;5235:69;:::i;:::-;5093:218;;;;:::o;5317:619::-;5394:6;5402;5410;5459:2;5447:9;5438:7;5434:23;5430:32;5427:119;;;5465:79;;:::i;:::-;5427:119;5585:1;5610:53;5655:7;5646:6;5635:9;5631:22;5610:53;:::i;:::-;5600:63;;5556:117;5712:2;5738:53;5783:7;5774:6;5763:9;5759:22;5738:53;:::i;:::-;5728:63;;5683:118;5840:2;5866:53;5911:7;5902:6;5891:9;5887:22;5866:53;:::i;:::-;5856:63;;5811:118;5317:619;;;;;:::o;5942:::-;6019:6;6027;6035;6084:2;6072:9;6063:7;6059:23;6055:32;6052:119;;;6090:79;;:::i;:::-;6052:119;6210:1;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6181:117;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;5942:619;;;;;:::o;6567:117::-;6676:1;6673;6666:12;6690:117;6799:1;6796;6789:12;6813:117;6922:1;6919;6912:12;6950:553;7008:8;7018:6;7068:3;7061:4;7053:6;7049:17;7045:27;7035:122;;7076:79;;:::i;:::-;7035:122;7189:6;7176:20;7166:30;;7219:18;7211:6;7208:30;7205:117;;;7241:79;;:::i;:::-;7205:117;7355:4;7347:6;7343:17;7331:29;;7409:3;7401:4;7393:6;7389:17;7379:8;7375:32;7372:41;7369:128;;;7416:79;;:::i;:::-;7369:128;6950:553;;;;;:::o;7509:120::-;7581:23;7598:5;7581:23;:::i;:::-;7574:5;7571:34;7561:62;;7619:1;7616;7609:12;7561:62;7509:120;:::o;7635:137::-;7680:5;7718:6;7705:20;7696:29;;7734:32;7760:5;7734:32;:::i;:::-;7635:137;;;;:::o;7778:672::-;7857:6;7865;7873;7922:2;7910:9;7901:7;7897:23;7893:32;7890:119;;;7928:79;;:::i;:::-;7890:119;8076:1;8065:9;8061:17;8048:31;8106:18;8098:6;8095:30;8092:117;;;8128:79;;:::i;:::-;8092:117;8241:65;8298:7;8289:6;8278:9;8274:22;8241:65;:::i;:::-;8223:83;;;;8019:297;8355:2;8381:52;8425:7;8416:6;8405:9;8401:22;8381:52;:::i;:::-;8371:62;;8326:117;7778:672;;;;;:::o;8456:329::-;8515:6;8564:2;8552:9;8543:7;8539:23;8535:32;8532:119;;;8570:79;;:::i;:::-;8532:119;8690:1;8715:53;8760:7;8751:6;8740:9;8736:22;8715:53;:::i;:::-;8705:63;;8661:117;8456:329;;;;:::o;8791:118::-;8878:24;8896:5;8878:24;:::i;:::-;8873:3;8866:37;8791:118;;:::o;8915:222::-;9008:4;9046:2;9035:9;9031:18;9023:26;;9059:71;9127:1;9116:9;9112:17;9103:6;9059:71;:::i;:::-;8915:222;;;;:::o;9143:116::-;9213:21;9228:5;9213:21;:::i;:::-;9206:5;9203:32;9193:60;;9249:1;9246;9239:12;9193:60;9143:116;:::o;9265:133::-;9308:5;9346:6;9333:20;9324:29;;9362:30;9386:5;9362:30;:::i;:::-;9265:133;;;;:::o;9404:468::-;9469:6;9477;9526:2;9514:9;9505:7;9501:23;9497:32;9494:119;;;9532:79;;:::i;:::-;9494:119;9652:1;9677:53;9722:7;9713:6;9702:9;9698:22;9677:53;:::i;:::-;9667:63;;9623:117;9779:2;9805:50;9847:7;9838:6;9827:9;9823:22;9805:50;:::i;:::-;9795:60;;9750:115;9404:468;;;;;:::o;9878:117::-;9987:1;9984;9977:12;10001:180;10049:77;10046:1;10039:88;10146:4;10143:1;10136:15;10170:4;10167:1;10160:15;10187:281;10270:27;10292:4;10270:27;:::i;:::-;10262:6;10258:40;10400:6;10388:10;10385:22;10364:18;10352:10;10349:34;10346:62;10343:88;;;10411:18;;:::i;:::-;10343:88;10451:10;10447:2;10440:22;10230:238;10187:281;;:::o;10474:129::-;10508:6;10535:20;;:::i;:::-;10525:30;;10564:33;10592:4;10584:6;10564:33;:::i;:::-;10474:129;;;:::o;10609:307::-;10670:4;10760:18;10752:6;10749:30;10746:56;;;10782:18;;:::i;:::-;10746:56;10820:29;10842:6;10820:29;:::i;:::-;10812:37;;10904:4;10898;10894:15;10886:23;;10609:307;;;:::o;10922:146::-;11019:6;11014:3;11009;10996:30;11060:1;11051:6;11046:3;11042:16;11035:27;10922:146;;;:::o;11074:423::-;11151:5;11176:65;11192:48;11233:6;11192:48;:::i;:::-;11176:65;:::i;:::-;11167:74;;11264:6;11257:5;11250:21;11302:4;11295:5;11291:16;11340:3;11331:6;11326:3;11322:16;11319:25;11316:112;;;11347:79;;:::i;:::-;11316:112;11437:54;11484:6;11479:3;11474;11437:54;:::i;:::-;11157:340;11074:423;;;;;:::o;11516:338::-;11571:5;11620:3;11613:4;11605:6;11601:17;11597:27;11587:122;;11628:79;;:::i;:::-;11587:122;11745:6;11732:20;11770:78;11844:3;11836:6;11829:4;11821:6;11817:17;11770:78;:::i;:::-;11761:87;;11577:277;11516:338;;;;:::o;11860:943::-;11955:6;11963;11971;11979;12028:3;12016:9;12007:7;12003:23;11999:33;11996:120;;;12035:79;;:::i;:::-;11996:120;12155:1;12180:53;12225:7;12216:6;12205:9;12201:22;12180:53;:::i;:::-;12170:63;;12126:117;12282:2;12308:53;12353:7;12344:6;12333:9;12329:22;12308:53;:::i;:::-;12298:63;;12253:118;12410:2;12436:53;12481:7;12472:6;12461:9;12457:22;12436:53;:::i;:::-;12426:63;;12381:118;12566:2;12555:9;12551:18;12538:32;12597:18;12589:6;12586:30;12583:117;;;12619:79;;:::i;:::-;12583:117;12724:62;12778:7;12769:6;12758:9;12754:22;12724:62;:::i;:::-;12714:72;;12509:287;11860:943;;;;;;;:::o;12809:60::-;12837:3;12858:5;12851:12;;12809:60;;;:::o;12875:142::-;12925:9;12958:53;12976:34;12985:24;13003:5;12985:24;:::i;:::-;12976:34;:::i;:::-;12958:53;:::i;:::-;12945:66;;12875:142;;;:::o;13023:126::-;13073:9;13106:37;13137:5;13106:37;:::i;:::-;13093:50;;13023:126;;;:::o;13155:149::-;13228:9;13261:37;13292:5;13261:37;:::i;:::-;13248:50;;13155:149;;;:::o;13310:177::-;13420:60;13474:5;13420:60;:::i;:::-;13415:3;13408:73;13310:177;;:::o;13493:268::-;13609:4;13647:2;13636:9;13632:18;13624:26;;13660:94;13751:1;13740:9;13736:17;13727:6;13660:94;:::i;:::-;13493:268;;;;:::o;13767:474::-;13835:6;13843;13892:2;13880:9;13871:7;13867:23;13863:32;13860:119;;;13898:79;;:::i;:::-;13860:119;14018:1;14043:53;14088:7;14079:6;14068:9;14064:22;14043:53;:::i;:::-;14033:63;;13989:117;14145:2;14171:53;14216:7;14207:6;14196:9;14192:22;14171:53;:::i;:::-;14161:63;;14116:118;13767:474;;;;;:::o;14247:180::-;14295:77;14292:1;14285:88;14392:4;14389:1;14382:15;14416:4;14413:1;14406:15;14433:320;14477:6;14514:1;14508:4;14504:12;14494:22;;14561:1;14555:4;14551:12;14582:18;14572:81;;14638:4;14630:6;14626:17;14616:27;;14572:81;14700:2;14692:6;14689:14;14669:18;14666:38;14663:84;;14719:18;;:::i;:::-;14663:84;14484:269;14433:320;;;:::o;14759:137::-;14813:5;14844:6;14838:13;14829:22;;14860:30;14884:5;14860:30;:::i;:::-;14759:137;;;;:::o;14902:345::-;14969:6;15018:2;15006:9;14997:7;14993:23;14989:32;14986:119;;;15024:79;;:::i;:::-;14986:119;15144:1;15169:61;15222:7;15213:6;15202:9;15198:22;15169:61;:::i;:::-;15159:71;;15115:125;14902:345;;;;:::o;15253:180::-;15301:77;15298:1;15291:88;15398:4;15395:1;15388:15;15422:4;15419:1;15412:15;15439:231;15477:3;15500:23;15517:5;15500:23;:::i;:::-;15491:32;;15545:66;15538:5;15535:77;15532:103;;15615:18;;:::i;:::-;15532:103;15662:1;15655:5;15651:13;15644:20;;15439:231;;;:::o;15676:227::-;15816:34;15812:1;15804:6;15800:14;15793:58;15885:10;15880:2;15872:6;15868:15;15861:35;15676:227;:::o;15909:366::-;16051:3;16072:67;16136:2;16131:3;16072:67;:::i;:::-;16065:74;;16148:93;16237:3;16148:93;:::i;:::-;16266:2;16261:3;16257:12;16250:19;;15909:366;;;:::o;16281:419::-;16447:4;16485:2;16474:9;16470:18;16462:26;;16534:9;16528:4;16524:20;16520:1;16509:9;16505:17;16498:47;16562:131;16688:4;16562:131;:::i;:::-;16554:139;;16281:419;;;:::o;16706:332::-;16827:4;16865:2;16854:9;16850:18;16842:26;;16878:71;16946:1;16935:9;16931:17;16922:6;16878:71;:::i;:::-;16959:72;17027:2;17016:9;17012:18;17003:6;16959:72;:::i;:::-;16706:332;;;;;:::o;17044:235::-;17184:34;17180:1;17172:6;17168:14;17161:58;17253:18;17248:2;17240:6;17236:15;17229:43;17044:235;:::o;17285:366::-;17427:3;17448:67;17512:2;17507:3;17448:67;:::i;:::-;17441:74;;17524:93;17613:3;17524:93;:::i;:::-;17642:2;17637:3;17633:12;17626:19;;17285:366;;;:::o;17657:419::-;17823:4;17861:2;17850:9;17846:18;17838:26;;17910:9;17904:4;17900:20;17896:1;17885:9;17881:17;17874:47;17938:131;18064:4;17938:131;:::i;:::-;17930:139;;17657:419;;;:::o;18082:230::-;18222:34;18218:1;18210:6;18206:14;18199:58;18291:13;18286:2;18278:6;18274:15;18267:38;18082:230;:::o;18318:366::-;18460:3;18481:67;18545:2;18540:3;18481:67;:::i;:::-;18474:74;;18557:93;18646:3;18557:93;:::i;:::-;18675:2;18670:3;18666:12;18659:19;;18318:366;;;:::o;18690:419::-;18856:4;18894:2;18883:9;18879:18;18871:26;;18943:9;18937:4;18933:20;18929:1;18918:9;18914:17;18907:47;18971:131;19097:4;18971:131;:::i;:::-;18963:139;;18690:419;;;:::o;19115:221::-;19255:34;19251:1;19243:6;19239:14;19232:58;19324:4;19319:2;19311:6;19307:15;19300:29;19115:221;:::o;19342:366::-;19484:3;19505:67;19569:2;19564:3;19505:67;:::i;:::-;19498:74;;19581:93;19670:3;19581:93;:::i;:::-;19699:2;19694:3;19690:12;19683:19;;19342:366;;;:::o;19714:419::-;19880:4;19918:2;19907:9;19903:18;19895:26;;19967:9;19961:4;19957:20;19953:1;19942:9;19938:17;19931:47;19995:131;20121:4;19995:131;:::i;:::-;19987:139;;19714:419;;;:::o;20139:109::-;20189:7;20218:24;20236:5;20218:24;:::i;:::-;20207:35;;20139:109;;;:::o;20254:148::-;20340:37;20371:5;20340:37;:::i;:::-;20333:5;20330:48;20320:76;;20392:1;20389;20382:12;20320:76;20254:148;:::o;20408:169::-;20478:5;20509:6;20503:13;20494:22;;20525:46;20565:5;20525:46;:::i;:::-;20408:169;;;;:::o;20583:377::-;20666:6;20715:2;20703:9;20694:7;20690:23;20686:32;20683:119;;;20721:79;;:::i;:::-;20683:119;20841:1;20866:77;20935:7;20926:6;20915:9;20911:22;20866:77;:::i;:::-;20856:87;;20812:141;20583:377;;;;:::o;20966:143::-;21023:5;21054:6;21048:13;21039:22;;21070:33;21097:5;21070:33;:::i;:::-;20966:143;;;;:::o;21115:351::-;21185:6;21234:2;21222:9;21213:7;21209:23;21205:32;21202:119;;;21240:79;;:::i;:::-;21202:119;21360:1;21385:64;21441:7;21432:6;21421:9;21417:22;21385:64;:::i;:::-;21375:74;;21331:128;21115:351;;;;:::o;21472:233::-;21511:3;21534:24;21552:5;21534:24;:::i;:::-;21525:33;;21580:66;21573:5;21570:77;21567:103;;21650:18;;:::i;:::-;21567:103;21697:1;21690:5;21686:13;21679:20;;21472:233;;;:::o;21735:317::-;21833:3;21854:71;21918:6;21913:3;21854:71;:::i;:::-;21847:78;;21935:56;21984:6;21979:3;21972:5;21935:56;:::i;:::-;22016:29;22038:6;22016:29;:::i;:::-;22011:3;22007:39;22000:46;;21735:317;;;;;:::o;22058:85::-;22103:7;22132:5;22121:16;;22058:85;;;:::o;22149:158::-;22207:9;22240:61;22258:42;22267:32;22293:5;22267:32;:::i;:::-;22258:42;:::i;:::-;22240:61;:::i;:::-;22227:74;;22149:158;;;:::o;22313:147::-;22408:45;22447:5;22408:45;:::i;:::-;22403:3;22396:58;22313:147;;:::o;22466:459::-;22625:4;22663:2;22652:9;22648:18;22640:26;;22712:9;22706:4;22702:20;22698:1;22687:9;22683:17;22676:47;22740:88;22823:4;22814:6;22806;22740:88;:::i;:::-;22732:96;;22838:80;22914:2;22903:9;22899:18;22890:6;22838:80;:::i;:::-;22466:459;;;;;;:::o;22931:143::-;22988:5;23019:6;23013:13;23004:22;;23035:33;23062:5;23035:33;:::i;:::-;22931:143;;;;:::o;23080:351::-;23150:6;23199:2;23187:9;23178:7;23174:23;23170:32;23167:119;;;23205:79;;:::i;:::-;23167:119;23325:1;23350:64;23406:7;23397:6;23386:9;23382:22;23350:64;:::i;:::-;23340:74;;23296:128;23080:351;;;;:::o;23437:191::-;23477:3;23496:20;23514:1;23496:20;:::i;:::-;23491:25;;23530:20;23548:1;23530:20;:::i;:::-;23525:25;;23573:1;23570;23566:9;23559:16;;23594:3;23591:1;23588:10;23585:36;;;23601:18;;:::i;:::-;23585:36;23437:191;;;;:::o;23634:156::-;23774:8;23770:1;23762:6;23758:14;23751:32;23634:156;:::o;23796:365::-;23938:3;23959:66;24023:1;24018:3;23959:66;:::i;:::-;23952:73;;24034:93;24123:3;24034:93;:::i;:::-;24152:2;24147:3;24143:12;24136:19;;23796:365;;;:::o;24167:545::-;24369:4;24407:2;24396:9;24392:18;24384:26;;24456:9;24450:4;24446:20;24442:1;24431:9;24427:17;24420:47;24484:131;24610:4;24484:131;:::i;:::-;24476:139;;24625:80;24701:2;24690:9;24686:18;24677:6;24625:80;:::i;:::-;24167:545;;;;:::o;24718:233::-;24858:34;24854:1;24846:6;24842:14;24835:58;24931:8;24926:2;24918:6;24914:15;24907:33;24718:233;:::o;24961:382::-;25103:3;25128:67;25192:2;25187:3;25128:67;:::i;:::-;25121:74;;25208:93;25297:3;25208:93;:::i;:::-;25330:2;25325:3;25321:12;25314:19;;24961:382;;;:::o;25353:549::-;25547:4;25589:2;25578:9;25574:18;25566:26;;25606:71;25674:1;25663:9;25659:17;25650:6;25606:71;:::i;:::-;25728:9;25722:4;25718:20;25713:2;25702:9;25698:18;25691:48;25760:131;25886:4;25760:131;:::i;:::-;25752:139;;25353:549;;;;:::o;25912:156::-;26014:11;26055:3;26040:18;;25912:156;;;;:::o;26078:410::-;26184:3;26216:39;26249:5;26216:39;:::i;:::-;26275:89;26357:6;26352:3;26275:89;:::i;:::-;26268:96;;26377:65;26435:6;26430:3;26423:4;26416:5;26412:16;26377:65;:::i;:::-;26471:6;26466:3;26462:16;26455:23;;26188:300;26078:410;;;;:::o;26498:451::-;26678:3;26704:95;26795:3;26786:6;26704:95;:::i;:::-;26697:102;;26820:95;26911:3;26902:6;26820:95;:::i;:::-;26813:102;;26936:3;26929:10;;26498:451;;;;;:::o;26959:106::-;27010:6;27048:5;27042:12;27032:22;;26959:106;;;:::o;27075:180::-;27158:11;27196:6;27191:3;27184:19;27240:4;27235:3;27231:14;27216:29;;27075:180;;;;:::o;27265:393::-;27351:3;27383:38;27415:5;27383:38;:::i;:::-;27441:70;27504:6;27499:3;27441:70;:::i;:::-;27434:77;;27524:65;27582:6;27577:3;27570:4;27563:5;27559:16;27524:65;:::i;:::-;27618:29;27640:6;27618:29;:::i;:::-;27613:3;27609:39;27602:46;;27355:303;27265:393;;;;:::o;27668:668::-;27863:4;27905:3;27894:9;27890:19;27882:27;;27923:71;27991:1;27980:9;27976:17;27967:6;27923:71;:::i;:::-;28008:72;28076:2;28065:9;28061:18;28052:6;28008:72;:::i;:::-;28094;28162:2;28151:9;28147:18;28138:6;28094:72;:::i;:::-;28217:9;28211:4;28207:20;28202:2;28191:9;28187:18;28180:48;28249:76;28320:4;28311:6;28249:76;:::i;:::-;28241:84;;27668:668;;;;;;;:::o;28346:153::-;28402:5;28437:6;28431:13;28422:22;;28457:32;28483:5;28457:32;:::i;:::-;28346:153;;;;:::o;28509:373::-;28578:6;28631:2;28619:9;28610:7;28606:23;28602:32;28599:119;;;28637:79;;:::i;:::-;28599:119;28765:1;28794:63;28849:7;28840:6;28829:9;28825:22;28794:63;:::i;:::-;28784:73;;28732:139;28509:373;;;;:::o;28892:196::-;28944:77;28941:1;28934:88;29045:4;29042:1;29035:15;29073:4;29070:1;29063:15"},"gasEstimates":{"creation":{"codeDepositCost":"4436800","executionCost":"infinite","totalCost":"infinite"},"external":{"addACard(uint256)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"infinite","cardCollections(uint256)":"infinite","collectionCount()":"2495","createGameCollection(string,int256)":"infinite","getApproved(uint256)":"infinite","getCollectionNbForCard(uint256)":"infinite","isApprovedForAll(address,address)":"infinite","mint(address,uint256,uint256)":"infinite","mintSomeCards(address,uint256,uint256)":"infinite","name()":"infinite","owner()":"2567","ownerOf(uint256)":"infinite","renounceOwnership()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite"},"internal":{"createGameCollection2()":"infinite"}},"methodIdentifiers":{"addACard(uint256)":"bf874103","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cardCollections(uint256)":"bc4f6def","collectionCount()":"d57f966b","createGameCollection(string,int256)":"64f37671","getApproved(uint256)":"081812fc","getCollectionNbForCard(uint256)":"0abc4a78","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256)":"156e29f6","mintSomeCards(address,uint256,uint256)":"f7374d11","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cardNumber\",\"type\":\"uint256\"}],\"name\":\"addACard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardCollections\",\"outputs\":[{\"internalType\":\"contract GameCollection\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"cardCount\",\"type\":\"int256\"}],\"name\":\"createGameCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCollectionNbForCard\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionNumber\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionNumber\",\"type\":\"uint256\"}],\"name\":\"mintSomeCards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Main.sol\":\"Main\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"src/Card.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Card is Ownable {\\n    // string public name;\\n    uint private id;\\n    string private imgLink;\\n\\n    constructor(uint _id, string memory _imgLink) Ownable(msg.sender) {\\n        id = _id;\\n        imgLink = _imgLink;\\n    }\\n\\n    function getId() public view returns (uint) {\\n        return id;\\n    }\\n\\n    function getImgLink() public view returns (string memory) {\\n        return imgLink;\\n    }\\n\\n    function transferOwnership(address to) public override onlyOwner {\\n        transferOwnership(to); // TODO : v\\u00e9rifier si \\u00e7a fonctionne\\n    }\\n}\",\"keccak256\":\"0xb150de000f85ce66be92e5b34cec2986a9546d33857f1d593bd202370fc47b6f\"},\"src/CardOwnership.sol\":{\"content\":\"pragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./Card.sol\\\";\\nimport \\\"./GameCollection.sol\\\";\\n\\ncontract CardOwnership is Ownable, ERC721 {\\n    mapping(uint => GameCollection) public cardCollections;\\n    uint public collectionCount;\\n    // mapping (uint => address) cardsApprovals;\\n\\n    constructor() Ownable(msg.sender) ERC721(\\\"Card\\\", \\\"CARD\\\") {\\n    }\\n\\n    // // R\\u00e9cup\\u00e8re une carte\\n    // function mint(address to, uint tokenId, uint collectionNumber) public {\\n    //     require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n    //     uint numberOfCards = cardCollections[collectionNumber].getCardCount();\\n\\n    //     for (uint i = 0; i < numberOfCards; i++) {\\n    //         if (cardCollections[collectionNumber].cards[i].owner() == address(0)) {\\n    //             // _safeMint(to, tokenId);\\n    //             cardCollections[collectionNumber].cards[i].transferOwnership(to);\\n    //             break;\\n    //         }\\n    //     }\\n    // }\\n    \\n    // Donne le nombre de cartes d'un utilisateur\\n    function balanceOf(address owner) public view override returns (uint) {\\n        uint nb = 0;\\n        for (uint i = 0; i < collectionCount; i++) {\\n            nb += cardCollections[i].balanceOf(owner);\\n        }\\n        return nb;\\n    }\\n\\n    // Donne le propri\\u00e9taire d'une carte\\n    function ownerOf(uint tokenId) public view override returns (address) {\\n        for (uint256 i = 0; i < collectionCount; i++) {\\n            address owner = cardCollections[i].ownerOf(tokenId);\\n            if (owner != address(0))\\n                return owner;\\n        }\\n        return address(0);\\n    }\\n\\n    function getCollectionNbForCard(uint tokenId) public view returns (int) {\\n        for (int i = 0; i < int(collectionCount); i++) {\\n            if (cardCollections[uint(i)].isCardInCollection(tokenId)) {\\n                return i;\\n            }\\n        }\\n        return -1;\\n    }\\n\\n    // Transf\\u00e8re une carte d'un utilisateur \\u00e0 un autre\\n    function transferFrom(address from, address to, uint tokenId) public override {\\n        require(from == ownerOf(tokenId), \\\"CardOwnership: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"CardOwnership: transfer to the zero address\\\");\\n        int collectionNumber = getCollectionNbForCard(tokenId);\\n        require(collectionNumber != -1, \\\"CardOwnership: card does not exist\\\");\\n\\n        cardCollections[uint(collectionNumber)].getCard(tokenId).transferOwnership(to);\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    // R\\u00e9cup\\u00e8re des cartes\\n    function mintSomeCards(address to, uint quantity, uint collectionNumber) public {\\n        require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n\\n        cardCollections[collectionNumber].mintSomeCards(to, quantity);\\n    }\\n\\n    // R\\u00e9cup\\u00e8re une carte\\n    function mint(address to, uint tokenId, uint collectionNumber) public {\\n        require(collectionNumber < collectionCount, \\\"CardOwnership: collection does not exist\\\");\\n\\n        cardCollections[collectionNumber].mint(to, tokenId);\\n    }\\n\\n    /*function safeTransferFrom(address from, address to, uint tokenId, bytes data){\\n\\n    }\\n\\n    function safeTransferFrom(address from, address to, uint tokenId){\\n\\n    }\\n\\n    function approve(address to, uint tokenId) public view onlyOwner() {\\n        cardsApprovals[tokenId] = to;\\n        Approval(msg.sender, to, tokenId);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public view {\\n        ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function getApproved(uint tokenId){\\n\\n    }\\n\\n    function isApprovedForAll(address owner, bool operator){\\n\\n    }*/\\n\\n    function addACard(uint cardNumber) external returns (address) {\\n        GameCollection gameCollections = new GameCollection(\\\"Wizard\\\", 0);\\n\\t\\tcardCollections[collectionCount] = gameCollections;\\n\\t\\tcollectionCount++;\\n\\t\\tcardCollections[0].addCard(cardNumber, \\\"https://images.pokemontcg.io/xy1/1.png\\\");\\n        Card c = cardCollections[0].getCard(cardNumber);\\n        \\n        // return c.owner();\\n        return address(666);\\n\\t}\\n}\",\"keccak256\":\"0xd01c709435f079c9edd03b9526e9518407199bcd64f95135a19ae2235e4206df\"},\"src/GameCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"./Card.sol\\\";\\n\\ncontract GameCollection {\\n\\tstring public name;\\n\\tuint public cardCount;\\n\\tmapping(uint => Card) public cards;\\n\\n\\tconstructor(string memory _name, uint _cardCount) {\\n\\t\\tname = _name;\\n\\t\\tcardCount = _cardCount;\\n\\t}\\n\\n\\t// Donne le nombre de carte de la collection\\n\\tfunction getCardCount() public view returns (uint) {\\n\\t\\treturn cardCount;\\n\\t}\\n\\n\\t// Donne le nom de la collection\\n\\tfunction getName() public view returns (string memory) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\tfunction isCardInCollection(uint tokenId) public view returns (bool) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\n\\tfunction getCard(uint tokenId) public view returns (Card) {\\n\\t\\treturn cards[tokenId];\\n\\t}\\n\\n\\t// Donne le nombre de carte d'un utilisateur\\n\\tfunction balanceOf(address owner) public view returns (uint) {\\n\\t\\tuint nb = 0;\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == owner) {\\n\\t\\t\\t\\tnb++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn nb;\\n\\t}\\n\\n\\t// Donne l'adresse du propri\\u00e9taire d'une carte\\n\\tfunction ownerOf(uint tokenId) public view returns (address) {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].getId() == tokenId) {\\n\\t\\t\\t\\treturn cards[i].owner();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Ajoute une carte \\u00e0 la collection\\n\\tfunction addCard(uint id, string memory imgLink) public {\\n\\t\\tcards[cardCount++] = new Card(id, imgLink);\\n\\t}\\n\\n\\t// Mint une carte de la collection\\n\\tfunction mint(address to) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0)) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Mint une carte pr\\u00e9cise de la collection\\n\\tfunction mint(address to, uint tokenId) public {\\n\\t\\tfor (uint i = 0; i < cardCount; i++) {\\n\\t\\t\\tif (cards[i].owner() == address(0) && cards[i].getId() == tokenId) {\\n\\t\\t\\t\\tcards[i].transferOwnership(to);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Donne un nombre de carte d\\u00e9finit \\u00e0 un utilisateur\\n\\tfunction mintSomeCards(address to, uint quantity) public {\\n\\t\\tfor (uint i = 0; i < quantity; i++) { //TODO : ajouter des s\\u00e9curit\\u00e9s il ne faut pas ajouter une carte s'il n'y en a plus assez \\u00e0 mint\\n\\t\\t\\tmint(to);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x2aff66616a9ebee2c12151acb035cd42b69c05a27c0108624de356220166ae45\",\"license\":\"MIT\"},\"src/Main.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"./GameCollection.sol\\\";\\nimport \\\"./CardOwnership.sol\\\";\\n\\ncontract Main is CardOwnership {\\n\\taddress private administrateur;\\n\\n\\t/*int private _count; // la quantit\\u00e9 de collections de cartes\\n\\tmapping(int => GameCollection) private gameCollections; // les diff\\u00e9rentes extensions de cartes */\\n\\tconstructor() {\\n\\t\\tadministrateur = msg.sender;\\n\\t}\\n\\n\\tfunction createGameCollection(string calldata name, int cardCount) external {\\n\\t\\tGameCollection gameCollections = new GameCollection(name, 0);\\n\\t\\tcardCollections[collectionCount] = gameCollections;\\n\\t\\tcollectionCount++;\\n\\t}\\n\\n\\tfunction createGameCollection2() internal {\\n\\t\\tGameCollection gameCollections = new GameCollection(\\\"Wizard\\\", 0);\\n\\t\\tcardCollections[collectionCount] = gameCollections;\\n\\t\\tcollectionCount++;\\n\\t}\\n\\n\\t/*function addACard(uint cardNumber) external {\\n\\t\\t// GameCollection gameCollection = cardCollections[collectionNumber];\\n\\n\\t\\tcreateGameCollection2();\\n\\t\\t// Card card = new Card(cardNumber, \\\"https://images.pokemontcg.io/xy1/1.png\\\");\\n\\t\\tcardCollections[0].addCard(cardNumber, \\\"https://images.pokemontcg.io/xy1/1.png\\\");\\n\\t\\t// cardCollections[0].cards[0] = card;\\n\\t\\t// cardCollections[0].cardCount++;\\n\\t\\t// gameCollection.cardCount++;\\n\\t}*/\\n}\\n\",\"keccak256\":\"0x54f285cc78c02b0fd3420a47755ce5490dfe763ca8a28ef34e7c95ed60fb6ec7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"src/Main.sol:Main","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":317,"contract":"src/Main.sol:Main","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":319,"contract":"src/Main.sol:Main","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":323,"contract":"src/Main.sol:Main","label":"_owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":327,"contract":"src/Main.sol:Main","label":"_balances","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":331,"contract":"src/Main.sol:Main","label":"_tokenApprovals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":337,"contract":"src/Main.sol:Main","label":"_operatorApprovals","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3002,"contract":"src/Main.sol:Main","label":"cardCollections","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_contract(GameCollection)3593)"},{"astId":3004,"contract":"src/Main.sol:Main","label":"collectionCount","offset":0,"slot":"8","type":"t_uint256"},{"astId":3601,"contract":"src/Main.sol:Main","label":"administrateur","offset":0,"slot":"9","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(GameCollection)3593":{"encoding":"inplace","label":"contract GameCollection","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_contract(GameCollection)3593)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => contract GameCollection)","numberOfBytes":"32","value":"t_contract(GameCollection)3593"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}